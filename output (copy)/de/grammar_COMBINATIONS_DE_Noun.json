{
  "grammarEntries" : [ {
    "id" : "86",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Regierungsform von die Vizepr�sident von ($x | Person_NP)?", "Gib mir die Regierungsform von die Vizepr�sident von ($x | Person_NP)?", "Liste alle Regierungsform von die Vizepr�sident von ($x | Person_NP)? auf", "Liste die Regierungsform von die Vizepr�sident von ($x | Person_NP)? auf", "was ist die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "was sind Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "was war die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "was waren Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "Welche Typen sind die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "Welche Typen waren die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "Welcher Typ ist die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "Welcher Typ war die Regierungsform von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "87",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | GovernmentType_NP) die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "sind ($x | GovernmentType_NP) die Regierungsform von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "88",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die Enkel von ($x | Person_NP)?", "Gib mir den Enkel von die Enkel von ($x | Person_NP)?", "Gib mir die Enkel von die Enkel von ($x | Person_NP)?", "Liste alle Enkel von die Enkel von ($x | Person_NP)? auf", "Liste die Enkel von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Enkel von ($x | Person_NP)??", "wer ist die Enkel von die Enkel von ($x | Person_NP)??", "wer sind Enkel von die Enkel von ($x | Person_NP)??", "wer war die Enkel von die Enkel von ($x | Person_NP)??", "wer waren Enkel von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "89",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die B�rgermeister von ($x | City_NP)?", "Gib mir den Enkel von die B�rgermeister von ($x | City_NP)?", "Gib mir die Enkel von die B�rgermeister von ($x | City_NP)?", "Liste alle Enkel von die B�rgermeister von ($x | City_NP)? auf", "Liste die Enkel von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Enkel von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Enkel von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Enkel von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Enkel von die B�rgermeister von ($x | City_NP)??", "wer ist die Enkel von die B�rgermeister von ($x | City_NP)??", "wer sind Enkel von die B�rgermeister von ($x | City_NP)??", "wer war die Enkel von die B�rgermeister von ($x | City_NP)??", "wer waren Enkel von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "90",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die Kind von ($x | Person_NP)?", "Gib mir den Enkel von die Kind von ($x | Person_NP)?", "Gib mir die Enkel von die Kind von ($x | Person_NP)?", "Liste alle Enkel von die Kind von ($x | Person_NP)? auf", "Liste die Enkel von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Kind von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Kind von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Kind von ($x | Person_NP)??", "wer ist die Enkel von die Kind von ($x | Person_NP)??", "wer sind Enkel von die Kind von ($x | Person_NP)??", "wer war die Enkel von die Kind von ($x | Person_NP)??", "wer waren Enkel von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "91",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir den Enkel von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Enkel von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Enkel von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Enkel von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "wer sind Enkel von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "wer waren Enkel von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "92",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die Doktorvater von ($x | Person_NP)?", "Gib mir den Enkel von die Doktorvater von ($x | Person_NP)?", "Gib mir die Enkel von die Doktorvater von ($x | Person_NP)?", "Liste alle Enkel von die Doktorvater von ($x | Person_NP)? auf", "Liste die Enkel von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Doktorvater von ($x | Person_NP)??", "wer ist die Enkel von die Doktorvater von ($x | Person_NP)??", "wer sind Enkel von die Doktorvater von ($x | Person_NP)??", "wer war die Enkel von die Doktorvater von ($x | Person_NP)??", "wer waren Enkel von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "93",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die Tochter von ($x | Person_NP)?", "Gib mir den Enkel von die Tochter von ($x | Person_NP)?", "Gib mir die Enkel von die Tochter von ($x | Person_NP)?", "Liste alle Enkel von die Tochter von ($x | Person_NP)? auf", "Liste die Enkel von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Tochter von ($x | Person_NP)??", "wer ist die Enkel von die Tochter von ($x | Person_NP)??", "wer sind Enkel von die Tochter von ($x | Person_NP)??", "wer war die Enkel von die Tochter von ($x | Person_NP)??", "wer waren Enkel von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "94",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die Sohn von ($x | Person_NP)?", "Gib mir den Enkel von die Sohn von ($x | Person_NP)?", "Gib mir die Enkel von die Sohn von ($x | Person_NP)?", "Liste alle Enkel von die Sohn von ($x | Person_NP)? auf", "Liste die Enkel von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Sohn von ($x | Person_NP)??", "wer ist die Enkel von die Sohn von ($x | Person_NP)??", "wer sind Enkel von die Sohn von ($x | Person_NP)??", "wer war die Enkel von die Sohn von ($x | Person_NP)??", "wer waren Enkel von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "95",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die Nachfolger von ($x | Person_NP)?", "Gib mir den Enkel von die Nachfolger von ($x | Person_NP)?", "Gib mir die Enkel von die Nachfolger von ($x | Person_NP)?", "Liste alle Enkel von die Nachfolger von ($x | Person_NP)? auf", "Liste die Enkel von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Nachfolger von ($x | Person_NP)??", "wer ist die Enkel von die Nachfolger von ($x | Person_NP)??", "wer sind Enkel von die Nachfolger von ($x | Person_NP)??", "wer war die Enkel von die Nachfolger von ($x | Person_NP)??", "wer waren Enkel von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "96",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die Frau von ($x | Person_NP)?", "Gib mir den Enkel von die Frau von ($x | Person_NP)?", "Gib mir die Enkel von die Frau von ($x | Person_NP)?", "Liste alle Enkel von die Frau von ($x | Person_NP)? auf", "Liste die Enkel von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Frau von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Frau von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Frau von ($x | Person_NP)??", "wer ist die Enkel von die Frau von ($x | Person_NP)??", "wer sind Enkel von die Frau von ($x | Person_NP)??", "wer war die Enkel von die Frau von ($x | Person_NP)??", "wer waren Enkel von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "97",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir den Enkel von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Enkel von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Enkel von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Enkel von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Enkel von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "98",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von die Bandmitglieder von ($x | Band_NP)?", "Gib mir den Enkel von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Enkel von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Enkel von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Enkel von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Enkel von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Enkel von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Enkel von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Enkel von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Enkel von die Bandmitglieder von ($x | Band_NP)??", "wer sind Enkel von die Bandmitglieder von ($x | Band_NP)??", "wer war die Enkel von die Bandmitglieder von ($x | Band_NP)??", "wer waren Enkel von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "99",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Enkel von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Enkel von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "100",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Enkel von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Enkel von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "101",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Enkel von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Enkel von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "102",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Enkel von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "103",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Enkel von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Enkel von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "104",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Enkel von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Enkel von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "105",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Enkel von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Enkel von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "106",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Enkel von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Enkel von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "107",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Enkel von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Enkel von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "108",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Enkel von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "109",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Enkel von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Enkel von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "110",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle W�hrungen von die Vizepr�sident von ($x | Person_NP)?", "Gib mir die W�hrung von die Vizepr�sident von ($x | Person_NP)?", "Gib mir die W�hrungen von die Vizepr�sident von ($x | Person_NP)?", "Liste alle W�hrungen von die Vizepr�sident von ($x | Person_NP)? auf", "Liste die W�hrungen von die Vizepr�sident von ($x | Person_NP)? auf", "was ist die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "was sind W�hrungen von die Vizepr�sident von ($x | Person_NP)??", "was war die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "was waren W�hrungen von die Vizepr�sident von ($x | Person_NP)??", "Welche W�hrung ist die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "Welche W�hrung war die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "Welche W�hrungen sind die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "Welche W�hrungen waren die W�hrung von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "111",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Currency_NP) die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "sind ($x | Currency_NP) die W�hrungen von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "112",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den B�rgermeister von die Hauptstadt von ($x | Country_NP)?", "Welche dbo:Person ist die B�rgermeister von die Hauptstadt von ($x | Country_NP)??", "Welche dbo:Person war die B�rgermeister von die Hauptstadt von ($x | Country_NP)??", "Welche Personen sind die B�rgermeister von die Hauptstadt von ($x | Country_NP)??", "Welche Personen waren die B�rgermeister von die Hauptstadt von ($x | Country_NP)??", "wer ist die B�rgermeister von die Hauptstadt von ($x | Country_NP)??", "wer war die B�rgermeister von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "113",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die B�rgermeister von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "114",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Amtssprachen von die Vizepr�sident von ($x | Person_NP)?", "Gib mir die Amtssprache von die Vizepr�sident von ($x | Person_NP)?", "Gib mir die Amtssprachen von die Vizepr�sident von ($x | Person_NP)?", "Liste alle Amtssprachen von die Vizepr�sident von ($x | Person_NP)? auf", "Liste die Amtssprachen von die Vizepr�sident von ($x | Person_NP)? auf", "was ist die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "was sind Amtssprachen von die Vizepr�sident von ($x | Person_NP)??", "was war die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "was waren Amtssprachen von die Vizepr�sident von ($x | Person_NP)??", "Welche Sprache ist die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "Welche Sprache war die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "Welche Sprachen sind die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "Welche Sprachen waren die Amtssprache von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "115",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Language_NP) die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "sind ($x | Language_NP) die Amtssprachen von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "116",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die Enkel von ($x | Person_NP)?", "Gib mir die Kind von die Enkel von ($x | Person_NP)?", "Gib mir die Kinder von die Enkel von ($x | Person_NP)?", "Liste alle Kinder von die Enkel von ($x | Person_NP)? auf", "Liste die Kinder von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Kind von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Kind von die Enkel von ($x | Person_NP)??", "wer ist die Kind von die Enkel von ($x | Person_NP)??", "wer sind Kinder von die Enkel von ($x | Person_NP)??", "wer war die Kind von die Enkel von ($x | Person_NP)??", "wer waren Kinder von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "117",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die B�rgermeister von ($x | City_NP)?", "Gib mir die Kind von die B�rgermeister von ($x | City_NP)?", "Gib mir die Kinder von die B�rgermeister von ($x | City_NP)?", "Liste alle Kinder von die B�rgermeister von ($x | City_NP)? auf", "Liste die Kinder von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Kind von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Kind von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Kind von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Kind von die B�rgermeister von ($x | City_NP)??", "wer ist die Kind von die B�rgermeister von ($x | City_NP)??", "wer sind Kinder von die B�rgermeister von ($x | City_NP)??", "wer war die Kind von die B�rgermeister von ($x | City_NP)??", "wer waren Kinder von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "118",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die Kind von ($x | Person_NP)?", "Gib mir die Kind von die Kind von ($x | Person_NP)?", "Gib mir die Kinder von die Kind von ($x | Person_NP)?", "Liste alle Kinder von die Kind von ($x | Person_NP)? auf", "Liste die Kinder von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Kind von ($x | Person_NP)??", "Welche Personen sind die Kind von die Kind von ($x | Person_NP)??", "Welche Personen waren die Kind von die Kind von ($x | Person_NP)??", "wer ist die Kind von die Kind von ($x | Person_NP)??", "wer sind Kinder von die Kind von ($x | Person_NP)??", "wer war die Kind von die Kind von ($x | Person_NP)??", "wer waren Kinder von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "119",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Kind von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Kinder von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Kinder von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Kinder von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Kind von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Kind von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Kind von die Vizepr�sident unter ($x | Person_NP)??", "wer sind Kinder von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Kind von die Vizepr�sident unter ($x | Person_NP)??", "wer waren Kinder von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "120",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die Doktorvater von ($x | Person_NP)?", "Gib mir die Kind von die Doktorvater von ($x | Person_NP)?", "Gib mir die Kinder von die Doktorvater von ($x | Person_NP)?", "Liste alle Kinder von die Doktorvater von ($x | Person_NP)? auf", "Liste die Kinder von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Kind von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Kind von die Doktorvater von ($x | Person_NP)??", "wer ist die Kind von die Doktorvater von ($x | Person_NP)??", "wer sind Kinder von die Doktorvater von ($x | Person_NP)??", "wer war die Kind von die Doktorvater von ($x | Person_NP)??", "wer waren Kinder von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "121",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die Tochter von ($x | Person_NP)?", "Gib mir die Kind von die Tochter von ($x | Person_NP)?", "Gib mir die Kinder von die Tochter von ($x | Person_NP)?", "Liste alle Kinder von die Tochter von ($x | Person_NP)? auf", "Liste die Kinder von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Kind von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Kind von die Tochter von ($x | Person_NP)??", "wer ist die Kind von die Tochter von ($x | Person_NP)??", "wer sind Kinder von die Tochter von ($x | Person_NP)??", "wer war die Kind von die Tochter von ($x | Person_NP)??", "wer waren Kinder von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "122",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die Sohn von ($x | Person_NP)?", "Gib mir die Kind von die Sohn von ($x | Person_NP)?", "Gib mir die Kinder von die Sohn von ($x | Person_NP)?", "Liste alle Kinder von die Sohn von ($x | Person_NP)? auf", "Liste die Kinder von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Kind von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Kind von die Sohn von ($x | Person_NP)??", "wer ist die Kind von die Sohn von ($x | Person_NP)??", "wer sind Kinder von die Sohn von ($x | Person_NP)??", "wer war die Kind von die Sohn von ($x | Person_NP)??", "wer waren Kinder von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "123",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die Nachfolger von ($x | Person_NP)?", "Gib mir die Kind von die Nachfolger von ($x | Person_NP)?", "Gib mir die Kinder von die Nachfolger von ($x | Person_NP)?", "Liste alle Kinder von die Nachfolger von ($x | Person_NP)? auf", "Liste die Kinder von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Kind von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Kind von die Nachfolger von ($x | Person_NP)??", "wer ist die Kind von die Nachfolger von ($x | Person_NP)??", "wer sind Kinder von die Nachfolger von ($x | Person_NP)??", "wer war die Kind von die Nachfolger von ($x | Person_NP)??", "wer waren Kinder von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "124",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die Frau von ($x | Person_NP)?", "Gib mir die Kind von die Frau von ($x | Person_NP)?", "Gib mir die Kinder von die Frau von ($x | Person_NP)?", "Liste alle Kinder von die Frau von ($x | Person_NP)? auf", "Liste die Kinder von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Frau von ($x | Person_NP)??", "Welche Personen sind die Kind von die Frau von ($x | Person_NP)??", "Welche Personen waren die Kind von die Frau von ($x | Person_NP)??", "wer ist die Kind von die Frau von ($x | Person_NP)??", "wer sind Kinder von die Frau von ($x | Person_NP)??", "wer war die Kind von die Frau von ($x | Person_NP)??", "wer waren Kinder von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "125",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Kind von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Kinder von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Kinder von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Kinder von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Kinder von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Kinder von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "126",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Kind von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Kinder von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Kinder von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Kinder von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Kind von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Kind von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Kind von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Kind von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Kind von die Bandmitglieder von ($x | Band_NP)??", "wer sind Kinder von die Bandmitglieder von ($x | Band_NP)??", "wer war die Kind von die Bandmitglieder von ($x | Band_NP)??", "wer waren Kinder von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "127",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Kind von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Kinder von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "128",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Kind von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Kinder von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "129",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Kind von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Kinder von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "130",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Kind von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Kinder von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "131",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Kind von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Kinder von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "132",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Kind von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Kinder von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "133",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Kind von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Kinder von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "134",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Kind von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Kinder von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "135",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Kind von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Kinder von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "136",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Kinder von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "137",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Kind von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Kinder von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "138",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Enkel von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Enkel von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Enkel von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Enkel von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Enkel von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "139",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)?", "Gib mir den Vizepr�sident unter die B�rgermeister von ($x | City_NP)?", "Gib mir die Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)?", "Liste alle Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)? auf", "Liste die Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "wer ist die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "wer sind Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)??", "wer war die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "wer waren Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "140",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Kind von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Kind von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Kind von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Kind von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Kind von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Kind von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Kind von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Kind von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Kind von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Kind von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "141",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)??", "wer war die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "142",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Doktorvater von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "143",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Tochter von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Tochter von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Tochter von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Tochter von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Tochter von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "144",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Sohn von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Sohn von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Sohn von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Sohn von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Sohn von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "145",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Nachfolger von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "146",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Frau von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Frau von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Frau von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Frau von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Frau von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Frau von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Frau von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Frau von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Frau von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Frau von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "147",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir den Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "148",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)?", "Gib mir den Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)?", "Liste alle Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "wer ist die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "wer sind Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)??", "wer war die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "wer waren Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "149",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Vizepr�sidenten unter die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "150",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "151",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Vizepr�sident unter die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Vizepr�sidenten unter die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "152",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "153",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "154",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Vizepr�sidenten unter die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "155",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Vizepr�sidenten unter die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "156",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "157",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Vizepr�sident unter die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Vizepr�sidenten unter die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "158",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "159",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "160",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Lagen in das Lage in ($x | Location_NP)?", "Gib mir das Lage in das Lage in ($x | Location_NP)?", "Gib mir die Lagen in das Lage in ($x | Location_NP)?", "Liste alle Lagen in das Lage in ($x | Location_NP)? auf", "Liste die Lagen in das Lage in ($x | Location_NP)? auf", "was ist das Lage in das Lage in ($x | Location_NP)??", "was sind Lagen in das Lage in ($x | Location_NP)??", "was war das Lage in das Lage in ($x | Location_NP)??", "was waren Lagen in das Lage in ($x | Location_NP)??", "Welche Lage ist das Lage in das Lage in ($x | Location_NP)??", "Welche Lage war das Lage in das Lage in ($x | Location_NP)??", "Welche Lagen sind das Lage in das Lage in ($x | Location_NP)??", "Welche Lagen waren das Lage in das Lage in ($x | Location_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "161",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Lagen in die Hauptstadt von ($x | Country_NP)?", "Gib mir das Lage in die Hauptstadt von ($x | Country_NP)?", "Gib mir die Lagen in die Hauptstadt von ($x | Country_NP)?", "Liste alle Lagen in die Hauptstadt von ($x | Country_NP)? auf", "Liste die Lagen in die Hauptstadt von ($x | Country_NP)? auf", "was ist das Lage in die Hauptstadt von ($x | Country_NP)??", "was sind Lagen in die Hauptstadt von ($x | Country_NP)??", "was war das Lage in die Hauptstadt von ($x | Country_NP)??", "was waren Lagen in die Hauptstadt von ($x | Country_NP)??", "Welche Lage ist das Lage in die Hauptstadt von ($x | Country_NP)??", "Welche Lage war das Lage in die Hauptstadt von ($x | Country_NP)??", "Welche Lagen sind das Lage in die Hauptstadt von ($x | Country_NP)??", "Welche Lagen waren das Lage in die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "162",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Lagen in das Hauptquartier von ($x | Organisation_NP)?", "Gib mir das Lage in das Hauptquartier von ($x | Organisation_NP)?", "Gib mir die Lagen in das Hauptquartier von ($x | Organisation_NP)?", "Liste alle Lagen in das Hauptquartier von ($x | Organisation_NP)? auf", "Liste die Lagen in das Hauptquartier von ($x | Organisation_NP)? auf", "was ist das Lage in das Hauptquartier von ($x | Organisation_NP)??", "was sind Lagen in das Hauptquartier von ($x | Organisation_NP)??", "was war das Lage in das Hauptquartier von ($x | Organisation_NP)??", "was waren Lagen in das Hauptquartier von ($x | Organisation_NP)??", "Welche Lage ist das Lage in das Hauptquartier von ($x | Organisation_NP)??", "Welche Lage war das Lage in das Hauptquartier von ($x | Organisation_NP)??", "Welche Lagen sind das Lage in das Hauptquartier von ($x | Organisation_NP)??", "Welche Lagen waren das Lage in das Hauptquartier von ($x | Organisation_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "163",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Lagen in die Vizepr�sident von ($x | Person_NP)?", "Gib mir das Lage in die Vizepr�sident von ($x | Person_NP)?", "Gib mir die Lagen in die Vizepr�sident von ($x | Person_NP)?", "Liste alle Lagen in die Vizepr�sident von ($x | Person_NP)? auf", "Liste die Lagen in die Vizepr�sident von ($x | Person_NP)? auf", "was ist das Lage in die Vizepr�sident von ($x | Person_NP)??", "was sind Lagen in die Vizepr�sident von ($x | Person_NP)??", "was war das Lage in die Vizepr�sident von ($x | Person_NP)??", "was waren Lagen in die Vizepr�sident von ($x | Person_NP)??", "Welche Lage ist das Lage in die Vizepr�sident von ($x | Person_NP)??", "Welche Lage war das Lage in die Vizepr�sident von ($x | Person_NP)??", "Welche Lagen sind das Lage in die Vizepr�sident von ($x | Person_NP)??", "Welche Lagen waren das Lage in die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "164",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Place_NP) das Lage in das Lage in ($x | Location_NP)??", "sind ($x | Place_NP) die Lagen in das Lage in ($x | Location_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "165",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Place_NP) das Lage in die Hauptstadt von ($x | Country_NP)??", "sind ($x | Place_NP) die Lagen in die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "166",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Place_NP) das Lage in das Hauptquartier von ($x | Organisation_NP)??", "sind ($x | Place_NP) die Lagen in das Hauptquartier von ($x | Organisation_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "167",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Place_NP) das Lage in die Vizepr�sident von ($x | Person_NP)??", "sind ($x | Place_NP) die Lagen in die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "168",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir die Hauptstadt von die Vizepr�sident von ($x | Person_NP)?", "was ist die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??", "was war die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??", "Welche Stadt ist die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??", "Welche Stadt war die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??", "Welche St�dte sind die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??", "Welche St�dte waren die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "169",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | City_NP) die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "170",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die Enkel von ($x | Person_NP)?", "Gib mir den Doktorvater von die Enkel von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Enkel von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Enkel von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Enkel von ($x | Person_NP)??", "wer ist die Doktorvater von die Enkel von ($x | Person_NP)??", "wer sind Doktorv�ter von die Enkel von ($x | Person_NP)??", "wer war die Doktorvater von die Enkel von ($x | Person_NP)??", "wer waren Doktorv�ter von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "171",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die B�rgermeister von ($x | City_NP)?", "Gib mir den Doktorvater von die B�rgermeister von ($x | City_NP)?", "Gib mir die Doktorv�ter von die B�rgermeister von ($x | City_NP)?", "Liste alle Doktorv�ter von die B�rgermeister von ($x | City_NP)? auf", "Liste die Doktorv�ter von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Doktorvater von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Doktorvater von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Doktorvater von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Doktorvater von die B�rgermeister von ($x | City_NP)??", "wer ist die Doktorvater von die B�rgermeister von ($x | City_NP)??", "wer sind Doktorv�ter von die B�rgermeister von ($x | City_NP)??", "wer war die Doktorvater von die B�rgermeister von ($x | City_NP)??", "wer waren Doktorv�ter von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "172",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die Kind von ($x | Person_NP)?", "Gib mir den Doktorvater von die Kind von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Kind von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Kind von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Kind von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Kind von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Kind von ($x | Person_NP)??", "wer ist die Doktorvater von die Kind von ($x | Person_NP)??", "wer sind Doktorv�ter von die Kind von ($x | Person_NP)??", "wer war die Doktorvater von die Kind von ($x | Person_NP)??", "wer waren Doktorv�ter von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "173",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir den Doktorvater von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "wer sind Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "wer waren Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "174",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die Doktorvater von ($x | Person_NP)?", "Gib mir den Doktorvater von die Doktorvater von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Doktorvater von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Doktorvater von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Doktorvater von ($x | Person_NP)??", "wer ist die Doktorvater von die Doktorvater von ($x | Person_NP)??", "wer sind Doktorv�ter von die Doktorvater von ($x | Person_NP)??", "wer war die Doktorvater von die Doktorvater von ($x | Person_NP)??", "wer waren Doktorv�ter von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "175",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die Tochter von ($x | Person_NP)?", "Gib mir den Doktorvater von die Tochter von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Tochter von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Tochter von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Tochter von ($x | Person_NP)??", "wer ist die Doktorvater von die Tochter von ($x | Person_NP)??", "wer sind Doktorv�ter von die Tochter von ($x | Person_NP)??", "wer war die Doktorvater von die Tochter von ($x | Person_NP)??", "wer waren Doktorv�ter von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "176",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die Sohn von ($x | Person_NP)?", "Gib mir den Doktorvater von die Sohn von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Sohn von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Sohn von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Sohn von ($x | Person_NP)??", "wer ist die Doktorvater von die Sohn von ($x | Person_NP)??", "wer sind Doktorv�ter von die Sohn von ($x | Person_NP)??", "wer war die Doktorvater von die Sohn von ($x | Person_NP)??", "wer waren Doktorv�ter von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "177",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die Nachfolger von ($x | Person_NP)?", "Gib mir den Doktorvater von die Nachfolger von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Nachfolger von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Nachfolger von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Nachfolger von ($x | Person_NP)??", "wer ist die Doktorvater von die Nachfolger von ($x | Person_NP)??", "wer sind Doktorv�ter von die Nachfolger von ($x | Person_NP)??", "wer war die Doktorvater von die Nachfolger von ($x | Person_NP)??", "wer waren Doktorv�ter von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "178",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die Frau von ($x | Person_NP)?", "Gib mir den Doktorvater von die Frau von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Frau von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Frau von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Frau von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Frau von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Frau von ($x | Person_NP)??", "wer ist die Doktorvater von die Frau von ($x | Person_NP)??", "wer sind Doktorv�ter von die Frau von ($x | Person_NP)??", "wer war die Doktorvater von die Frau von ($x | Person_NP)??", "wer waren Doktorv�ter von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "179",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir den Doktorvater von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "180",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von die Bandmitglieder von ($x | Band_NP)?", "Gib mir den Doktorvater von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Doktorv�ter von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Doktorv�ter von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Doktorv�ter von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "wer sind Doktorv�ter von die Bandmitglieder von ($x | Band_NP)??", "wer war die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "wer waren Doktorv�ter von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "181",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Doktorvater von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Doktorv�ter von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "182",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Doktorvater von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Doktorv�ter von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "183",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Doktorvater von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Doktorv�ter von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "184",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "185",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Doktorvater von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Doktorv�ter von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "186",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Doktorvater von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Doktorv�ter von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "187",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Doktorvater von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Doktorv�ter von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "188",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Doktorvater von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Doktorv�ter von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "189",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Doktorvater von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Doktorv�ter von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "190",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "191",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Doktorv�ter von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "192",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die Enkel von ($x | Person_NP)?", "Gib mir die Musik von die Enkel von ($x | Person_NP)?", "Gib mir die Musiken von die Enkel von ($x | Person_NP)?", "Liste alle Musiken von die Enkel von ($x | Person_NP)? auf", "Liste die Musiken von die Enkel von ($x | Person_NP)? auf", "was ist die Musik von die Enkel von ($x | Person_NP)??", "was sind Musiken von die Enkel von ($x | Person_NP)??", "was war die Musik von die Enkel von ($x | Person_NP)??", "was waren Musiken von die Enkel von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Musik von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Musik von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "193",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die B�rgermeister von ($x | City_NP)?", "Gib mir die Musik von die B�rgermeister von ($x | City_NP)?", "Gib mir die Musiken von die B�rgermeister von ($x | City_NP)?", "Liste alle Musiken von die B�rgermeister von ($x | City_NP)? auf", "Liste die Musiken von die B�rgermeister von ($x | City_NP)? auf", "was ist die Musik von die B�rgermeister von ($x | City_NP)??", "was sind Musiken von die B�rgermeister von ($x | City_NP)??", "was war die Musik von die B�rgermeister von ($x | City_NP)??", "was waren Musiken von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person ist die Musik von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Musik von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Musik von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Musik von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "194",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die Kind von ($x | Person_NP)?", "Gib mir die Musik von die Kind von ($x | Person_NP)?", "Gib mir die Musiken von die Kind von ($x | Person_NP)?", "Liste alle Musiken von die Kind von ($x | Person_NP)? auf", "Liste die Musiken von die Kind von ($x | Person_NP)? auf", "was ist die Musik von die Kind von ($x | Person_NP)??", "was sind Musiken von die Kind von ($x | Person_NP)??", "was war die Musik von die Kind von ($x | Person_NP)??", "was waren Musiken von die Kind von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Kind von ($x | Person_NP)??", "Welche Personen sind die Musik von die Kind von ($x | Person_NP)??", "Welche Personen waren die Musik von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "195",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Musik von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Musiken von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Musiken von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Musiken von die Vizepr�sident unter ($x | Person_NP)? auf", "was ist die Musik von die Vizepr�sident unter ($x | Person_NP)??", "was sind Musiken von die Vizepr�sident unter ($x | Person_NP)??", "was war die Musik von die Vizepr�sident unter ($x | Person_NP)??", "was waren Musiken von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Musik von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Musik von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "196",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die Doktorvater von ($x | Person_NP)?", "Gib mir die Musik von die Doktorvater von ($x | Person_NP)?", "Gib mir die Musiken von die Doktorvater von ($x | Person_NP)?", "Liste alle Musiken von die Doktorvater von ($x | Person_NP)? auf", "Liste die Musiken von die Doktorvater von ($x | Person_NP)? auf", "was ist die Musik von die Doktorvater von ($x | Person_NP)??", "was sind Musiken von die Doktorvater von ($x | Person_NP)??", "was war die Musik von die Doktorvater von ($x | Person_NP)??", "was waren Musiken von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Musik von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Musik von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "197",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die Tochter von ($x | Person_NP)?", "Gib mir die Musik von die Tochter von ($x | Person_NP)?", "Gib mir die Musiken von die Tochter von ($x | Person_NP)?", "Liste alle Musiken von die Tochter von ($x | Person_NP)? auf", "Liste die Musiken von die Tochter von ($x | Person_NP)? auf", "was ist die Musik von die Tochter von ($x | Person_NP)??", "was sind Musiken von die Tochter von ($x | Person_NP)??", "was war die Musik von die Tochter von ($x | Person_NP)??", "was waren Musiken von die Tochter von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Musik von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Musik von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "198",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die Sohn von ($x | Person_NP)?", "Gib mir die Musik von die Sohn von ($x | Person_NP)?", "Gib mir die Musiken von die Sohn von ($x | Person_NP)?", "Liste alle Musiken von die Sohn von ($x | Person_NP)? auf", "Liste die Musiken von die Sohn von ($x | Person_NP)? auf", "was ist die Musik von die Sohn von ($x | Person_NP)??", "was sind Musiken von die Sohn von ($x | Person_NP)??", "was war die Musik von die Sohn von ($x | Person_NP)??", "was waren Musiken von die Sohn von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Musik von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Musik von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "199",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die Nachfolger von ($x | Person_NP)?", "Gib mir die Musik von die Nachfolger von ($x | Person_NP)?", "Gib mir die Musiken von die Nachfolger von ($x | Person_NP)?", "Liste alle Musiken von die Nachfolger von ($x | Person_NP)? auf", "Liste die Musiken von die Nachfolger von ($x | Person_NP)? auf", "was ist die Musik von die Nachfolger von ($x | Person_NP)??", "was sind Musiken von die Nachfolger von ($x | Person_NP)??", "was war die Musik von die Nachfolger von ($x | Person_NP)??", "was waren Musiken von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Musik von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Musik von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "200",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die Frau von ($x | Person_NP)?", "Gib mir die Musik von die Frau von ($x | Person_NP)?", "Gib mir die Musiken von die Frau von ($x | Person_NP)?", "Liste alle Musiken von die Frau von ($x | Person_NP)? auf", "Liste die Musiken von die Frau von ($x | Person_NP)? auf", "was ist die Musik von die Frau von ($x | Person_NP)??", "was sind Musiken von die Frau von ($x | Person_NP)??", "was war die Musik von die Frau von ($x | Person_NP)??", "was waren Musiken von die Frau von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Frau von ($x | Person_NP)??", "Welche Personen sind die Musik von die Frau von ($x | Person_NP)??", "Welche Personen waren die Musik von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "201",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Musik von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Musiken von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Musiken von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Musiken von die Herausgeber von ($x | WrittenWork_NP)? auf", "was ist die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "was sind Musiken von die Herausgeber von ($x | WrittenWork_NP)??", "was war die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "was waren Musiken von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person ist die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Musik von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "202",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Musik von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Musiken von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Musiken von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Musiken von die Bandmitglieder von ($x | Band_NP)? auf", "was ist die Musik von die Bandmitglieder von ($x | Band_NP)??", "was sind Musiken von die Bandmitglieder von ($x | Band_NP)??", "was war die Musik von die Bandmitglieder von ($x | Band_NP)??", "was waren Musiken von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person ist die Musik von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Musik von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Musik von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Musik von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "203",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Enkel von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "204",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die B�rgermeister von ($x | City_NP)??", "sind ($x | Musical_NP) die Musiken von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "205",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Kind von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "206",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Vizepr�sident unter ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "207",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Doktorvater von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "208",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Tochter von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "209",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Sohn von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "210",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Nachfolger von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "211",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Frau von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "212",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "sind ($x | Musical_NP) die Musiken von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "213",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Bandmitglieder von ($x | Band_NP)??", "sind ($x | Musical_NP) die Musiken von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "214",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Spitznamen von die Hauptstadt von ($x | Country_NP)?", "Gib mir den Spitzname von die Hauptstadt von ($x | Country_NP)?", "Gib mir die Spitznamen von die Hauptstadt von ($x | Country_NP)?", "Liste alle Spitznamen von die Hauptstadt von ($x | Country_NP)? auf", "Liste die Spitznamen von die Hauptstadt von ($x | Country_NP)? auf", "was ist die Spitzname von die Hauptstadt von ($x | Country_NP)??", "was sind Spitznamen von die Hauptstadt von ($x | Country_NP)??", "was war die Spitzname von die Hauptstadt von ($x | Country_NP)??", "was waren Spitznamen von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "215",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | THING_NP) die Spitzname von die Hauptstadt von ($x | Country_NP)??", "sind ($x | THING_NP) die Spitznamen von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "216",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von das Lage in ($x | Location_NP)?", "was ist die Gesamteinwohnerzahl von das Lage in ($x | Location_NP)??", "was war die Gesamteinwohnerzahl von das Lage in ($x | Location_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "217",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von die Hauptstadt von ($x | Country_NP)?", "was ist die Gesamteinwohnerzahl von die Hauptstadt von ($x | Country_NP)??", "was war die Gesamteinwohnerzahl von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "218",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von das Hauptquartier von ($x | Organisation_NP)?", "was ist die Gesamteinwohnerzahl von das Hauptquartier von ($x | Organisation_NP)??", "was war die Gesamteinwohnerzahl von das Hauptquartier von ($x | Organisation_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "219",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von die Vizepr�sident von ($x | Person_NP)?", "was ist die Gesamteinwohnerzahl von die Vizepr�sident von ($x | Person_NP)??", "was war die Gesamteinwohnerzahl von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "220",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Number_NP) die Gesamteinwohnerzahl von das Lage in ($x | Location_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "221",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Number_NP) die Gesamteinwohnerzahl von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "222",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Number_NP) die Gesamteinwohnerzahl von das Hauptquartier von ($x | Organisation_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "223",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Number_NP) die Gesamteinwohnerzahl von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "224",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die Enkel von ($x | Person_NP)?", "Gib mir die Tochter von die Enkel von ($x | Person_NP)?", "Gib mir die T�chter von die Enkel von ($x | Person_NP)?", "Liste alle T�chter von die Enkel von ($x | Person_NP)? auf", "Liste die T�chter von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Enkel von ($x | Person_NP)??", "wer ist die Tochter von die Enkel von ($x | Person_NP)??", "wer sind T�chter von die Enkel von ($x | Person_NP)??", "wer war die Tochter von die Enkel von ($x | Person_NP)??", "wer waren T�chter von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "225",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die B�rgermeister von ($x | City_NP)?", "Gib mir die Tochter von die B�rgermeister von ($x | City_NP)?", "Gib mir die T�chter von die B�rgermeister von ($x | City_NP)?", "Liste alle T�chter von die B�rgermeister von ($x | City_NP)? auf", "Liste die T�chter von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Tochter von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Tochter von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Tochter von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Tochter von die B�rgermeister von ($x | City_NP)??", "wer ist die Tochter von die B�rgermeister von ($x | City_NP)??", "wer sind T�chter von die B�rgermeister von ($x | City_NP)??", "wer war die Tochter von die B�rgermeister von ($x | City_NP)??", "wer waren T�chter von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "226",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die Kind von ($x | Person_NP)?", "Gib mir die Tochter von die Kind von ($x | Person_NP)?", "Gib mir die T�chter von die Kind von ($x | Person_NP)?", "Liste alle T�chter von die Kind von ($x | Person_NP)? auf", "Liste die T�chter von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Kind von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Kind von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Kind von ($x | Person_NP)??", "wer ist die Tochter von die Kind von ($x | Person_NP)??", "wer sind T�chter von die Kind von ($x | Person_NP)??", "wer war die Tochter von die Kind von ($x | Person_NP)??", "wer waren T�chter von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "227",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Tochter von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die T�chter von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle T�chter von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die T�chter von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "wer sind T�chter von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "wer waren T�chter von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "228",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die Doktorvater von ($x | Person_NP)?", "Gib mir die Tochter von die Doktorvater von ($x | Person_NP)?", "Gib mir die T�chter von die Doktorvater von ($x | Person_NP)?", "Liste alle T�chter von die Doktorvater von ($x | Person_NP)? auf", "Liste die T�chter von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Doktorvater von ($x | Person_NP)??", "wer ist die Tochter von die Doktorvater von ($x | Person_NP)??", "wer sind T�chter von die Doktorvater von ($x | Person_NP)??", "wer war die Tochter von die Doktorvater von ($x | Person_NP)??", "wer waren T�chter von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "229",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die Tochter von ($x | Person_NP)?", "Gib mir die Tochter von die Tochter von ($x | Person_NP)?", "Gib mir die T�chter von die Tochter von ($x | Person_NP)?", "Liste alle T�chter von die Tochter von ($x | Person_NP)? auf", "Liste die T�chter von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Tochter von ($x | Person_NP)??", "wer ist die Tochter von die Tochter von ($x | Person_NP)??", "wer sind T�chter von die Tochter von ($x | Person_NP)??", "wer war die Tochter von die Tochter von ($x | Person_NP)??", "wer waren T�chter von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "230",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die Sohn von ($x | Person_NP)?", "Gib mir die Tochter von die Sohn von ($x | Person_NP)?", "Gib mir die T�chter von die Sohn von ($x | Person_NP)?", "Liste alle T�chter von die Sohn von ($x | Person_NP)? auf", "Liste die T�chter von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Sohn von ($x | Person_NP)??", "wer ist die Tochter von die Sohn von ($x | Person_NP)??", "wer sind T�chter von die Sohn von ($x | Person_NP)??", "wer war die Tochter von die Sohn von ($x | Person_NP)??", "wer waren T�chter von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "231",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die Nachfolger von ($x | Person_NP)?", "Gib mir die Tochter von die Nachfolger von ($x | Person_NP)?", "Gib mir die T�chter von die Nachfolger von ($x | Person_NP)?", "Liste alle T�chter von die Nachfolger von ($x | Person_NP)? auf", "Liste die T�chter von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Nachfolger von ($x | Person_NP)??", "wer ist die Tochter von die Nachfolger von ($x | Person_NP)??", "wer sind T�chter von die Nachfolger von ($x | Person_NP)??", "wer war die Tochter von die Nachfolger von ($x | Person_NP)??", "wer waren T�chter von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "232",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die Frau von ($x | Person_NP)?", "Gib mir die Tochter von die Frau von ($x | Person_NP)?", "Gib mir die T�chter von die Frau von ($x | Person_NP)?", "Liste alle T�chter von die Frau von ($x | Person_NP)? auf", "Liste die T�chter von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Frau von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Frau von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Frau von ($x | Person_NP)??", "wer ist die Tochter von die Frau von ($x | Person_NP)??", "wer sind T�chter von die Frau von ($x | Person_NP)??", "wer war die Tochter von die Frau von ($x | Person_NP)??", "wer waren T�chter von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "233",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Tochter von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die T�chter von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle T�chter von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die T�chter von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind T�chter von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren T�chter von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "234",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Tochter von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die T�chter von die Bandmitglieder von ($x | Band_NP)?", "Liste alle T�chter von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die T�chter von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Tochter von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Tochter von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Tochter von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Tochter von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Tochter von die Bandmitglieder von ($x | Band_NP)??", "wer sind T�chter von die Bandmitglieder von ($x | Band_NP)??", "wer war die Tochter von die Bandmitglieder von ($x | Band_NP)??", "wer waren T�chter von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "235",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Tochter von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die T�chter von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "236",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Tochter von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die T�chter von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "237",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Tochter von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die T�chter von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "238",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die T�chter von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "239",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Tochter von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die T�chter von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "240",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Tochter von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die T�chter von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "241",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Tochter von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die T�chter von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "242",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Tochter von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die T�chter von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "243",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Tochter von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die T�chter von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "244",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die T�chter von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "245",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Tochter von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die T�chter von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "246",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die Enkel von ($x | Person_NP)?", "Gib mir die Sohn von die Enkel von ($x | Person_NP)?", "Gib mir die S�hne von die Enkel von ($x | Person_NP)?", "Liste alle S�hne von die Enkel von ($x | Person_NP)? auf", "Liste die S�hne von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Enkel von ($x | Person_NP)??", "wer ist die Sohn von die Enkel von ($x | Person_NP)??", "wer sind S�hne von die Enkel von ($x | Person_NP)??", "wer war die Sohn von die Enkel von ($x | Person_NP)??", "wer waren S�hne von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "247",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die B�rgermeister von ($x | City_NP)?", "Gib mir die Sohn von die B�rgermeister von ($x | City_NP)?", "Gib mir die S�hne von die B�rgermeister von ($x | City_NP)?", "Liste alle S�hne von die B�rgermeister von ($x | City_NP)? auf", "Liste die S�hne von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Sohn von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Sohn von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Sohn von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Sohn von die B�rgermeister von ($x | City_NP)??", "wer ist die Sohn von die B�rgermeister von ($x | City_NP)??", "wer sind S�hne von die B�rgermeister von ($x | City_NP)??", "wer war die Sohn von die B�rgermeister von ($x | City_NP)??", "wer waren S�hne von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "248",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die Kind von ($x | Person_NP)?", "Gib mir die Sohn von die Kind von ($x | Person_NP)?", "Gib mir die S�hne von die Kind von ($x | Person_NP)?", "Liste alle S�hne von die Kind von ($x | Person_NP)? auf", "Liste die S�hne von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Kind von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Kind von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Kind von ($x | Person_NP)??", "wer ist die Sohn von die Kind von ($x | Person_NP)??", "wer sind S�hne von die Kind von ($x | Person_NP)??", "wer war die Sohn von die Kind von ($x | Person_NP)??", "wer waren S�hne von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "249",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Sohn von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die S�hne von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle S�hne von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die S�hne von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "wer sind S�hne von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "wer waren S�hne von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "250",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die Doktorvater von ($x | Person_NP)?", "Gib mir die Sohn von die Doktorvater von ($x | Person_NP)?", "Gib mir die S�hne von die Doktorvater von ($x | Person_NP)?", "Liste alle S�hne von die Doktorvater von ($x | Person_NP)? auf", "Liste die S�hne von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Doktorvater von ($x | Person_NP)??", "wer ist die Sohn von die Doktorvater von ($x | Person_NP)??", "wer sind S�hne von die Doktorvater von ($x | Person_NP)??", "wer war die Sohn von die Doktorvater von ($x | Person_NP)??", "wer waren S�hne von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "251",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die Tochter von ($x | Person_NP)?", "Gib mir die Sohn von die Tochter von ($x | Person_NP)?", "Gib mir die S�hne von die Tochter von ($x | Person_NP)?", "Liste alle S�hne von die Tochter von ($x | Person_NP)? auf", "Liste die S�hne von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Tochter von ($x | Person_NP)??", "wer ist die Sohn von die Tochter von ($x | Person_NP)??", "wer sind S�hne von die Tochter von ($x | Person_NP)??", "wer war die Sohn von die Tochter von ($x | Person_NP)??", "wer waren S�hne von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "252",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die Sohn von ($x | Person_NP)?", "Gib mir die Sohn von die Sohn von ($x | Person_NP)?", "Gib mir die S�hne von die Sohn von ($x | Person_NP)?", "Liste alle S�hne von die Sohn von ($x | Person_NP)? auf", "Liste die S�hne von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Sohn von ($x | Person_NP)??", "wer ist die Sohn von die Sohn von ($x | Person_NP)??", "wer sind S�hne von die Sohn von ($x | Person_NP)??", "wer war die Sohn von die Sohn von ($x | Person_NP)??", "wer waren S�hne von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "253",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die Nachfolger von ($x | Person_NP)?", "Gib mir die Sohn von die Nachfolger von ($x | Person_NP)?", "Gib mir die S�hne von die Nachfolger von ($x | Person_NP)?", "Liste alle S�hne von die Nachfolger von ($x | Person_NP)? auf", "Liste die S�hne von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Nachfolger von ($x | Person_NP)??", "wer ist die Sohn von die Nachfolger von ($x | Person_NP)??", "wer sind S�hne von die Nachfolger von ($x | Person_NP)??", "wer war die Sohn von die Nachfolger von ($x | Person_NP)??", "wer waren S�hne von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "254",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die Frau von ($x | Person_NP)?", "Gib mir die Sohn von die Frau von ($x | Person_NP)?", "Gib mir die S�hne von die Frau von ($x | Person_NP)?", "Liste alle S�hne von die Frau von ($x | Person_NP)? auf", "Liste die S�hne von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Frau von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Frau von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Frau von ($x | Person_NP)??", "wer ist die Sohn von die Frau von ($x | Person_NP)??", "wer sind S�hne von die Frau von ($x | Person_NP)??", "wer war die Sohn von die Frau von ($x | Person_NP)??", "wer waren S�hne von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "255",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Sohn von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die S�hne von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle S�hne von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die S�hne von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind S�hne von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren S�hne von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "256",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Sohn von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die S�hne von die Bandmitglieder von ($x | Band_NP)?", "Liste alle S�hne von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die S�hne von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Sohn von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Sohn von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Sohn von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Sohn von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Sohn von die Bandmitglieder von ($x | Band_NP)??", "wer sind S�hne von die Bandmitglieder von ($x | Band_NP)??", "wer war die Sohn von die Bandmitglieder von ($x | Band_NP)??", "wer waren S�hne von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "257",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Sohn von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die S�hne von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "258",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Sohn von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die S�hne von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "259",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Sohn von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die S�hne von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "260",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die S�hne von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "261",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Sohn von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die S�hne von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "262",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Sohn von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die S�hne von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "263",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Sohn von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die S�hne von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "264",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Sohn von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die S�hne von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "265",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Sohn von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die S�hne von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "266",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die S�hne von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "267",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Sohn von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die S�hne von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "268",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vorwahl von das Lage in ($x | Location_NP)?", "Gib mir die Vorwahl von das Lage in ($x | Location_NP)?", "Liste alle Vorwahl von das Lage in ($x | Location_NP)? auf", "Liste die Vorwahl von das Lage in ($x | Location_NP)? auf", "was ist die Vorwahl von das Lage in ($x | Location_NP)??", "was sind Vorwahl von das Lage in ($x | Location_NP)??", "was war die Vorwahl von das Lage in ($x | Location_NP)??", "was waren Vorwahl von das Lage in ($x | Location_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "269",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | THING_NP) die Vorwahl von das Lage in ($x | Location_NP)??", "sind ($x | THING_NP) die Vorwahl von das Lage in ($x | Location_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "270",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die Enkel von ($x | Person_NP)?", "Gib mir den Nachfolger von die Enkel von ($x | Person_NP)?", "Gib mir die Nachfolger von die Enkel von ($x | Person_NP)?", "Liste alle Nachfolger von die Enkel von ($x | Person_NP)? auf", "Liste die Nachfolger von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Enkel von ($x | Person_NP)??", "wer ist die Nachfolger von die Enkel von ($x | Person_NP)??", "wer sind Nachfolger von die Enkel von ($x | Person_NP)??", "wer war die Nachfolger von die Enkel von ($x | Person_NP)??", "wer waren Nachfolger von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "271",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die B�rgermeister von ($x | City_NP)?", "Gib mir den Nachfolger von die B�rgermeister von ($x | City_NP)?", "Gib mir die Nachfolger von die B�rgermeister von ($x | City_NP)?", "Liste alle Nachfolger von die B�rgermeister von ($x | City_NP)? auf", "Liste die Nachfolger von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Nachfolger von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Nachfolger von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Nachfolger von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Nachfolger von die B�rgermeister von ($x | City_NP)??", "wer ist die Nachfolger von die B�rgermeister von ($x | City_NP)??", "wer sind Nachfolger von die B�rgermeister von ($x | City_NP)??", "wer war die Nachfolger von die B�rgermeister von ($x | City_NP)??", "wer waren Nachfolger von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "272",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die Kind von ($x | Person_NP)?", "Gib mir den Nachfolger von die Kind von ($x | Person_NP)?", "Gib mir die Nachfolger von die Kind von ($x | Person_NP)?", "Liste alle Nachfolger von die Kind von ($x | Person_NP)? auf", "Liste die Nachfolger von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Kind von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Kind von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Kind von ($x | Person_NP)??", "wer ist die Nachfolger von die Kind von ($x | Person_NP)??", "wer sind Nachfolger von die Kind von ($x | Person_NP)??", "wer war die Nachfolger von die Kind von ($x | Person_NP)??", "wer waren Nachfolger von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "273",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir den Nachfolger von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Nachfolger von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Nachfolger von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Nachfolger von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "wer sind Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "wer waren Nachfolger von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "274",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die Doktorvater von ($x | Person_NP)?", "Gib mir den Nachfolger von die Doktorvater von ($x | Person_NP)?", "Gib mir die Nachfolger von die Doktorvater von ($x | Person_NP)?", "Liste alle Nachfolger von die Doktorvater von ($x | Person_NP)? auf", "Liste die Nachfolger von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Doktorvater von ($x | Person_NP)??", "wer ist die Nachfolger von die Doktorvater von ($x | Person_NP)??", "wer sind Nachfolger von die Doktorvater von ($x | Person_NP)??", "wer war die Nachfolger von die Doktorvater von ($x | Person_NP)??", "wer waren Nachfolger von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "275",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die Tochter von ($x | Person_NP)?", "Gib mir den Nachfolger von die Tochter von ($x | Person_NP)?", "Gib mir die Nachfolger von die Tochter von ($x | Person_NP)?", "Liste alle Nachfolger von die Tochter von ($x | Person_NP)? auf", "Liste die Nachfolger von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Tochter von ($x | Person_NP)??", "wer ist die Nachfolger von die Tochter von ($x | Person_NP)??", "wer sind Nachfolger von die Tochter von ($x | Person_NP)??", "wer war die Nachfolger von die Tochter von ($x | Person_NP)??", "wer waren Nachfolger von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "276",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die Sohn von ($x | Person_NP)?", "Gib mir den Nachfolger von die Sohn von ($x | Person_NP)?", "Gib mir die Nachfolger von die Sohn von ($x | Person_NP)?", "Liste alle Nachfolger von die Sohn von ($x | Person_NP)? auf", "Liste die Nachfolger von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Sohn von ($x | Person_NP)??", "wer ist die Nachfolger von die Sohn von ($x | Person_NP)??", "wer sind Nachfolger von die Sohn von ($x | Person_NP)??", "wer war die Nachfolger von die Sohn von ($x | Person_NP)??", "wer waren Nachfolger von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "277",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die Nachfolger von ($x | Person_NP)?", "Gib mir den Nachfolger von die Nachfolger von ($x | Person_NP)?", "Gib mir die Nachfolger von die Nachfolger von ($x | Person_NP)?", "Liste alle Nachfolger von die Nachfolger von ($x | Person_NP)? auf", "Liste die Nachfolger von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Nachfolger von ($x | Person_NP)??", "wer ist die Nachfolger von die Nachfolger von ($x | Person_NP)??", "wer sind Nachfolger von die Nachfolger von ($x | Person_NP)??", "wer war die Nachfolger von die Nachfolger von ($x | Person_NP)??", "wer waren Nachfolger von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "278",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die Frau von ($x | Person_NP)?", "Gib mir den Nachfolger von die Frau von ($x | Person_NP)?", "Gib mir die Nachfolger von die Frau von ($x | Person_NP)?", "Liste alle Nachfolger von die Frau von ($x | Person_NP)? auf", "Liste die Nachfolger von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Frau von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Frau von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Frau von ($x | Person_NP)??", "wer ist die Nachfolger von die Frau von ($x | Person_NP)??", "wer sind Nachfolger von die Frau von ($x | Person_NP)??", "wer war die Nachfolger von die Frau von ($x | Person_NP)??", "wer waren Nachfolger von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "279",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir den Nachfolger von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Nachfolger von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "280",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von die Bandmitglieder von ($x | Band_NP)?", "Gib mir den Nachfolger von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Nachfolger von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Nachfolger von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Nachfolger von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "wer sind Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "wer war die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "wer waren Nachfolger von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "281",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Nachfolger von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Nachfolger von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "282",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Nachfolger von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Nachfolger von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "283",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Nachfolger von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Nachfolger von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "284",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "285",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Nachfolger von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Nachfolger von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "286",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Nachfolger von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Nachfolger von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "287",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Nachfolger von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Nachfolger von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "288",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Nachfolger von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Nachfolger von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "289",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Nachfolger von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Nachfolger von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "290",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "291",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Nachfolger von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "292",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die Enkel von ($x | Person_NP)?", "Gib mir die Frau von die Enkel von ($x | Person_NP)?", "Gib mir die Frauen von die Enkel von ($x | Person_NP)?", "Liste alle Frauen von die Enkel von ($x | Person_NP)? auf", "Liste die Frauen von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Frau von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Frau von die Enkel von ($x | Person_NP)??", "wer ist die Frau von die Enkel von ($x | Person_NP)??", "wer sind Frauen von die Enkel von ($x | Person_NP)??", "wer war die Frau von die Enkel von ($x | Person_NP)??", "wer waren Frauen von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "293",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die B�rgermeister von ($x | City_NP)?", "Gib mir die Frau von die B�rgermeister von ($x | City_NP)?", "Gib mir die Frauen von die B�rgermeister von ($x | City_NP)?", "Liste alle Frauen von die B�rgermeister von ($x | City_NP)? auf", "Liste die Frauen von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Frau von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Frau von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Frau von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Frau von die B�rgermeister von ($x | City_NP)??", "wer ist die Frau von die B�rgermeister von ($x | City_NP)??", "wer sind Frauen von die B�rgermeister von ($x | City_NP)??", "wer war die Frau von die B�rgermeister von ($x | City_NP)??", "wer waren Frauen von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "294",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die Kind von ($x | Person_NP)?", "Gib mir die Frau von die Kind von ($x | Person_NP)?", "Gib mir die Frauen von die Kind von ($x | Person_NP)?", "Liste alle Frauen von die Kind von ($x | Person_NP)? auf", "Liste die Frauen von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Kind von ($x | Person_NP)??", "Welche Personen sind die Frau von die Kind von ($x | Person_NP)??", "Welche Personen waren die Frau von die Kind von ($x | Person_NP)??", "wer ist die Frau von die Kind von ($x | Person_NP)??", "wer sind Frauen von die Kind von ($x | Person_NP)??", "wer war die Frau von die Kind von ($x | Person_NP)??", "wer waren Frauen von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "295",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Frau von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Frauen von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Frauen von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Frauen von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Frau von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Frau von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Frau von die Vizepr�sident unter ($x | Person_NP)??", "wer sind Frauen von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Frau von die Vizepr�sident unter ($x | Person_NP)??", "wer waren Frauen von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "296",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die Doktorvater von ($x | Person_NP)?", "Gib mir die Frau von die Doktorvater von ($x | Person_NP)?", "Gib mir die Frauen von die Doktorvater von ($x | Person_NP)?", "Liste alle Frauen von die Doktorvater von ($x | Person_NP)? auf", "Liste die Frauen von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Frau von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Frau von die Doktorvater von ($x | Person_NP)??", "wer ist die Frau von die Doktorvater von ($x | Person_NP)??", "wer sind Frauen von die Doktorvater von ($x | Person_NP)??", "wer war die Frau von die Doktorvater von ($x | Person_NP)??", "wer waren Frauen von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "297",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die Tochter von ($x | Person_NP)?", "Gib mir die Frau von die Tochter von ($x | Person_NP)?", "Gib mir die Frauen von die Tochter von ($x | Person_NP)?", "Liste alle Frauen von die Tochter von ($x | Person_NP)? auf", "Liste die Frauen von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Frau von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Frau von die Tochter von ($x | Person_NP)??", "wer ist die Frau von die Tochter von ($x | Person_NP)??", "wer sind Frauen von die Tochter von ($x | Person_NP)??", "wer war die Frau von die Tochter von ($x | Person_NP)??", "wer waren Frauen von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "298",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die Sohn von ($x | Person_NP)?", "Gib mir die Frau von die Sohn von ($x | Person_NP)?", "Gib mir die Frauen von die Sohn von ($x | Person_NP)?", "Liste alle Frauen von die Sohn von ($x | Person_NP)? auf", "Liste die Frauen von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Frau von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Frau von die Sohn von ($x | Person_NP)??", "wer ist die Frau von die Sohn von ($x | Person_NP)??", "wer sind Frauen von die Sohn von ($x | Person_NP)??", "wer war die Frau von die Sohn von ($x | Person_NP)??", "wer waren Frauen von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "299",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die Nachfolger von ($x | Person_NP)?", "Gib mir die Frau von die Nachfolger von ($x | Person_NP)?", "Gib mir die Frauen von die Nachfolger von ($x | Person_NP)?", "Liste alle Frauen von die Nachfolger von ($x | Person_NP)? auf", "Liste die Frauen von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Frau von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Frau von die Nachfolger von ($x | Person_NP)??", "wer ist die Frau von die Nachfolger von ($x | Person_NP)??", "wer sind Frauen von die Nachfolger von ($x | Person_NP)??", "wer war die Frau von die Nachfolger von ($x | Person_NP)??", "wer waren Frauen von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "300",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die Frau von ($x | Person_NP)?", "Gib mir die Frau von die Frau von ($x | Person_NP)?", "Gib mir die Frauen von die Frau von ($x | Person_NP)?", "Liste alle Frauen von die Frau von ($x | Person_NP)? auf", "Liste die Frauen von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Frau von ($x | Person_NP)??", "Welche Personen sind die Frau von die Frau von ($x | Person_NP)??", "Welche Personen waren die Frau von die Frau von ($x | Person_NP)??", "wer ist die Frau von die Frau von ($x | Person_NP)??", "wer sind Frauen von die Frau von ($x | Person_NP)??", "wer war die Frau von die Frau von ($x | Person_NP)??", "wer waren Frauen von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "301",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Frau von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Frauen von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Frauen von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Frauen von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Frauen von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Frauen von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "302",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Frau von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Frauen von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Frauen von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Frauen von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Frau von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Frau von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Frau von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Frau von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Frau von die Bandmitglieder von ($x | Band_NP)??", "wer sind Frauen von die Bandmitglieder von ($x | Band_NP)??", "wer war die Frau von die Bandmitglieder von ($x | Band_NP)??", "wer waren Frauen von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "303",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Frau von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Frauen von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "304",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Frau von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Frauen von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "305",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Frau von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Frauen von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "306",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Frau von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Frauen von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "307",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Frau von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Frauen von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "308",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Frau von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Frauen von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "309",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Frau von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Frauen von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "310",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Frau von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Frauen von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "311",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Frau von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Frauen von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "312",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Frauen von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "313",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Frau von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Frauen von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "314",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Enkel von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Enkel von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Enkel von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Enkel von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Enkel von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Enkel von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Enkel von ($x | Person_NP)??", "was war die Vizepr�sident von die Enkel von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Enkel von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Enkel von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Enkel von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Enkel von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "315",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die B�rgermeister von ($x | City_NP)?", "Gib mir den Vizepr�sident von die B�rgermeister von ($x | City_NP)?", "Gib mir die Vizepr�sidenten von die B�rgermeister von ($x | City_NP)?", "Liste alle Vizepr�sidenten von die B�rgermeister von ($x | City_NP)? auf", "Liste die Vizepr�sidenten von die B�rgermeister von ($x | City_NP)? auf", "was ist die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "was sind Vizepr�sidenten von die B�rgermeister von ($x | City_NP)??", "was war die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "was waren Vizepr�sidenten von die B�rgermeister von ($x | City_NP)??", "Welche L�nder sind die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "Welche L�nder waren die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "Welches Land ist die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "Welches Land war die Vizepr�sident von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "316",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Kind von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Kind von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Kind von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Kind von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Kind von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Kind von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Kind von ($x | Person_NP)??", "was war die Vizepr�sident von die Kind von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Kind von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Kind von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Kind von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Kind von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "317",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "was sind Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)??", "was war die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "was waren Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "318",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Doktorvater von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Doktorvater von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Doktorvater von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Doktorvater von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Doktorvater von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Doktorvater von ($x | Person_NP)??", "was war die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Doktorvater von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "319",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Tochter von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Tochter von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Tochter von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Tochter von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Tochter von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Tochter von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Tochter von ($x | Person_NP)??", "was war die Vizepr�sident von die Tochter von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Tochter von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Tochter von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Tochter von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Tochter von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "320",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Sohn von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Sohn von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Sohn von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Sohn von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Sohn von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Sohn von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Sohn von ($x | Person_NP)??", "was war die Vizepr�sident von die Sohn von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Sohn von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Sohn von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Sohn von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Sohn von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "321",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Nachfolger von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Nachfolger von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Nachfolger von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Nachfolger von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Nachfolger von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Nachfolger von ($x | Person_NP)??", "was war die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Nachfolger von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "322",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Frau von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Frau von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Frau von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Frau von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Frau von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Frau von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Frau von ($x | Person_NP)??", "was war die Vizepr�sident von die Frau von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Frau von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Frau von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Frau von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Frau von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "323",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir den Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)? auf", "was ist die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "was sind Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)??", "was war die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "was waren Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)??", "Welche L�nder sind die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "Welche L�nder waren die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "Welches Land ist die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "Welches Land war die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "324",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)?", "Gib mir den Vizepr�sident von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)? auf", "was ist die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "was sind Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)??", "was war die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "was waren Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)??", "Welche L�nder sind die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "Welche L�nder waren die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "Welches Land ist die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "Welches Land war die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "325",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Enkel von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "326",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "327",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Kind von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "328",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "329",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "330",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Tochter von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "331",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Sohn von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "332",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "333",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Frau von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "334",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "335",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  } ]
}