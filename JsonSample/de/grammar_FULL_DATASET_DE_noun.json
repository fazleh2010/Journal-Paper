{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#government_type",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Regierungsform von ($x | Country_NP)", "Gib mir die Regierungsform von ($x | Country_NP)", "Liste alle Regierungsform von ($x | Country_NP) auf", "Liste die Regierungsform von ($x | Country_NP) auf", "was ist die Regierungsform von ($x | Country_NP)?", "was sind Regierungsform von ($x | Country_NP)?", "was war die Regierungsform von ($x | Country_NP)?", "was waren Regierungsform von ($x | Country_NP)?", "Welche Typen sind die Regierungsform von ($x | Country_NP)?", "Welche Typen waren die Regierungsform von ($x | Country_NP)?", "Welcher Typ ist die Regierungsform von ($x | Country_NP)?", "Welcher Typ war die Regierungsform von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "2",
    "lexicalEntryUri" : "http://localhost:8080#government_type",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | GovernmentType_NP) die Regierungsform von ($x | Country_NP)?", "sind ($x | GovernmentType_NP) die Regierungsform von ($x | Country_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#government_type",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentences" : [ "die Regierungsform von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#zutaten_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Zutaten von ($x | Food_NP)", "Gib mir die Zutaten von ($x | Food_NP)", "Liste alle Zutaten von ($x | Food_NP) auf", "Liste die Zutaten von ($x | Food_NP) auf", "was ist die Zutaten von ($x | Food_NP)?", "was sind Zutaten von ($x | Food_NP)?", "was war die Zutaten von ($x | Food_NP)?", "was waren Zutaten von ($x | Food_NP)?", "Welche Dinger sind die Zutaten von ($x | Food_NP)?", "Welche Dinger waren die Zutaten von ($x | Food_NP)?", "Welches Ding ist die Zutaten von ($x | Food_NP)?", "Welches Ding war die Zutaten von ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#zutaten_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | THING_NP) die Zutaten von ($x | Food_NP)?", "sind ($x | THING_NP) die Zutaten von ($x | Food_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#zutaten_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Food",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "die Zutaten von ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#Enkel_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Enkel von ($x | Person_NP)", "Gib mir den Enkel von ($x | Person_NP)", "Gib mir die Enkel von ($x | Person_NP)", "Liste alle Enkel von ($x | Person_NP) auf", "Liste die Enkel von ($x | Person_NP) auf", "Welche dbo:Person ist die Enkel von ($x | Person_NP)?", "Welche dbo:Person war die Enkel von ($x | Person_NP)?", "Welche Personen sind die Enkel von ($x | Person_NP)?", "Welche Personen waren die Enkel von ($x | Person_NP)?", "wer ist die Enkel von ($x | Person_NP)?", "wer sind Enkel von ($x | Person_NP)?", "wer war die Enkel von ($x | Person_NP)?", "wer waren Enkel von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#Enkel_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die Enkel von ($x | Person_NP)?", "sind ($x | Person_NP) die Enkel von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#Enkel_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die Enkel von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#w�hrung_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle W�hrungen von ($x | Country_NP)", "Gib mir die W�hrung von ($x | Country_NP)", "Gib mir die W�hrungen von ($x | Country_NP)", "Liste alle W�hrungen von ($x | Country_NP) auf", "Liste die W�hrungen von ($x | Country_NP) auf", "was ist die W�hrung von ($x | Country_NP)?", "was sind W�hrungen von ($x | Country_NP)?", "was war die W�hrung von ($x | Country_NP)?", "was waren W�hrungen von ($x | Country_NP)?", "Welche W�hrung ist die W�hrung von ($x | Country_NP)?", "Welche W�hrung war die W�hrung von ($x | Country_NP)?", "Welche W�hrungen sind die W�hrung von ($x | Country_NP)?", "Welche W�hrungen waren die W�hrung von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#w�hrung_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Currency_NP) die W�hrung von ($x | Country_NP)?", "sind ($x | Currency_NP) die W�hrungen von ($x | Country_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#w�hrung_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentences" : [ "die W�hrung von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#B�rgermeister_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir den B�rgermeister von ($x | City_NP)", "Welche dbo:Person ist die B�rgermeister von ($x | City_NP)?", "Welche dbo:Person war die B�rgermeister von ($x | City_NP)?", "Welche Personen sind die B�rgermeister von ($x | City_NP)?", "Welche Personen waren die B�rgermeister von ($x | City_NP)?", "wer ist die B�rgermeister von ($x | City_NP)?", "wer war die B�rgermeister von ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#B�rgermeister_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die B�rgermeister von ($x | City_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#B�rgermeister_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die B�rgermeister von ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#Amtssprache_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Amtssprachen von ($x | Country_NP)", "Gib mir die Amtssprache von ($x | Country_NP)", "Gib mir die Amtssprachen von ($x | Country_NP)", "Liste alle Amtssprachen von ($x | Country_NP) auf", "Liste die Amtssprachen von ($x | Country_NP) auf", "was ist die Amtssprache von ($x | Country_NP)?", "was sind Amtssprachen von ($x | Country_NP)?", "was war die Amtssprache von ($x | Country_NP)?", "was waren Amtssprachen von ($x | Country_NP)?", "Welche Sprache ist die Amtssprache von ($x | Country_NP)?", "Welche Sprache war die Amtssprache von ($x | Country_NP)?", "Welche Sprachen sind die Amtssprache von ($x | Country_NP)?", "Welche Sprachen waren die Amtssprache von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#Amtssprache_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Language_NP) die Amtssprache von ($x | Country_NP)?", "sind ($x | Language_NP) die Amtssprachen von ($x | Country_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#Amtssprache_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentences" : [ "die Amtssprache von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#kinder_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Kinder von ($x | Person_NP)", "Gib mir die Kind von ($x | Person_NP)", "Gib mir die Kinder von ($x | Person_NP)", "Liste alle Kinder von ($x | Person_NP) auf", "Liste die Kinder von ($x | Person_NP) auf", "Welche dbo:Person ist die Kind von ($x | Person_NP)?", "Welche dbo:Person war die Kind von ($x | Person_NP)?", "Welche Personen sind die Kind von ($x | Person_NP)?", "Welche Personen waren die Kind von ($x | Person_NP)?", "wer ist die Kind von ($x | Person_NP)?", "wer sind Kinder von ($x | Person_NP)?", "wer war die Kind von ($x | Person_NP)?", "wer waren Kinder von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#kinder_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die Kind von ($x | Person_NP)?", "sind ($x | Person_NP) die Kinder von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#kinder_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die Kind von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_unter",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter ($x | Person_NP)", "Gib mir den Vizepr�sident unter ($x | Person_NP)", "Gib mir die Vizepr�sidenten unter ($x | Person_NP)", "Liste alle Vizepr�sidenten unter ($x | Person_NP) auf", "Liste die Vizepr�sidenten unter ($x | Person_NP) auf", "Welche dbo:Person ist die Vizepr�sident unter ($x | Person_NP)?", "Welche dbo:Person war die Vizepr�sident unter ($x | Person_NP)?", "Welche Personen sind die Vizepr�sident unter ($x | Person_NP)?", "Welche Personen waren die Vizepr�sident unter ($x | Person_NP)?", "wer ist die Vizepr�sident unter ($x | Person_NP)?", "wer sind Vizepr�sidenten unter ($x | Person_NP)?", "wer war die Vizepr�sident unter ($x | Person_NP)?", "wer waren Vizepr�sidenten unter ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_unter",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die Vizepr�sident unter ($x | Person_NP)?", "sind ($x | Person_NP) die Vizepr�sidenten unter ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_unter",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die Vizepr�sident unter ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#Lage_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Lagen in ($x | Location_NP)", "Gib mir das Lage in ($x | Location_NP)", "Gib mir die Lagen in ($x | Location_NP)", "Liste alle Lagen in ($x | Location_NP) auf", "Liste die Lagen in ($x | Location_NP) auf", "was ist das Lage in ($x | Location_NP)?", "was sind Lagen in ($x | Location_NP)?", "was war das Lage in ($x | Location_NP)?", "was waren Lagen in ($x | Location_NP)?", "Welche Lage ist das Lage in ($x | Location_NP)?", "Welche Lage war das Lage in ($x | Location_NP)?", "Welche Lagen sind das Lage in ($x | Location_NP)?", "Welche Lagen waren das Lage in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "26",
    "lexicalEntryUri" : "http://localhost:8080#Lage_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Place_NP) das Lage in ($x | Location_NP)?", "sind ($x | Place_NP) die Lagen in ($x | Location_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#Lage_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentences" : [ "das Lage in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#entwickler_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Entwickler von ($x | Software_NP)", "Gib mir den Entwickler von ($x | Software_NP)", "Gib mir die Entwickler von ($x | Software_NP)", "Liste alle Entwickler von ($x | Software_NP) auf", "Liste die Entwickler von ($x | Software_NP) auf", "Welche Universit�t ist die Entwickler von ($x | Software_NP)?", "Welche Universit�t war die Entwickler von ($x | Software_NP)?", "Welche Universit�ten sind die Entwickler von ($x | Software_NP)?", "Welche Universit�ten waren die Entwickler von ($x | Software_NP)?", "wer ist die Entwickler von ($x | Software_NP)?", "wer sind Entwickler von ($x | Software_NP)?", "wer war die Entwickler von ($x | Software_NP)?", "wer waren Entwickler von ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "29",
    "lexicalEntryUri" : "http://localhost:8080#entwickler_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | University_NP) die Entwickler von ($x | Software_NP)?", "sind ($x | University_NP) die Entwickler von ($x | Software_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "30",
    "lexicalEntryUri" : "http://localhost:8080#entwickler_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentences" : [ "die Entwickler von ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#Hauptstadt_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir die Hauptstadt von ($x | Country_NP)", "was ist die Hauptstadt von ($x | Country_NP)?", "was war die Hauptstadt von ($x | Country_NP)?", "Welche Stadt ist die Hauptstadt von ($x | Country_NP)?", "Welche Stadt war die Hauptstadt von ($x | Country_NP)?", "Welche St�dte sind die Hauptstadt von ($x | Country_NP)?", "Welche St�dte waren die Hauptstadt von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#Hauptstadt_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | City_NP) die Hauptstadt von ($x | Country_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#Hauptstadt_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentences" : [ "die Hauptstadt von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "34",
    "lexicalEntryUri" : "http://localhost:8080#Doktorvater_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Doktorv�ter von ($x | Person_NP)", "Gib mir den Doktorvater von ($x | Person_NP)", "Gib mir die Doktorv�ter von ($x | Person_NP)", "Liste alle Doktorv�ter von ($x | Person_NP) auf", "Liste die Doktorv�ter von ($x | Person_NP) auf", "Welche dbo:Person ist die Doktorvater von ($x | Person_NP)?", "Welche dbo:Person war die Doktorvater von ($x | Person_NP)?", "Welche Personen sind die Doktorvater von ($x | Person_NP)?", "Welche Personen waren die Doktorvater von ($x | Person_NP)?", "wer ist die Doktorvater von ($x | Person_NP)?", "wer sind Doktorv�ter von ($x | Person_NP)?", "wer war die Doktorvater von ($x | Person_NP)?", "wer waren Doktorv�ter von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "35",
    "lexicalEntryUri" : "http://localhost:8080#Doktorvater_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die Doktorvater von ($x | Person_NP)?", "sind ($x | Person_NP) die Doktorv�ter von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#Doktorvater_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die Doktorvater von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#Musik_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Musiken von ($x | Person_NP)", "Gib mir die Musik von ($x | Person_NP)", "Gib mir die Musiken von ($x | Person_NP)", "Liste alle Musiken von ($x | Person_NP) auf", "Liste die Musiken von ($x | Person_NP) auf", "was ist die Musik von ($x | Person_NP)?", "was sind Musiken von ($x | Person_NP)?", "was war die Musik von ($x | Person_NP)?", "was waren Musiken von ($x | Person_NP)?", "Welche dbo:Person ist die Musik von ($x | Person_NP)?", "Welche dbo:Person war die Musik von ($x | Person_NP)?", "Welche Personen sind die Musik von ($x | Person_NP)?", "Welche Personen waren die Musik von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#Musik_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Musical_NP) die Musik von ($x | Person_NP)?", "sind ($x | Musical_NP) die Musiken von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "39",
    "lexicalEntryUri" : "http://localhost:8080#Musik_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentences" : [ "die Musik von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "40",
    "lexicalEntryUri" : "http://localhost:8080#spitzname_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Spitznamen von ($x | City_NP)", "Gib mir den Spitzname von ($x | City_NP)", "Gib mir die Spitznamen von ($x | City_NP)", "Liste alle Spitznamen von ($x | City_NP) auf", "Liste die Spitznamen von ($x | City_NP) auf", "was ist die Spitzname von ($x | City_NP)?", "was sind Spitznamen von ($x | City_NP)?", "was war die Spitzname von ($x | City_NP)?", "was waren Spitznamen von ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#spitzname_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | THING_NP) die Spitzname von ($x | City_NP)?", "sind ($x | THING_NP) die Spitznamen von ($x | City_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#spitzname_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "die Spitzname von ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#Gesamteinwohnerzahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von ($x | Location_NP)", "was ist die Gesamteinwohnerzahl von ($x | Location_NP)?", "was war die Gesamteinwohnerzahl von ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "44",
    "lexicalEntryUri" : "http://localhost:8080#Gesamteinwohnerzahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Number_NP) die Gesamteinwohnerzahl von ($x | Location_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "45",
    "lexicalEntryUri" : "http://localhost:8080#Gesamteinwohnerzahl_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "die Gesamteinwohnerzahl von ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#tocher_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle T�chter von ($x | Person_NP)", "Gib mir die Tochter von ($x | Person_NP)", "Gib mir die T�chter von ($x | Person_NP)", "Liste alle T�chter von ($x | Person_NP) auf", "Liste die T�chter von ($x | Person_NP) auf", "Welche dbo:Person ist die Tochter von ($x | Person_NP)?", "Welche dbo:Person war die Tochter von ($x | Person_NP)?", "Welche Personen sind die Tochter von ($x | Person_NP)?", "Welche Personen waren die Tochter von ($x | Person_NP)?", "wer ist die Tochter von ($x | Person_NP)?", "wer sind T�chter von ($x | Person_NP)?", "wer war die Tochter von ($x | Person_NP)?", "wer waren T�chter von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#tocher_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die Tochter von ($x | Person_NP)?", "sind ($x | Person_NP) die T�chter von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#tocher_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die Tochter von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "49",
    "lexicalEntryUri" : "http://localhost:8080#sohn_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle S�hne von ($x | Person_NP)", "Gib mir die Sohn von ($x | Person_NP)", "Gib mir die S�hne von ($x | Person_NP)", "Liste alle S�hne von ($x | Person_NP) auf", "Liste die S�hne von ($x | Person_NP) auf", "Welche dbo:Person ist die Sohn von ($x | Person_NP)?", "Welche dbo:Person war die Sohn von ($x | Person_NP)?", "Welche Personen sind die Sohn von ($x | Person_NP)?", "Welche Personen waren die Sohn von ($x | Person_NP)?", "wer ist die Sohn von ($x | Person_NP)?", "wer sind S�hne von ($x | Person_NP)?", "wer war die Sohn von ($x | Person_NP)?", "wer waren S�hne von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "50",
    "lexicalEntryUri" : "http://localhost:8080#sohn_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die Sohn von ($x | Person_NP)?", "sind ($x | Person_NP) die S�hne von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#sohn_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die Sohn von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#vorwahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vorwahl von ($x | Place_NP)", "Gib mir die Vorwahl von ($x | Place_NP)", "Liste alle Vorwahl von ($x | Place_NP) auf", "Liste die Vorwahl von ($x | Place_NP) auf", "was ist die Vorwahl von ($x | Place_NP)?", "was sind Vorwahl von ($x | Place_NP)?", "was war die Vorwahl von ($x | Place_NP)?", "was waren Vorwahl von ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#vorwahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | THING_NP) die Vorwahl von ($x | Place_NP)?", "sind ($x | THING_NP) die Vorwahl von ($x | Place_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "54",
    "lexicalEntryUri" : "http://localhost:8080#vorwahl_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "die Vorwahl von ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "55",
    "lexicalEntryUri" : "http://localhost:8080#nachfolger_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Nachfolger von ($x | Person_NP)", "Gib mir den Nachfolger von ($x | Person_NP)", "Gib mir die Nachfolger von ($x | Person_NP)", "Liste alle Nachfolger von ($x | Person_NP) auf", "Liste die Nachfolger von ($x | Person_NP) auf", "Welche dbo:Person ist die Nachfolger von ($x | Person_NP)?", "Welche dbo:Person war die Nachfolger von ($x | Person_NP)?", "Welche Personen sind die Nachfolger von ($x | Person_NP)?", "Welche Personen waren die Nachfolger von ($x | Person_NP)?", "wer ist die Nachfolger von ($x | Person_NP)?", "wer sind Nachfolger von ($x | Person_NP)?", "wer war die Nachfolger von ($x | Person_NP)?", "wer waren Nachfolger von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#nachfolger_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die Nachfolger von ($x | Person_NP)?", "sind ($x | Person_NP) die Nachfolger von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#nachfolger_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die Nachfolger von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#H�he_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Lighthouse",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir die H�he von ($x | Lighthouse_NP)", "was ist die H�he von ($x | Lighthouse_NP)?", "was war die H�he von ($x | Lighthouse_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "59",
    "lexicalEntryUri" : "http://localhost:8080#H�he_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Lighthouse",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | THING_NP) die H�he von ($x | Lighthouse_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "60",
    "lexicalEntryUri" : "http://localhost:8080#H�he_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Lighthouse",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "die H�he von ($x | Lighthouse_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#hauptquartier_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentences" : [ " feminine sind das Hauptquartier von ($x | Organisation_NP)?", " feminine waren das Hauptquartier von ($x | Organisation_NP)?", " Geb�ude ist das Hauptquartier von ($x | Organisation_NP)?", " Geb�ude war das Hauptquartier von ($x | Organisation_NP)?", "Gib mir alle Hauptquaritere von ($x | Organisation_NP)", "Gib mir das Hauptquartier von ($x | Organisation_NP)", "Gib mir die Hauptquaritere von ($x | Organisation_NP)", "Liste alle Hauptquaritere von ($x | Organisation_NP) auf", "Liste die Hauptquaritere von ($x | Organisation_NP) auf", "was ist das Hauptquartier von ($x | Organisation_NP)?", "was sind Hauptquaritere von ($x | Organisation_NP)?", "was war das Hauptquartier von ($x | Organisation_NP)?", "was waren Hauptquaritere von ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#hauptquartier_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | PopulatedPlace_NP) das Hauptquartier von ($x | Organisation_NP)?", "sind ($x | PopulatedPlace_NP) die Hauptquaritere von ($x | Organisation_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#hauptquartier_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentences" : [ "das Hauptquartier von ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "64",
    "lexicalEntryUri" : "http://localhost:8080#Trainer_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "CollegeCoach",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Trainer von ($x | IceHockeyLeague_NP)", "Gib mir den Trainer von ($x | IceHockeyLeague_NP)", "Gib mir die Trainer von ($x | IceHockeyLeague_NP)", "Liste alle Trainer von ($x | IceHockeyLeague_NP) auf", "Liste die Trainer von ($x | IceHockeyLeague_NP) auf", "Welche Trainer sind die Trainer von ($x | IceHockeyLeague_NP)?", "Welche Trainer waren die Trainer von ($x | IceHockeyLeague_NP)?", "Welcher Trainer ist die Trainer von ($x | IceHockeyLeague_NP)?", "Welcher Trainer war die Trainer von ($x | IceHockeyLeague_NP)?", "wer ist die Trainer von ($x | IceHockeyLeague_NP)?", "wer sind Trainer von ($x | IceHockeyLeague_NP)?", "wer war die Trainer von ($x | IceHockeyLeague_NP)?", "wer waren Trainer von ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#Trainer_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "CollegeCoach",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | CollegeCoach_NP) die Trainer von ($x | IceHockeyLeague_NP)?", "sind ($x | CollegeCoach_NP) die Trainer von ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#Trainer_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "CollegeCoach",
    "frameType" : "NPP",
    "sentences" : [ "die Trainer von ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#Frau_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Frauen von ($x | Person_NP)", "Gib mir die Frau von ($x | Person_NP)", "Gib mir die Frauen von ($x | Person_NP)", "Liste alle Frauen von ($x | Person_NP) auf", "Liste die Frauen von ($x | Person_NP) auf", "Welche dbo:Person ist die Frau von ($x | Person_NP)?", "Welche dbo:Person war die Frau von ($x | Person_NP)?", "Welche Personen sind die Frau von ($x | Person_NP)?", "Welche Personen waren die Frau von ($x | Person_NP)?", "wer ist die Frau von ($x | Person_NP)?", "wer sind Frauen von ($x | Person_NP)?", "wer war die Frau von ($x | Person_NP)?", "wer waren Frauen von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "68",
    "lexicalEntryUri" : "http://localhost:8080#Frau_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die Frau von ($x | Person_NP)?", "sind ($x | Person_NP) die Frauen von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "69",
    "lexicalEntryUri" : "http://localhost:8080#Frau_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die Frau von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#Herausgeber_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Herausgeber von ($x | WrittenWork_NP)", "Gib mir den Herausgeber von ($x | WrittenWork_NP)", "Gib mir die Herausgeber von ($x | WrittenWork_NP)", "Liste alle Herausgeber von ($x | WrittenWork_NP) auf", "Liste die Herausgeber von ($x | WrittenWork_NP) auf", "Welche dbo:Person ist die Herausgeber von ($x | WrittenWork_NP)?", "Welche dbo:Person war die Herausgeber von ($x | WrittenWork_NP)?", "Welche Personen sind die Herausgeber von ($x | WrittenWork_NP)?", "Welche Personen waren die Herausgeber von ($x | WrittenWork_NP)?", "wer ist die Herausgeber von ($x | WrittenWork_NP)?", "wer sind Herausgeber von ($x | WrittenWork_NP)?", "wer war die Herausgeber von ($x | WrittenWork_NP)?", "wer waren Herausgeber von ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#Herausgeber_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die Herausgeber von ($x | WrittenWork_NP)?", "sind ($x | Person_NP) die Herausgeber von ($x | WrittenWork_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#Herausgeber_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die Herausgeber von ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#Spiele_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Spiele von ($x | Organisation_NP)", "Gib mir das Spiel von ($x | Organisation_NP)", "Gib mir die Spiele von ($x | Organisation_NP)", "Liste alle Spiele von ($x | Organisation_NP) auf", "Liste die Spiele von ($x | Organisation_NP) auf", "was ist das Spiel von ($x | Organisation_NP)?", "was sind Spiele von ($x | Organisation_NP)?", "was war das Spiel von ($x | Organisation_NP)?", "was waren Spiele von ($x | Organisation_NP)?", "Welche Firma ist das Spiel von ($x | Organisation_NP)?", "Welche Firma war das Spiel von ($x | Organisation_NP)?", "Welche Firmen sind das Spiel von ($x | Organisation_NP)?", "Welche Firmen waren das Spiel von ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "74",
    "lexicalEntryUri" : "http://localhost:8080#Spiele_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Publisher_NP) das Spiel von ($x | Organisation_NP)?", "sind ($x | Publisher_NP) die Spiele von ($x | Organisation_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#Spiele_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentences" : [ "das Spiel von ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Vizepr�sidenten von ($x | Person_NP)", "Gib mir den Vizepr�sident von ($x | Person_NP)", "Gib mir die Vizepr�sidenten von ($x | Person_NP)", "Liste alle Vizepr�sidenten von ($x | Person_NP) auf", "Liste die Vizepr�sidenten von ($x | Person_NP) auf", "was ist die Vizepr�sident von ($x | Person_NP)?", "was sind Vizepr�sidenten von ($x | Person_NP)?", "was war die Vizepr�sident von ($x | Person_NP)?", "was waren Vizepr�sidenten von ($x | Person_NP)?", "Welche L�nder sind die Vizepr�sident von ($x | Person_NP)?", "Welche L�nder waren die Vizepr�sident von ($x | Person_NP)?", "Welches Land ist die Vizepr�sident von ($x | Person_NP)?", "Welches Land war die Vizepr�sident von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von ($x | Person_NP)?", "sind ($x | Country_NP) die Vizepr�sidenten von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentences" : [ "die Vizepr�sident von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "79",
    "lexicalEntryUri" : "http://localhost:8080#Bandmitglieder_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Bandmitglieder von ($x | Band_NP)", "Gib mir den Bandmitglieder von ($x | Band_NP)", "Gib mir die Bandmitglieder von ($x | Band_NP)", "Liste alle Bandmitglieder von ($x | Band_NP) auf", "Liste die Bandmitglieder von ($x | Band_NP) auf", "Welche dbo:Person ist die Bandmitglieder von ($x | Band_NP)?", "Welche dbo:Person war die Bandmitglieder von ($x | Band_NP)?", "Welche Personen sind die Bandmitglieder von ($x | Band_NP)?", "Welche Personen waren die Bandmitglieder von ($x | Band_NP)?", "wer ist die Bandmitglieder von ($x | Band_NP)?", "wer sind Bandmitglieder von ($x | Band_NP)?", "wer war die Bandmitglieder von ($x | Band_NP)?", "wer waren Bandmitglieder von ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#Bandmitglieder_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Person_NP) die Bandmitglieder von ($x | Band_NP)?", "sind ($x | Person_NP) die Bandmitglieder von ($x | Band_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#Bandmitglieder_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentences" : [ "die Bandmitglieder von ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#seitenanzahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "Gib mir alle Seitenzahlen von ($x | WrittenWork_NP)", "Gib mir die Seitenzahl von ($x | WrittenWork_NP)", "Gib mir die Seitenzahlen von ($x | WrittenWork_NP)", "Liste alle Seitenzahlen von ($x | WrittenWork_NP) auf", "Liste die Seitenzahlen von ($x | WrittenWork_NP) auf", "was ist die Seitenzahl von ($x | WrittenWork_NP)?", "was sind Seitenzahlen von ($x | WrittenWork_NP)?", "was war die Seitenzahl von ($x | WrittenWork_NP)?", "was waren Seitenzahlen von ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "83",
    "lexicalEntryUri" : "http://localhost:8080#seitenanzahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "ist ($x | Number_NP) die Seitenzahl von ($x | WrittenWork_NP)?", "sind ($x | Number_NP) die Seitenzahlen von ($x | WrittenWork_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "84",
    "lexicalEntryUri" : "http://localhost:8080#seitenanzahl_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentences" : [ "die Seitenzahl von ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "85",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Location",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is $x located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  } ]
}