{
  "grammarEntries" : [ {
    "id" : "260",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die Enkel von ($x | Person_NP)?", "Gib mir den Enkel von die Enkel von ($x | Person_NP)?", "Gib mir die Enkel von die Enkel von ($x | Person_NP)?", "Liste alle Enkel von die Enkel von ($x | Person_NP)? auf", "Liste die Enkel von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Enkel von ($x | Person_NP)??", "wer ist die Enkel von die Enkel von ($x | Person_NP)??", "wer sind Enkel von die Enkel von ($x | Person_NP)??", "wer war die Enkel von die Enkel von ($x | Person_NP)??", "wer waren Enkel von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "261",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die Kind von ($x | Person_NP)?", "Gib mir den Enkel von die Kind von ($x | Person_NP)?", "Gib mir die Enkel von die Kind von ($x | Person_NP)?", "Liste alle Enkel von die Kind von ($x | Person_NP)? auf", "Liste die Enkel von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Kind von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Kind von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Kind von ($x | Person_NP)??", "wer ist die Enkel von die Kind von ($x | Person_NP)??", "wer sind Enkel von die Kind von ($x | Person_NP)??", "wer war die Enkel von die Kind von ($x | Person_NP)??", "wer waren Enkel von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "262",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir den Enkel von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Enkel von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Enkel von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Enkel von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "wer sind Enkel von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "wer waren Enkel von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "263",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die Tochter von ($x | Person_NP)?", "Gib mir den Enkel von die Tochter von ($x | Person_NP)?", "Gib mir die Enkel von die Tochter von ($x | Person_NP)?", "Liste alle Enkel von die Tochter von ($x | Person_NP)? auf", "Liste die Enkel von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Tochter von ($x | Person_NP)??", "wer ist die Enkel von die Tochter von ($x | Person_NP)??", "wer sind Enkel von die Tochter von ($x | Person_NP)??", "wer war die Enkel von die Tochter von ($x | Person_NP)??", "wer waren Enkel von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "264",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die Sohn von ($x | Person_NP)?", "Gib mir den Enkel von die Sohn von ($x | Person_NP)?", "Gib mir die Enkel von die Sohn von ($x | Person_NP)?", "Liste alle Enkel von die Sohn von ($x | Person_NP)? auf", "Liste die Enkel von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Sohn von ($x | Person_NP)??", "wer ist die Enkel von die Sohn von ($x | Person_NP)??", "wer sind Enkel von die Sohn von ($x | Person_NP)??", "wer war die Enkel von die Sohn von ($x | Person_NP)??", "wer waren Enkel von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "265",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die Nachfolger von ($x | Person_NP)?", "Gib mir den Enkel von die Nachfolger von ($x | Person_NP)?", "Gib mir die Enkel von die Nachfolger von ($x | Person_NP)?", "Liste alle Enkel von die Nachfolger von ($x | Person_NP)? auf", "Liste die Enkel von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Nachfolger von ($x | Person_NP)??", "wer ist die Enkel von die Nachfolger von ($x | Person_NP)??", "wer sind Enkel von die Nachfolger von ($x | Person_NP)??", "wer war die Enkel von die Nachfolger von ($x | Person_NP)??", "wer waren Enkel von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "266",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die Frau von ($x | Person_NP)?", "Gib mir den Enkel von die Frau von ($x | Person_NP)?", "Gib mir die Enkel von die Frau von ($x | Person_NP)?", "Liste alle Enkel von die Frau von ($x | Person_NP)? auf", "Liste die Enkel von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Frau von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Frau von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Frau von ($x | Person_NP)??", "wer ist die Enkel von die Frau von ($x | Person_NP)??", "wer sind Enkel von die Frau von ($x | Person_NP)??", "wer war die Enkel von die Frau von ($x | Person_NP)??", "wer waren Enkel von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "267",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir den Enkel von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Enkel von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Enkel von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Enkel von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Enkel von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "268",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die B�rgermeister von ($x | City_NP)?", "Gib mir den Enkel von die B�rgermeister von ($x | City_NP)?", "Gib mir die Enkel von die B�rgermeister von ($x | City_NP)?", "Liste alle Enkel von die B�rgermeister von ($x | City_NP)? auf", "Liste die Enkel von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Enkel von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Enkel von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Enkel von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Enkel von die B�rgermeister von ($x | City_NP)??", "wer ist die Enkel von die B�rgermeister von ($x | City_NP)??", "wer sind Enkel von die B�rgermeister von ($x | City_NP)??", "wer war die Enkel von die B�rgermeister von ($x | City_NP)??", "wer waren Enkel von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "269",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die Doktorvater von ($x | Person_NP)?", "Gib mir den Enkel von die Doktorvater von ($x | Person_NP)?", "Gib mir die Enkel von die Doktorvater von ($x | Person_NP)?", "Liste alle Enkel von die Doktorvater von ($x | Person_NP)? auf", "Liste die Enkel von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Enkel von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Enkel von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Enkel von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Enkel von die Doktorvater von ($x | Person_NP)??", "wer ist die Enkel von die Doktorvater von ($x | Person_NP)??", "wer sind Enkel von die Doktorvater von ($x | Person_NP)??", "wer war die Enkel von die Doktorvater von ($x | Person_NP)??", "wer waren Enkel von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "270",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von die Bandmitglieder von ($x | Band_NP)?", "Gib mir den Enkel von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Enkel von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Enkel von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Enkel von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Enkel von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Enkel von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Enkel von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Enkel von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Enkel von die Bandmitglieder von ($x | Band_NP)??", "wer sind Enkel von die Bandmitglieder von ($x | Band_NP)??", "wer war die Enkel von die Bandmitglieder von ($x | Band_NP)??", "wer waren Enkel von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "271",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "272",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "273",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "274",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "275",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Enkel von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Enkel von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "276",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Enkel von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Enkel von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "277",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Enkel von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Enkel von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "278",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Enkel von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Enkel von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "279",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Enkel von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Enkel von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "280",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Enkel von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Enkel von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "281",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Enkel von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Enkel von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "282",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Enkel von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Enkel von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "283",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Enkel von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Enkel von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "284",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Enkel von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Enkel von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "285",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Enkel von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Enkel von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "286",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "287",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "288",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "289",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "290",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die Enkel von ($x | Person_NP)?", "Gib mir die Kind von die Enkel von ($x | Person_NP)?", "Gib mir die Kinder von die Enkel von ($x | Person_NP)?", "Liste alle Kinder von die Enkel von ($x | Person_NP)? auf", "Liste die Kinder von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Kind von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Kind von die Enkel von ($x | Person_NP)??", "wer ist die Kind von die Enkel von ($x | Person_NP)??", "wer sind Kinder von die Enkel von ($x | Person_NP)??", "wer war die Kind von die Enkel von ($x | Person_NP)??", "wer waren Kinder von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "291",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die Kind von ($x | Person_NP)?", "Gib mir die Kind von die Kind von ($x | Person_NP)?", "Gib mir die Kinder von die Kind von ($x | Person_NP)?", "Liste alle Kinder von die Kind von ($x | Person_NP)? auf", "Liste die Kinder von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Kind von ($x | Person_NP)??", "Welche Personen sind die Kind von die Kind von ($x | Person_NP)??", "Welche Personen waren die Kind von die Kind von ($x | Person_NP)??", "wer ist die Kind von die Kind von ($x | Person_NP)??", "wer sind Kinder von die Kind von ($x | Person_NP)??", "wer war die Kind von die Kind von ($x | Person_NP)??", "wer waren Kinder von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "292",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Kind von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Kinder von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Kinder von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Kinder von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Kind von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Kind von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Kind von die Vizepr�sident unter ($x | Person_NP)??", "wer sind Kinder von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Kind von die Vizepr�sident unter ($x | Person_NP)??", "wer waren Kinder von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "293",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die Tochter von ($x | Person_NP)?", "Gib mir die Kind von die Tochter von ($x | Person_NP)?", "Gib mir die Kinder von die Tochter von ($x | Person_NP)?", "Liste alle Kinder von die Tochter von ($x | Person_NP)? auf", "Liste die Kinder von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Kind von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Kind von die Tochter von ($x | Person_NP)??", "wer ist die Kind von die Tochter von ($x | Person_NP)??", "wer sind Kinder von die Tochter von ($x | Person_NP)??", "wer war die Kind von die Tochter von ($x | Person_NP)??", "wer waren Kinder von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "294",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die Sohn von ($x | Person_NP)?", "Gib mir die Kind von die Sohn von ($x | Person_NP)?", "Gib mir die Kinder von die Sohn von ($x | Person_NP)?", "Liste alle Kinder von die Sohn von ($x | Person_NP)? auf", "Liste die Kinder von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Kind von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Kind von die Sohn von ($x | Person_NP)??", "wer ist die Kind von die Sohn von ($x | Person_NP)??", "wer sind Kinder von die Sohn von ($x | Person_NP)??", "wer war die Kind von die Sohn von ($x | Person_NP)??", "wer waren Kinder von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "295",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die Nachfolger von ($x | Person_NP)?", "Gib mir die Kind von die Nachfolger von ($x | Person_NP)?", "Gib mir die Kinder von die Nachfolger von ($x | Person_NP)?", "Liste alle Kinder von die Nachfolger von ($x | Person_NP)? auf", "Liste die Kinder von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Kind von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Kind von die Nachfolger von ($x | Person_NP)??", "wer ist die Kind von die Nachfolger von ($x | Person_NP)??", "wer sind Kinder von die Nachfolger von ($x | Person_NP)??", "wer war die Kind von die Nachfolger von ($x | Person_NP)??", "wer waren Kinder von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "296",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die Frau von ($x | Person_NP)?", "Gib mir die Kind von die Frau von ($x | Person_NP)?", "Gib mir die Kinder von die Frau von ($x | Person_NP)?", "Liste alle Kinder von die Frau von ($x | Person_NP)? auf", "Liste die Kinder von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Frau von ($x | Person_NP)??", "Welche Personen sind die Kind von die Frau von ($x | Person_NP)??", "Welche Personen waren die Kind von die Frau von ($x | Person_NP)??", "wer ist die Kind von die Frau von ($x | Person_NP)??", "wer sind Kinder von die Frau von ($x | Person_NP)??", "wer war die Kind von die Frau von ($x | Person_NP)??", "wer waren Kinder von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "297",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Kind von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Kinder von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Kinder von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Kinder von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Kinder von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Kinder von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "298",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die B�rgermeister von ($x | City_NP)?", "Gib mir die Kind von die B�rgermeister von ($x | City_NP)?", "Gib mir die Kinder von die B�rgermeister von ($x | City_NP)?", "Liste alle Kinder von die B�rgermeister von ($x | City_NP)? auf", "Liste die Kinder von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Kind von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Kind von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Kind von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Kind von die B�rgermeister von ($x | City_NP)??", "wer ist die Kind von die B�rgermeister von ($x | City_NP)??", "wer sind Kinder von die B�rgermeister von ($x | City_NP)??", "wer war die Kind von die B�rgermeister von ($x | City_NP)??", "wer waren Kinder von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "299",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die Doktorvater von ($x | Person_NP)?", "Gib mir die Kind von die Doktorvater von ($x | Person_NP)?", "Gib mir die Kinder von die Doktorvater von ($x | Person_NP)?", "Liste alle Kinder von die Doktorvater von ($x | Person_NP)? auf", "Liste die Kinder von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Kind von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Kind von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Kind von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Kind von die Doktorvater von ($x | Person_NP)??", "wer ist die Kind von die Doktorvater von ($x | Person_NP)??", "wer sind Kinder von die Doktorvater von ($x | Person_NP)??", "wer war die Kind von die Doktorvater von ($x | Person_NP)??", "wer waren Kinder von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "300",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Kind von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Kinder von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Kinder von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Kinder von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Kind von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Kind von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Kind von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Kind von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Kind von die Bandmitglieder von ($x | Band_NP)??", "wer sind Kinder von die Bandmitglieder von ($x | Band_NP)??", "wer war die Kind von die Bandmitglieder von ($x | Band_NP)??", "wer waren Kinder von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "301",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "302",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "303",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "304",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "305",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Kind von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Kinder von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "306",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Kind von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Kinder von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "307",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Kind von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Kinder von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "308",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Kind von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Kinder von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "309",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Kind von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Kinder von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "310",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Kind von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Kinder von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "311",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Kind von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Kinder von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "312",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Kind von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Kinder von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "313",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Kind von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Kinder von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "314",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Kind von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Kinder von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "315",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Kind von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Kinder von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "316",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "317",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "318",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "319",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "320",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Enkel von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Enkel von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Enkel von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Enkel von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Enkel von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "321",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Kind von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Kind von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Kind von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Kind von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Kind von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Kind von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Kind von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Kind von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Kind von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Kind von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "322",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)??", "wer war die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "323",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Tochter von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Tochter von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Tochter von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Tochter von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Tochter von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "324",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Sohn von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Sohn von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Sohn von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Sohn von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Sohn von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "325",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Nachfolger von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "326",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Frau von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Frau von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Frau von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Frau von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Frau von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Frau von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Frau von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Frau von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Frau von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Frau von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "327",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir den Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "328",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)?", "Gib mir den Vizepr�sident unter die B�rgermeister von ($x | City_NP)?", "Gib mir die Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)?", "Liste alle Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)? auf", "Liste die Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "wer ist die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "wer sind Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)??", "wer war die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "wer waren Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "329",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)?", "Gib mir den Vizepr�sident unter die Doktorvater von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)?", "Liste alle Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "wer ist die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "wer sind Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)??", "wer war die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "wer waren Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "330",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)?", "Gib mir den Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)?", "Liste alle Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "wer ist die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "wer sind Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)??", "wer war die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "wer waren Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "331",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "332",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "333",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "334",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "335",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Vizepr�sident unter die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Vizepr�sidenten unter die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "336",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Vizepr�sident unter die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Vizepr�sidenten unter die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "337",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Vizepr�sident unter die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Vizepr�sidenten unter die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "338",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Vizepr�sident unter die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Vizepr�sidenten unter die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "339",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Vizepr�sident unter die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Vizepr�sidenten unter die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "340",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Vizepr�sident unter die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Vizepr�sidenten unter die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "341",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Vizepr�sident unter die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Vizepr�sidenten unter die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "342",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Vizepr�sident unter die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Vizepr�sidenten unter die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "343",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Vizepr�sident unter die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Vizepr�sidenten unter die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "344",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Vizepr�sident unter die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Vizepr�sidenten unter die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "345",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Vizepr�sident unter die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Vizepr�sidenten unter die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "346",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "347",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "348",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "349",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "350",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir die Hauptstadt von die Vizepr�sident von ($x | Person_NP)?", "was ist die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??", "was war die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??", "Welche Stadt ist die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??", "Welche Stadt war die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??", "Welche St�dte sind die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??", "Welche St�dte waren die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "351",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | City_NP) die Hauptstadt von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "352",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Spitznamen von die Hauptstadt von ($x | Country_NP)?", "Gib mir den Spitzname von die Hauptstadt von ($x | Country_NP)?", "Gib mir die Spitznamen von die Hauptstadt von ($x | Country_NP)?", "Liste alle Spitznamen von die Hauptstadt von ($x | Country_NP)? auf", "Liste die Spitznamen von die Hauptstadt von ($x | Country_NP)? auf", "was ist die Spitzname von die Hauptstadt von ($x | Country_NP)??", "was sind Spitznamen von die Hauptstadt von ($x | Country_NP)??", "was war die Spitzname von die Hauptstadt von ($x | Country_NP)??", "was waren Spitznamen von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "353",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | THING_NP) die Spitzname von die Hauptstadt von ($x | Country_NP)??", "sind ($x | THING_NP) die Spitznamen von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "354",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von die Hauptstadt von ($x | Country_NP)?", "was ist die Gesamteinwohnerzahl von die Hauptstadt von ($x | Country_NP)??", "was war die Gesamteinwohnerzahl von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "355",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von die Hauptquartier von ($x | Organisation_NP)?", "was ist die Gesamteinwohnerzahl von die Hauptquartier von ($x | Organisation_NP)??", "was war die Gesamteinwohnerzahl von die Hauptquartier von ($x | Organisation_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "356",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von die Vizepr�sident von ($x | Person_NP)?", "was ist die Gesamteinwohnerzahl von die Vizepr�sident von ($x | Person_NP)??", "was war die Gesamteinwohnerzahl von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "357",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von die Lage in ($x | Location_NP)?", "was ist die Gesamteinwohnerzahl von die Lage in ($x | Location_NP)??", "was war die Gesamteinwohnerzahl von die Lage in ($x | Location_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "358",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Number_NP) die Gesamteinwohnerzahl von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "359",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Number_NP) die Gesamteinwohnerzahl von die Hauptquartier von ($x | Organisation_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "360",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Number_NP) die Gesamteinwohnerzahl von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "361",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Number_NP) die Gesamteinwohnerzahl von die Lage in ($x | Location_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "362",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die Enkel von ($x | Person_NP)?", "Gib mir die Tochter von die Enkel von ($x | Person_NP)?", "Gib mir die T�chter von die Enkel von ($x | Person_NP)?", "Liste alle T�chter von die Enkel von ($x | Person_NP)? auf", "Liste die T�chter von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Enkel von ($x | Person_NP)??", "wer ist die Tochter von die Enkel von ($x | Person_NP)??", "wer sind T�chter von die Enkel von ($x | Person_NP)??", "wer war die Tochter von die Enkel von ($x | Person_NP)??", "wer waren T�chter von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "363",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die Kind von ($x | Person_NP)?", "Gib mir die Tochter von die Kind von ($x | Person_NP)?", "Gib mir die T�chter von die Kind von ($x | Person_NP)?", "Liste alle T�chter von die Kind von ($x | Person_NP)? auf", "Liste die T�chter von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Kind von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Kind von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Kind von ($x | Person_NP)??", "wer ist die Tochter von die Kind von ($x | Person_NP)??", "wer sind T�chter von die Kind von ($x | Person_NP)??", "wer war die Tochter von die Kind von ($x | Person_NP)??", "wer waren T�chter von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "364",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Tochter von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die T�chter von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle T�chter von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die T�chter von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "wer sind T�chter von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "wer waren T�chter von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "365",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die Tochter von ($x | Person_NP)?", "Gib mir die Tochter von die Tochter von ($x | Person_NP)?", "Gib mir die T�chter von die Tochter von ($x | Person_NP)?", "Liste alle T�chter von die Tochter von ($x | Person_NP)? auf", "Liste die T�chter von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Tochter von ($x | Person_NP)??", "wer ist die Tochter von die Tochter von ($x | Person_NP)??", "wer sind T�chter von die Tochter von ($x | Person_NP)??", "wer war die Tochter von die Tochter von ($x | Person_NP)??", "wer waren T�chter von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "366",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die Sohn von ($x | Person_NP)?", "Gib mir die Tochter von die Sohn von ($x | Person_NP)?", "Gib mir die T�chter von die Sohn von ($x | Person_NP)?", "Liste alle T�chter von die Sohn von ($x | Person_NP)? auf", "Liste die T�chter von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Sohn von ($x | Person_NP)??", "wer ist die Tochter von die Sohn von ($x | Person_NP)??", "wer sind T�chter von die Sohn von ($x | Person_NP)??", "wer war die Tochter von die Sohn von ($x | Person_NP)??", "wer waren T�chter von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "367",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die Nachfolger von ($x | Person_NP)?", "Gib mir die Tochter von die Nachfolger von ($x | Person_NP)?", "Gib mir die T�chter von die Nachfolger von ($x | Person_NP)?", "Liste alle T�chter von die Nachfolger von ($x | Person_NP)? auf", "Liste die T�chter von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Nachfolger von ($x | Person_NP)??", "wer ist die Tochter von die Nachfolger von ($x | Person_NP)??", "wer sind T�chter von die Nachfolger von ($x | Person_NP)??", "wer war die Tochter von die Nachfolger von ($x | Person_NP)??", "wer waren T�chter von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "368",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die Frau von ($x | Person_NP)?", "Gib mir die Tochter von die Frau von ($x | Person_NP)?", "Gib mir die T�chter von die Frau von ($x | Person_NP)?", "Liste alle T�chter von die Frau von ($x | Person_NP)? auf", "Liste die T�chter von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Frau von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Frau von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Frau von ($x | Person_NP)??", "wer ist die Tochter von die Frau von ($x | Person_NP)??", "wer sind T�chter von die Frau von ($x | Person_NP)??", "wer war die Tochter von die Frau von ($x | Person_NP)??", "wer waren T�chter von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "369",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Tochter von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die T�chter von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle T�chter von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die T�chter von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind T�chter von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren T�chter von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "370",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die B�rgermeister von ($x | City_NP)?", "Gib mir die Tochter von die B�rgermeister von ($x | City_NP)?", "Gib mir die T�chter von die B�rgermeister von ($x | City_NP)?", "Liste alle T�chter von die B�rgermeister von ($x | City_NP)? auf", "Liste die T�chter von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Tochter von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Tochter von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Tochter von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Tochter von die B�rgermeister von ($x | City_NP)??", "wer ist die Tochter von die B�rgermeister von ($x | City_NP)??", "wer sind T�chter von die B�rgermeister von ($x | City_NP)??", "wer war die Tochter von die B�rgermeister von ($x | City_NP)??", "wer waren T�chter von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "371",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die Doktorvater von ($x | Person_NP)?", "Gib mir die Tochter von die Doktorvater von ($x | Person_NP)?", "Gib mir die T�chter von die Doktorvater von ($x | Person_NP)?", "Liste alle T�chter von die Doktorvater von ($x | Person_NP)? auf", "Liste die T�chter von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Tochter von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Tochter von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Tochter von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Tochter von die Doktorvater von ($x | Person_NP)??", "wer ist die Tochter von die Doktorvater von ($x | Person_NP)??", "wer sind T�chter von die Doktorvater von ($x | Person_NP)??", "wer war die Tochter von die Doktorvater von ($x | Person_NP)??", "wer waren T�chter von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "372",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Tochter von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die T�chter von die Bandmitglieder von ($x | Band_NP)?", "Liste alle T�chter von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die T�chter von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Tochter von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Tochter von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Tochter von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Tochter von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Tochter von die Bandmitglieder von ($x | Band_NP)??", "wer sind T�chter von die Bandmitglieder von ($x | Band_NP)??", "wer war die Tochter von die Bandmitglieder von ($x | Band_NP)??", "wer waren T�chter von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "373",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "374",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "375",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "376",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "377",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Tochter von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die T�chter von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "378",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Tochter von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die T�chter von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "379",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Tochter von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die T�chter von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "380",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Tochter von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die T�chter von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "381",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Tochter von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die T�chter von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "382",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Tochter von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die T�chter von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "383",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Tochter von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die T�chter von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "384",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Tochter von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die T�chter von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "385",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Tochter von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die T�chter von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "386",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Tochter von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die T�chter von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "387",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Tochter von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die T�chter von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "388",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "389",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "390",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "391",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "392",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die Enkel von ($x | Person_NP)?", "Gib mir die Sohn von die Enkel von ($x | Person_NP)?", "Gib mir die S�hne von die Enkel von ($x | Person_NP)?", "Liste alle S�hne von die Enkel von ($x | Person_NP)? auf", "Liste die S�hne von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Enkel von ($x | Person_NP)??", "wer ist die Sohn von die Enkel von ($x | Person_NP)??", "wer sind S�hne von die Enkel von ($x | Person_NP)??", "wer war die Sohn von die Enkel von ($x | Person_NP)??", "wer waren S�hne von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "393",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die Kind von ($x | Person_NP)?", "Gib mir die Sohn von die Kind von ($x | Person_NP)?", "Gib mir die S�hne von die Kind von ($x | Person_NP)?", "Liste alle S�hne von die Kind von ($x | Person_NP)? auf", "Liste die S�hne von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Kind von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Kind von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Kind von ($x | Person_NP)??", "wer ist die Sohn von die Kind von ($x | Person_NP)??", "wer sind S�hne von die Kind von ($x | Person_NP)??", "wer war die Sohn von die Kind von ($x | Person_NP)??", "wer waren S�hne von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "394",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Sohn von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die S�hne von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle S�hne von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die S�hne von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "wer sind S�hne von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "wer waren S�hne von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "395",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die Tochter von ($x | Person_NP)?", "Gib mir die Sohn von die Tochter von ($x | Person_NP)?", "Gib mir die S�hne von die Tochter von ($x | Person_NP)?", "Liste alle S�hne von die Tochter von ($x | Person_NP)? auf", "Liste die S�hne von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Tochter von ($x | Person_NP)??", "wer ist die Sohn von die Tochter von ($x | Person_NP)??", "wer sind S�hne von die Tochter von ($x | Person_NP)??", "wer war die Sohn von die Tochter von ($x | Person_NP)??", "wer waren S�hne von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "396",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die Sohn von ($x | Person_NP)?", "Gib mir die Sohn von die Sohn von ($x | Person_NP)?", "Gib mir die S�hne von die Sohn von ($x | Person_NP)?", "Liste alle S�hne von die Sohn von ($x | Person_NP)? auf", "Liste die S�hne von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Sohn von ($x | Person_NP)??", "wer ist die Sohn von die Sohn von ($x | Person_NP)??", "wer sind S�hne von die Sohn von ($x | Person_NP)??", "wer war die Sohn von die Sohn von ($x | Person_NP)??", "wer waren S�hne von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "397",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die Nachfolger von ($x | Person_NP)?", "Gib mir die Sohn von die Nachfolger von ($x | Person_NP)?", "Gib mir die S�hne von die Nachfolger von ($x | Person_NP)?", "Liste alle S�hne von die Nachfolger von ($x | Person_NP)? auf", "Liste die S�hne von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Nachfolger von ($x | Person_NP)??", "wer ist die Sohn von die Nachfolger von ($x | Person_NP)??", "wer sind S�hne von die Nachfolger von ($x | Person_NP)??", "wer war die Sohn von die Nachfolger von ($x | Person_NP)??", "wer waren S�hne von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "398",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die Frau von ($x | Person_NP)?", "Gib mir die Sohn von die Frau von ($x | Person_NP)?", "Gib mir die S�hne von die Frau von ($x | Person_NP)?", "Liste alle S�hne von die Frau von ($x | Person_NP)? auf", "Liste die S�hne von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Frau von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Frau von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Frau von ($x | Person_NP)??", "wer ist die Sohn von die Frau von ($x | Person_NP)??", "wer sind S�hne von die Frau von ($x | Person_NP)??", "wer war die Sohn von die Frau von ($x | Person_NP)??", "wer waren S�hne von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "399",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Sohn von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die S�hne von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle S�hne von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die S�hne von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind S�hne von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren S�hne von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "400",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die B�rgermeister von ($x | City_NP)?", "Gib mir die Sohn von die B�rgermeister von ($x | City_NP)?", "Gib mir die S�hne von die B�rgermeister von ($x | City_NP)?", "Liste alle S�hne von die B�rgermeister von ($x | City_NP)? auf", "Liste die S�hne von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Sohn von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Sohn von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Sohn von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Sohn von die B�rgermeister von ($x | City_NP)??", "wer ist die Sohn von die B�rgermeister von ($x | City_NP)??", "wer sind S�hne von die B�rgermeister von ($x | City_NP)??", "wer war die Sohn von die B�rgermeister von ($x | City_NP)??", "wer waren S�hne von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "401",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die Doktorvater von ($x | Person_NP)?", "Gib mir die Sohn von die Doktorvater von ($x | Person_NP)?", "Gib mir die S�hne von die Doktorvater von ($x | Person_NP)?", "Liste alle S�hne von die Doktorvater von ($x | Person_NP)? auf", "Liste die S�hne von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Sohn von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Sohn von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Sohn von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Sohn von die Doktorvater von ($x | Person_NP)??", "wer ist die Sohn von die Doktorvater von ($x | Person_NP)??", "wer sind S�hne von die Doktorvater von ($x | Person_NP)??", "wer war die Sohn von die Doktorvater von ($x | Person_NP)??", "wer waren S�hne von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "402",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Sohn von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die S�hne von die Bandmitglieder von ($x | Band_NP)?", "Liste alle S�hne von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die S�hne von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Sohn von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Sohn von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Sohn von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Sohn von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Sohn von die Bandmitglieder von ($x | Band_NP)??", "wer sind S�hne von die Bandmitglieder von ($x | Band_NP)??", "wer war die Sohn von die Bandmitglieder von ($x | Band_NP)??", "wer waren S�hne von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "403",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "404",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "405",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "406",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "407",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Sohn von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die S�hne von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "408",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Sohn von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die S�hne von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "409",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Sohn von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die S�hne von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "410",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Sohn von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die S�hne von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "411",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Sohn von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die S�hne von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "412",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Sohn von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die S�hne von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "413",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Sohn von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die S�hne von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "414",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Sohn von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die S�hne von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "415",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Sohn von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die S�hne von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "416",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Sohn von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die S�hne von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "417",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Sohn von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die S�hne von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "418",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "419",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "420",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "421",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "422",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vorwahl von die Lage in ($x | Location_NP)?", "Gib mir die Vorwahl von die Lage in ($x | Location_NP)?", "Liste alle Vorwahl von die Lage in ($x | Location_NP)? auf", "Liste die Vorwahl von die Lage in ($x | Location_NP)? auf", "was ist die Vorwahl von die Lage in ($x | Location_NP)??", "was sind Vorwahl von die Lage in ($x | Location_NP)??", "was war die Vorwahl von die Lage in ($x | Location_NP)??", "was waren Vorwahl von die Lage in ($x | Location_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "423",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | THING_NP) die Vorwahl von die Lage in ($x | Location_NP)??", "sind ($x | THING_NP) die Vorwahl von die Lage in ($x | Location_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "424",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die Enkel von ($x | Person_NP)?", "Gib mir den Nachfolger von die Enkel von ($x | Person_NP)?", "Gib mir die Nachfolger von die Enkel von ($x | Person_NP)?", "Liste alle Nachfolger von die Enkel von ($x | Person_NP)? auf", "Liste die Nachfolger von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Enkel von ($x | Person_NP)??", "wer ist die Nachfolger von die Enkel von ($x | Person_NP)??", "wer sind Nachfolger von die Enkel von ($x | Person_NP)??", "wer war die Nachfolger von die Enkel von ($x | Person_NP)??", "wer waren Nachfolger von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "425",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die Kind von ($x | Person_NP)?", "Gib mir den Nachfolger von die Kind von ($x | Person_NP)?", "Gib mir die Nachfolger von die Kind von ($x | Person_NP)?", "Liste alle Nachfolger von die Kind von ($x | Person_NP)? auf", "Liste die Nachfolger von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Kind von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Kind von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Kind von ($x | Person_NP)??", "wer ist die Nachfolger von die Kind von ($x | Person_NP)??", "wer sind Nachfolger von die Kind von ($x | Person_NP)??", "wer war die Nachfolger von die Kind von ($x | Person_NP)??", "wer waren Nachfolger von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "426",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir den Nachfolger von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Nachfolger von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Nachfolger von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Nachfolger von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "wer sind Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "wer waren Nachfolger von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "427",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die Tochter von ($x | Person_NP)?", "Gib mir den Nachfolger von die Tochter von ($x | Person_NP)?", "Gib mir die Nachfolger von die Tochter von ($x | Person_NP)?", "Liste alle Nachfolger von die Tochter von ($x | Person_NP)? auf", "Liste die Nachfolger von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Tochter von ($x | Person_NP)??", "wer ist die Nachfolger von die Tochter von ($x | Person_NP)??", "wer sind Nachfolger von die Tochter von ($x | Person_NP)??", "wer war die Nachfolger von die Tochter von ($x | Person_NP)??", "wer waren Nachfolger von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "428",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die Sohn von ($x | Person_NP)?", "Gib mir den Nachfolger von die Sohn von ($x | Person_NP)?", "Gib mir die Nachfolger von die Sohn von ($x | Person_NP)?", "Liste alle Nachfolger von die Sohn von ($x | Person_NP)? auf", "Liste die Nachfolger von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Sohn von ($x | Person_NP)??", "wer ist die Nachfolger von die Sohn von ($x | Person_NP)??", "wer sind Nachfolger von die Sohn von ($x | Person_NP)??", "wer war die Nachfolger von die Sohn von ($x | Person_NP)??", "wer waren Nachfolger von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "429",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die Nachfolger von ($x | Person_NP)?", "Gib mir den Nachfolger von die Nachfolger von ($x | Person_NP)?", "Gib mir die Nachfolger von die Nachfolger von ($x | Person_NP)?", "Liste alle Nachfolger von die Nachfolger von ($x | Person_NP)? auf", "Liste die Nachfolger von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Nachfolger von ($x | Person_NP)??", "wer ist die Nachfolger von die Nachfolger von ($x | Person_NP)??", "wer sind Nachfolger von die Nachfolger von ($x | Person_NP)??", "wer war die Nachfolger von die Nachfolger von ($x | Person_NP)??", "wer waren Nachfolger von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "430",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die Frau von ($x | Person_NP)?", "Gib mir den Nachfolger von die Frau von ($x | Person_NP)?", "Gib mir die Nachfolger von die Frau von ($x | Person_NP)?", "Liste alle Nachfolger von die Frau von ($x | Person_NP)? auf", "Liste die Nachfolger von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Frau von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Frau von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Frau von ($x | Person_NP)??", "wer ist die Nachfolger von die Frau von ($x | Person_NP)??", "wer sind Nachfolger von die Frau von ($x | Person_NP)??", "wer war die Nachfolger von die Frau von ($x | Person_NP)??", "wer waren Nachfolger von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "431",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir den Nachfolger von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Nachfolger von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "432",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die B�rgermeister von ($x | City_NP)?", "Gib mir den Nachfolger von die B�rgermeister von ($x | City_NP)?", "Gib mir die Nachfolger von die B�rgermeister von ($x | City_NP)?", "Liste alle Nachfolger von die B�rgermeister von ($x | City_NP)? auf", "Liste die Nachfolger von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Nachfolger von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Nachfolger von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Nachfolger von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Nachfolger von die B�rgermeister von ($x | City_NP)??", "wer ist die Nachfolger von die B�rgermeister von ($x | City_NP)??", "wer sind Nachfolger von die B�rgermeister von ($x | City_NP)??", "wer war die Nachfolger von die B�rgermeister von ($x | City_NP)??", "wer waren Nachfolger von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "433",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die Doktorvater von ($x | Person_NP)?", "Gib mir den Nachfolger von die Doktorvater von ($x | Person_NP)?", "Gib mir die Nachfolger von die Doktorvater von ($x | Person_NP)?", "Liste alle Nachfolger von die Doktorvater von ($x | Person_NP)? auf", "Liste die Nachfolger von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Nachfolger von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Nachfolger von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Nachfolger von die Doktorvater von ($x | Person_NP)??", "wer ist die Nachfolger von die Doktorvater von ($x | Person_NP)??", "wer sind Nachfolger von die Doktorvater von ($x | Person_NP)??", "wer war die Nachfolger von die Doktorvater von ($x | Person_NP)??", "wer waren Nachfolger von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "434",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von die Bandmitglieder von ($x | Band_NP)?", "Gib mir den Nachfolger von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Nachfolger von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Nachfolger von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Nachfolger von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "wer sind Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "wer war die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "wer waren Nachfolger von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "435",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "436",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "437",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "438",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "439",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Nachfolger von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Nachfolger von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "440",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Nachfolger von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Nachfolger von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "441",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Nachfolger von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "442",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Nachfolger von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Nachfolger von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "443",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Nachfolger von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Nachfolger von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "444",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Nachfolger von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Nachfolger von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "445",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Nachfolger von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Nachfolger von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "446",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Nachfolger von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "447",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Nachfolger von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Nachfolger von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "448",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Nachfolger von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Nachfolger von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "449",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Nachfolger von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Nachfolger von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "450",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "451",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "452",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "453",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "454",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "455",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "456",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "457",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "458",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/operator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "459",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/product> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "460",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die Enkel von ($x | Person_NP)?", "Gib mir die Frau von die Enkel von ($x | Person_NP)?", "Gib mir die Frauen von die Enkel von ($x | Person_NP)?", "Liste alle Frauen von die Enkel von ($x | Person_NP)? auf", "Liste die Frauen von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Frau von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Frau von die Enkel von ($x | Person_NP)??", "wer ist die Frau von die Enkel von ($x | Person_NP)??", "wer sind Frauen von die Enkel von ($x | Person_NP)??", "wer war die Frau von die Enkel von ($x | Person_NP)??", "wer waren Frauen von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "461",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die Kind von ($x | Person_NP)?", "Gib mir die Frau von die Kind von ($x | Person_NP)?", "Gib mir die Frauen von die Kind von ($x | Person_NP)?", "Liste alle Frauen von die Kind von ($x | Person_NP)? auf", "Liste die Frauen von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Kind von ($x | Person_NP)??", "Welche Personen sind die Frau von die Kind von ($x | Person_NP)??", "Welche Personen waren die Frau von die Kind von ($x | Person_NP)??", "wer ist die Frau von die Kind von ($x | Person_NP)??", "wer sind Frauen von die Kind von ($x | Person_NP)??", "wer war die Frau von die Kind von ($x | Person_NP)??", "wer waren Frauen von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "462",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Frau von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Frauen von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Frauen von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Frauen von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Frau von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Frau von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Frau von die Vizepr�sident unter ($x | Person_NP)??", "wer sind Frauen von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Frau von die Vizepr�sident unter ($x | Person_NP)??", "wer waren Frauen von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "463",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die Tochter von ($x | Person_NP)?", "Gib mir die Frau von die Tochter von ($x | Person_NP)?", "Gib mir die Frauen von die Tochter von ($x | Person_NP)?", "Liste alle Frauen von die Tochter von ($x | Person_NP)? auf", "Liste die Frauen von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Frau von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Frau von die Tochter von ($x | Person_NP)??", "wer ist die Frau von die Tochter von ($x | Person_NP)??", "wer sind Frauen von die Tochter von ($x | Person_NP)??", "wer war die Frau von die Tochter von ($x | Person_NP)??", "wer waren Frauen von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "464",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die Sohn von ($x | Person_NP)?", "Gib mir die Frau von die Sohn von ($x | Person_NP)?", "Gib mir die Frauen von die Sohn von ($x | Person_NP)?", "Liste alle Frauen von die Sohn von ($x | Person_NP)? auf", "Liste die Frauen von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Frau von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Frau von die Sohn von ($x | Person_NP)??", "wer ist die Frau von die Sohn von ($x | Person_NP)??", "wer sind Frauen von die Sohn von ($x | Person_NP)??", "wer war die Frau von die Sohn von ($x | Person_NP)??", "wer waren Frauen von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "465",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die Nachfolger von ($x | Person_NP)?", "Gib mir die Frau von die Nachfolger von ($x | Person_NP)?", "Gib mir die Frauen von die Nachfolger von ($x | Person_NP)?", "Liste alle Frauen von die Nachfolger von ($x | Person_NP)? auf", "Liste die Frauen von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Frau von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Frau von die Nachfolger von ($x | Person_NP)??", "wer ist die Frau von die Nachfolger von ($x | Person_NP)??", "wer sind Frauen von die Nachfolger von ($x | Person_NP)??", "wer war die Frau von die Nachfolger von ($x | Person_NP)??", "wer waren Frauen von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "466",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die Frau von ($x | Person_NP)?", "Gib mir die Frau von die Frau von ($x | Person_NP)?", "Gib mir die Frauen von die Frau von ($x | Person_NP)?", "Liste alle Frauen von die Frau von ($x | Person_NP)? auf", "Liste die Frauen von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Frau von ($x | Person_NP)??", "Welche Personen sind die Frau von die Frau von ($x | Person_NP)??", "Welche Personen waren die Frau von die Frau von ($x | Person_NP)??", "wer ist die Frau von die Frau von ($x | Person_NP)??", "wer sind Frauen von die Frau von ($x | Person_NP)??", "wer war die Frau von die Frau von ($x | Person_NP)??", "wer waren Frauen von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "467",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Frau von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Frauen von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Frauen von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Frauen von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Frauen von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Frauen von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "468",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die B�rgermeister von ($x | City_NP)?", "Gib mir die Frau von die B�rgermeister von ($x | City_NP)?", "Gib mir die Frauen von die B�rgermeister von ($x | City_NP)?", "Liste alle Frauen von die B�rgermeister von ($x | City_NP)? auf", "Liste die Frauen von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Frau von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Frau von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Frau von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Frau von die B�rgermeister von ($x | City_NP)??", "wer ist die Frau von die B�rgermeister von ($x | City_NP)??", "wer sind Frauen von die B�rgermeister von ($x | City_NP)??", "wer war die Frau von die B�rgermeister von ($x | City_NP)??", "wer waren Frauen von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "469",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die Doktorvater von ($x | Person_NP)?", "Gib mir die Frau von die Doktorvater von ($x | Person_NP)?", "Gib mir die Frauen von die Doktorvater von ($x | Person_NP)?", "Liste alle Frauen von die Doktorvater von ($x | Person_NP)? auf", "Liste die Frauen von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Frau von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Frau von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Frau von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Frau von die Doktorvater von ($x | Person_NP)??", "wer ist die Frau von die Doktorvater von ($x | Person_NP)??", "wer sind Frauen von die Doktorvater von ($x | Person_NP)??", "wer war die Frau von die Doktorvater von ($x | Person_NP)??", "wer waren Frauen von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "470",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Frau von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Frauen von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Frauen von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Frauen von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Frau von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Frau von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Frau von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Frau von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Frau von die Bandmitglieder von ($x | Band_NP)??", "wer sind Frauen von die Bandmitglieder von ($x | Band_NP)??", "wer war die Frau von die Bandmitglieder von ($x | Band_NP)??", "wer waren Frauen von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "471",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "472",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "473",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "474",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "475",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Frau von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Frauen von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "476",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Frau von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Frauen von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "477",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Frau von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Frauen von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "478",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Frau von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Frauen von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "479",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Frau von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Frauen von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "480",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Frau von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Frauen von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "481",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Frau von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Frauen von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "482",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Frau von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Frauen von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "483",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Frau von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Frauen von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "484",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Frau von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Frauen von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "485",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Frau von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Frauen von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "486",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "487",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "488",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "489",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "490",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Enkel von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Enkel von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Enkel von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Enkel von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Enkel von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Enkel von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Enkel von ($x | Person_NP)??", "was war die Vizepr�sident von die Enkel von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Enkel von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Enkel von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Enkel von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Enkel von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "491",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Kind von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Kind von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Kind von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Kind von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Kind von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Kind von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Kind von ($x | Person_NP)??", "was war die Vizepr�sident von die Kind von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Kind von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Kind von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Kind von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Kind von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "492",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "was sind Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)??", "was war die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "was waren Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "493",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Tochter von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Tochter von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Tochter von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Tochter von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Tochter von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Tochter von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Tochter von ($x | Person_NP)??", "was war die Vizepr�sident von die Tochter von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Tochter von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Tochter von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Tochter von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Tochter von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "494",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Sohn von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Sohn von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Sohn von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Sohn von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Sohn von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Sohn von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Sohn von ($x | Person_NP)??", "was war die Vizepr�sident von die Sohn von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Sohn von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Sohn von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Sohn von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Sohn von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "495",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Nachfolger von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Nachfolger von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Nachfolger von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Nachfolger von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Nachfolger von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Nachfolger von ($x | Person_NP)??", "was war die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Nachfolger von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "496",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Frau von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Frau von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Frau von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Frau von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Frau von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Frau von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Frau von ($x | Person_NP)??", "was war die Vizepr�sident von die Frau von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Frau von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Frau von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Frau von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Frau von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "497",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir den Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)? auf", "was ist die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "was sind Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)??", "was war die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "was waren Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)??", "Welche L�nder sind die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "Welche L�nder waren die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "Welches Land ist die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "Welches Land war die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "498",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die B�rgermeister von ($x | City_NP)?", "Gib mir den Vizepr�sident von die B�rgermeister von ($x | City_NP)?", "Gib mir die Vizepr�sidenten von die B�rgermeister von ($x | City_NP)?", "Liste alle Vizepr�sidenten von die B�rgermeister von ($x | City_NP)? auf", "Liste die Vizepr�sidenten von die B�rgermeister von ($x | City_NP)? auf", "was ist die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "was sind Vizepr�sidenten von die B�rgermeister von ($x | City_NP)??", "was war die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "was waren Vizepr�sidenten von die B�rgermeister von ($x | City_NP)??", "Welche L�nder sind die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "Welche L�nder waren die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "Welches Land ist die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "Welches Land war die Vizepr�sident von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "499",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Doktorvater von ($x | Person_NP)?", "Gib mir den Vizepr�sident von die Doktorvater von ($x | Person_NP)?", "Gib mir die Vizepr�sidenten von die Doktorvater von ($x | Person_NP)?", "Liste alle Vizepr�sidenten von die Doktorvater von ($x | Person_NP)? auf", "Liste die Vizepr�sidenten von die Doktorvater von ($x | Person_NP)? auf", "was ist die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "was sind Vizepr�sidenten von die Doktorvater von ($x | Person_NP)??", "was war die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "was waren Vizepr�sidenten von die Doktorvater von ($x | Person_NP)??", "Welche L�nder sind die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "Welche L�nder waren die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "Welches Land ist die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "Welches Land war die Vizepr�sident von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "500",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)?", "Gib mir den Vizepr�sident von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)? auf", "was ist die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "was sind Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)??", "was war die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "was waren Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)??", "Welche L�nder sind die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "Welche L�nder waren die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "Welches Land ist die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "Welches Land war die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "501",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "502",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "503",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "504",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "505",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Enkel von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "506",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Kind von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "507",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Vizepr�sident unter ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "508",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Tochter von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "509",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Sohn von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "510",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Nachfolger von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "511",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Frau von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "512",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Herausgeber von ($x | WrittenWork_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "513",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die B�rgermeister von ($x | City_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "514",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Doktorvater von ($x | Person_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "515",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von die Bandmitglieder von ($x | Band_NP)??", "sind ($x | Country_NP) die Vizepr�sidenten von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "516",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "517",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "518",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "519",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "520",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Regierungsform von die Vizepr�sident von ($x | Person_NP)?", "Gib mir die Regierungsform von die Vizepr�sident von ($x | Person_NP)?", "Liste alle Regierungsform von die Vizepr�sident von ($x | Person_NP)? auf", "Liste die Regierungsform von die Vizepr�sident von ($x | Person_NP)? auf", "was ist die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "was sind Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "was war die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "was waren Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "Welche Typen sind die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "Welche Typen waren die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "Welcher Typ ist die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "Welcher Typ war die Regierungsform von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "521",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | GovernmentType_NP) die Regierungsform von die Vizepr�sident von ($x | Person_NP)??", "sind ($x | GovernmentType_NP) die Regierungsform von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "522",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle W�hrungen von die Vizepr�sident von ($x | Person_NP)?", "Gib mir die W�hrung von die Vizepr�sident von ($x | Person_NP)?", "Gib mir die W�hrungen von die Vizepr�sident von ($x | Person_NP)?", "Liste alle W�hrungen von die Vizepr�sident von ($x | Person_NP)? auf", "Liste die W�hrungen von die Vizepr�sident von ($x | Person_NP)? auf", "was ist die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "was sind W�hrungen von die Vizepr�sident von ($x | Person_NP)??", "was war die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "was waren W�hrungen von die Vizepr�sident von ($x | Person_NP)??", "Welche W�hrung ist die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "Welche W�hrung war die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "Welche W�hrungen sind die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "Welche W�hrungen waren die W�hrung von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "523",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Currency_NP) die W�hrung von die Vizepr�sident von ($x | Person_NP)??", "sind ($x | Currency_NP) die W�hrungen von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "524",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir den B�rgermeister von die Hauptstadt von ($x | Country_NP)?", "Welche dbo:Person ist die B�rgermeister von die Hauptstadt von ($x | Country_NP)??", "Welche dbo:Person war die B�rgermeister von die Hauptstadt von ($x | Country_NP)??", "Welche Personen sind die B�rgermeister von die Hauptstadt von ($x | Country_NP)??", "Welche Personen waren die B�rgermeister von die Hauptstadt von ($x | Country_NP)??", "wer ist die B�rgermeister von die Hauptstadt von ($x | Country_NP)??", "wer war die B�rgermeister von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "525",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die B�rgermeister von die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "526",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Amtssprachen von die Vizepr�sident von ($x | Person_NP)?", "Gib mir die Amtssprache von die Vizepr�sident von ($x | Person_NP)?", "Gib mir die Amtssprachen von die Vizepr�sident von ($x | Person_NP)?", "Liste alle Amtssprachen von die Vizepr�sident von ($x | Person_NP)? auf", "Liste die Amtssprachen von die Vizepr�sident von ($x | Person_NP)? auf", "was ist die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "was sind Amtssprachen von die Vizepr�sident von ($x | Person_NP)??", "was war die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "was waren Amtssprachen von die Vizepr�sident von ($x | Person_NP)??", "Welche Sprache ist die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "Welche Sprache war die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "Welche Sprachen sind die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "Welche Sprachen waren die Amtssprache von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "527",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Language_NP) die Amtssprache von die Vizepr�sident von ($x | Person_NP)??", "sind ($x | Language_NP) die Amtssprachen von die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "528",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Lagen in die Hauptstadt von ($x | Country_NP)?", "Gib mir das Lage in die Hauptstadt von ($x | Country_NP)?", "Gib mir die Lagen in die Hauptstadt von ($x | Country_NP)?", "Liste alle Lagen in die Hauptstadt von ($x | Country_NP)? auf", "Liste die Lagen in die Hauptstadt von ($x | Country_NP)? auf", "was ist die Lage in die Hauptstadt von ($x | Country_NP)??", "was sind Lagen in die Hauptstadt von ($x | Country_NP)??", "was war die Lage in die Hauptstadt von ($x | Country_NP)??", "was waren Lagen in die Hauptstadt von ($x | Country_NP)??", "Welche Lage ist die Lage in die Hauptstadt von ($x | Country_NP)??", "Welche Lage war die Lage in die Hauptstadt von ($x | Country_NP)??", "Welche Lagen sind die Lage in die Hauptstadt von ($x | Country_NP)??", "Welche Lagen waren die Lage in die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "529",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Lagen in die Hauptquartier von ($x | Organisation_NP)?", "Gib mir das Lage in die Hauptquartier von ($x | Organisation_NP)?", "Gib mir die Lagen in die Hauptquartier von ($x | Organisation_NP)?", "Liste alle Lagen in die Hauptquartier von ($x | Organisation_NP)? auf", "Liste die Lagen in die Hauptquartier von ($x | Organisation_NP)? auf", "was ist die Lage in die Hauptquartier von ($x | Organisation_NP)??", "was sind Lagen in die Hauptquartier von ($x | Organisation_NP)??", "was war die Lage in die Hauptquartier von ($x | Organisation_NP)??", "was waren Lagen in die Hauptquartier von ($x | Organisation_NP)??", "Welche Lage ist die Lage in die Hauptquartier von ($x | Organisation_NP)??", "Welche Lage war die Lage in die Hauptquartier von ($x | Organisation_NP)??", "Welche Lagen sind die Lage in die Hauptquartier von ($x | Organisation_NP)??", "Welche Lagen waren die Lage in die Hauptquartier von ($x | Organisation_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "530",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Lagen in die Vizepr�sident von ($x | Person_NP)?", "Gib mir das Lage in die Vizepr�sident von ($x | Person_NP)?", "Gib mir die Lagen in die Vizepr�sident von ($x | Person_NP)?", "Liste alle Lagen in die Vizepr�sident von ($x | Person_NP)? auf", "Liste die Lagen in die Vizepr�sident von ($x | Person_NP)? auf", "was ist die Lage in die Vizepr�sident von ($x | Person_NP)??", "was sind Lagen in die Vizepr�sident von ($x | Person_NP)??", "was war die Lage in die Vizepr�sident von ($x | Person_NP)??", "was waren Lagen in die Vizepr�sident von ($x | Person_NP)??", "Welche Lage ist die Lage in die Vizepr�sident von ($x | Person_NP)??", "Welche Lage war die Lage in die Vizepr�sident von ($x | Person_NP)??", "Welche Lagen sind die Lage in die Vizepr�sident von ($x | Person_NP)??", "Welche Lagen waren die Lage in die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "531",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Lagen in die Lage in ($x | Location_NP)?", "Gib mir das Lage in die Lage in ($x | Location_NP)?", "Gib mir die Lagen in die Lage in ($x | Location_NP)?", "Liste alle Lagen in die Lage in ($x | Location_NP)? auf", "Liste die Lagen in die Lage in ($x | Location_NP)? auf", "was ist die Lage in die Lage in ($x | Location_NP)??", "was sind Lagen in die Lage in ($x | Location_NP)??", "was war die Lage in die Lage in ($x | Location_NP)??", "was waren Lagen in die Lage in ($x | Location_NP)??", "Welche Lage ist die Lage in die Lage in ($x | Location_NP)??", "Welche Lage war die Lage in die Lage in ($x | Location_NP)??", "Welche Lagen sind die Lage in die Lage in ($x | Location_NP)??", "Welche Lagen waren die Lage in die Lage in ($x | Location_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "532",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Place_NP) die Lage in die Hauptstadt von ($x | Country_NP)??", "sind ($x | Place_NP) die Lagen in die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "533",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Place_NP) die Lage in die Hauptquartier von ($x | Organisation_NP)??", "sind ($x | Place_NP) die Lagen in die Hauptquartier von ($x | Organisation_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "534",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Place_NP) die Lage in die Vizepr�sident von ($x | Person_NP)??", "sind ($x | Place_NP) die Lagen in die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "535",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Place_NP) die Lage in die Lage in ($x | Location_NP)??", "sind ($x | Place_NP) die Lagen in die Lage in ($x | Location_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "536",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die Enkel von ($x | Person_NP)?", "Gib mir den Doktorvater von die Enkel von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Enkel von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Enkel von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Enkel von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Enkel von ($x | Person_NP)??", "wer ist die Doktorvater von die Enkel von ($x | Person_NP)??", "wer sind Doktorv�ter von die Enkel von ($x | Person_NP)??", "wer war die Doktorvater von die Enkel von ($x | Person_NP)??", "wer waren Doktorv�ter von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "537",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die Kind von ($x | Person_NP)?", "Gib mir den Doktorvater von die Kind von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Kind von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Kind von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Kind von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Kind von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Kind von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Kind von ($x | Person_NP)??", "wer ist die Doktorvater von die Kind von ($x | Person_NP)??", "wer sind Doktorv�ter von die Kind von ($x | Person_NP)??", "wer war die Doktorvater von die Kind von ($x | Person_NP)??", "wer waren Doktorv�ter von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "538",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir den Doktorvater von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "wer ist die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "wer sind Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)??", "wer war die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "wer waren Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "539",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die Tochter von ($x | Person_NP)?", "Gib mir den Doktorvater von die Tochter von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Tochter von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Tochter von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Tochter von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Tochter von ($x | Person_NP)??", "wer ist die Doktorvater von die Tochter von ($x | Person_NP)??", "wer sind Doktorv�ter von die Tochter von ($x | Person_NP)??", "wer war die Doktorvater von die Tochter von ($x | Person_NP)??", "wer waren Doktorv�ter von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "540",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die Sohn von ($x | Person_NP)?", "Gib mir den Doktorvater von die Sohn von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Sohn von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Sohn von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Sohn von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Sohn von ($x | Person_NP)??", "wer ist die Doktorvater von die Sohn von ($x | Person_NP)??", "wer sind Doktorv�ter von die Sohn von ($x | Person_NP)??", "wer war die Doktorvater von die Sohn von ($x | Person_NP)??", "wer waren Doktorv�ter von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "541",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die Nachfolger von ($x | Person_NP)?", "Gib mir den Doktorvater von die Nachfolger von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Nachfolger von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Nachfolger von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Nachfolger von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Nachfolger von ($x | Person_NP)??", "wer ist die Doktorvater von die Nachfolger von ($x | Person_NP)??", "wer sind Doktorv�ter von die Nachfolger von ($x | Person_NP)??", "wer war die Doktorvater von die Nachfolger von ($x | Person_NP)??", "wer waren Doktorv�ter von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "542",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die Frau von ($x | Person_NP)?", "Gib mir den Doktorvater von die Frau von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Frau von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Frau von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Frau von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Frau von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Frau von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Frau von ($x | Person_NP)??", "wer ist die Doktorvater von die Frau von ($x | Person_NP)??", "wer sind Doktorv�ter von die Frau von ($x | Person_NP)??", "wer war die Doktorvater von die Frau von ($x | Person_NP)??", "wer waren Doktorv�ter von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "543",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir den Doktorvater von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "wer ist die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "wer sind Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)??", "wer war die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "wer waren Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "544",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die B�rgermeister von ($x | City_NP)?", "Gib mir den Doktorvater von die B�rgermeister von ($x | City_NP)?", "Gib mir die Doktorv�ter von die B�rgermeister von ($x | City_NP)?", "Liste alle Doktorv�ter von die B�rgermeister von ($x | City_NP)? auf", "Liste die Doktorv�ter von die B�rgermeister von ($x | City_NP)? auf", "Welche dbo:Person ist die Doktorvater von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Doktorvater von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Doktorvater von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Doktorvater von die B�rgermeister von ($x | City_NP)??", "wer ist die Doktorvater von die B�rgermeister von ($x | City_NP)??", "wer sind Doktorv�ter von die B�rgermeister von ($x | City_NP)??", "wer war die Doktorvater von die B�rgermeister von ($x | City_NP)??", "wer waren Doktorv�ter von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "545",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die Doktorvater von ($x | Person_NP)?", "Gib mir den Doktorvater von die Doktorvater von ($x | Person_NP)?", "Gib mir die Doktorv�ter von die Doktorvater von ($x | Person_NP)?", "Liste alle Doktorv�ter von die Doktorvater von ($x | Person_NP)? auf", "Liste die Doktorv�ter von die Doktorvater von ($x | Person_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Doktorvater von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Doktorvater von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Doktorvater von die Doktorvater von ($x | Person_NP)??", "wer ist die Doktorvater von die Doktorvater von ($x | Person_NP)??", "wer sind Doktorv�ter von die Doktorvater von ($x | Person_NP)??", "wer war die Doktorvater von die Doktorvater von ($x | Person_NP)??", "wer waren Doktorv�ter von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "546",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von die Bandmitglieder von ($x | Band_NP)?", "Gib mir den Doktorvater von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Doktorv�ter von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Doktorv�ter von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Doktorv�ter von die Bandmitglieder von ($x | Band_NP)? auf", "Welche dbo:Person ist die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "wer ist die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "wer sind Doktorv�ter von die Bandmitglieder von ($x | Band_NP)??", "wer war die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "wer waren Doktorv�ter von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "547",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "548",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "549",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "550",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "551",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Enkel von ($x | Person_NP)? die Doktorvater von die Enkel von ($x | Person_NP)??", "sind die Enkel von ($x | Person_NP)? die Doktorv�ter von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "552",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Kind von ($x | Person_NP)? die Doktorvater von die Kind von ($x | Person_NP)??", "sind die Kind von ($x | Person_NP)? die Doktorv�ter von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "553",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Vizepr�sident unter ($x | Person_NP)? die Doktorvater von die Vizepr�sident unter ($x | Person_NP)??", "sind die Vizepr�sident unter ($x | Person_NP)? die Doktorv�ter von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "554",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Tochter von ($x | Person_NP)? die Doktorvater von die Tochter von ($x | Person_NP)??", "sind die Tochter von ($x | Person_NP)? die Doktorv�ter von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "555",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Sohn von ($x | Person_NP)? die Doktorvater von die Sohn von ($x | Person_NP)??", "sind die Sohn von ($x | Person_NP)? die Doktorv�ter von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "556",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Nachfolger von ($x | Person_NP)? die Doktorvater von die Nachfolger von ($x | Person_NP)??", "sind die Nachfolger von ($x | Person_NP)? die Doktorv�ter von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "557",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Frau von ($x | Person_NP)? die Doktorvater von die Frau von ($x | Person_NP)??", "sind die Frau von ($x | Person_NP)? die Doktorv�ter von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "558",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Herausgeber von ($x | WrittenWork_NP)? die Doktorvater von die Herausgeber von ($x | WrittenWork_NP)??", "sind die Herausgeber von ($x | WrittenWork_NP)? die Doktorv�ter von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "559",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die B�rgermeister von ($x | City_NP)? die Doktorvater von die B�rgermeister von ($x | City_NP)??", "sind die B�rgermeister von ($x | City_NP)? die Doktorv�ter von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "560",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Doktorvater von ($x | Person_NP)? die Doktorvater von die Doktorvater von ($x | Person_NP)??", "sind die Doktorvater von ($x | Person_NP)? die Doktorv�ter von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "561",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist die Bandmitglieder von ($x | Band_NP)? die Doktorvater von die Bandmitglieder von ($x | Band_NP)??", "sind die Bandmitglieder von ($x | Band_NP)? die Doktorv�ter von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "562",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "563",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "564",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "565",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "566",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die Enkel von ($x | Person_NP)?", "Gib mir die Musik von die Enkel von ($x | Person_NP)?", "Gib mir die Musiken von die Enkel von ($x | Person_NP)?", "Liste alle Musiken von die Enkel von ($x | Person_NP)? auf", "Liste die Musiken von die Enkel von ($x | Person_NP)? auf", "was ist die Musik von die Enkel von ($x | Person_NP)??", "was sind Musiken von die Enkel von ($x | Person_NP)??", "was war die Musik von die Enkel von ($x | Person_NP)??", "was waren Musiken von die Enkel von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Enkel von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Enkel von ($x | Person_NP)??", "Welche Personen sind die Musik von die Enkel von ($x | Person_NP)??", "Welche Personen waren die Musik von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "567",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die Kind von ($x | Person_NP)?", "Gib mir die Musik von die Kind von ($x | Person_NP)?", "Gib mir die Musiken von die Kind von ($x | Person_NP)?", "Liste alle Musiken von die Kind von ($x | Person_NP)? auf", "Liste die Musiken von die Kind von ($x | Person_NP)? auf", "was ist die Musik von die Kind von ($x | Person_NP)??", "was sind Musiken von die Kind von ($x | Person_NP)??", "was war die Musik von die Kind von ($x | Person_NP)??", "was waren Musiken von die Kind von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Kind von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Kind von ($x | Person_NP)??", "Welche Personen sind die Musik von die Kind von ($x | Person_NP)??", "Welche Personen waren die Musik von die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "568",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Musik von die Vizepr�sident unter ($x | Person_NP)?", "Gib mir die Musiken von die Vizepr�sident unter ($x | Person_NP)?", "Liste alle Musiken von die Vizepr�sident unter ($x | Person_NP)? auf", "Liste die Musiken von die Vizepr�sident unter ($x | Person_NP)? auf", "was ist die Musik von die Vizepr�sident unter ($x | Person_NP)??", "was sind Musiken von die Vizepr�sident unter ($x | Person_NP)??", "was war die Musik von die Vizepr�sident unter ($x | Person_NP)??", "was waren Musiken von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen sind die Musik von die Vizepr�sident unter ($x | Person_NP)??", "Welche Personen waren die Musik von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "569",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die Tochter von ($x | Person_NP)?", "Gib mir die Musik von die Tochter von ($x | Person_NP)?", "Gib mir die Musiken von die Tochter von ($x | Person_NP)?", "Liste alle Musiken von die Tochter von ($x | Person_NP)? auf", "Liste die Musiken von die Tochter von ($x | Person_NP)? auf", "was ist die Musik von die Tochter von ($x | Person_NP)??", "was sind Musiken von die Tochter von ($x | Person_NP)??", "was war die Musik von die Tochter von ($x | Person_NP)??", "was waren Musiken von die Tochter von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Tochter von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Tochter von ($x | Person_NP)??", "Welche Personen sind die Musik von die Tochter von ($x | Person_NP)??", "Welche Personen waren die Musik von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "570",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die Sohn von ($x | Person_NP)?", "Gib mir die Musik von die Sohn von ($x | Person_NP)?", "Gib mir die Musiken von die Sohn von ($x | Person_NP)?", "Liste alle Musiken von die Sohn von ($x | Person_NP)? auf", "Liste die Musiken von die Sohn von ($x | Person_NP)? auf", "was ist die Musik von die Sohn von ($x | Person_NP)??", "was sind Musiken von die Sohn von ($x | Person_NP)??", "was war die Musik von die Sohn von ($x | Person_NP)??", "was waren Musiken von die Sohn von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Sohn von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Sohn von ($x | Person_NP)??", "Welche Personen sind die Musik von die Sohn von ($x | Person_NP)??", "Welche Personen waren die Musik von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "571",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die Nachfolger von ($x | Person_NP)?", "Gib mir die Musik von die Nachfolger von ($x | Person_NP)?", "Gib mir die Musiken von die Nachfolger von ($x | Person_NP)?", "Liste alle Musiken von die Nachfolger von ($x | Person_NP)? auf", "Liste die Musiken von die Nachfolger von ($x | Person_NP)? auf", "was ist die Musik von die Nachfolger von ($x | Person_NP)??", "was sind Musiken von die Nachfolger von ($x | Person_NP)??", "was war die Musik von die Nachfolger von ($x | Person_NP)??", "was waren Musiken von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Nachfolger von ($x | Person_NP)??", "Welche Personen sind die Musik von die Nachfolger von ($x | Person_NP)??", "Welche Personen waren die Musik von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "572",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die Frau von ($x | Person_NP)?", "Gib mir die Musik von die Frau von ($x | Person_NP)?", "Gib mir die Musiken von die Frau von ($x | Person_NP)?", "Liste alle Musiken von die Frau von ($x | Person_NP)? auf", "Liste die Musiken von die Frau von ($x | Person_NP)? auf", "was ist die Musik von die Frau von ($x | Person_NP)??", "was sind Musiken von die Frau von ($x | Person_NP)??", "was war die Musik von die Frau von ($x | Person_NP)??", "was waren Musiken von die Frau von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Frau von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Frau von ($x | Person_NP)??", "Welche Personen sind die Musik von die Frau von ($x | Person_NP)??", "Welche Personen waren die Musik von die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "573",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Musik von die Herausgeber von ($x | WrittenWork_NP)?", "Gib mir die Musiken von die Herausgeber von ($x | WrittenWork_NP)?", "Liste alle Musiken von die Herausgeber von ($x | WrittenWork_NP)? auf", "Liste die Musiken von die Herausgeber von ($x | WrittenWork_NP)? auf", "was ist die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "was sind Musiken von die Herausgeber von ($x | WrittenWork_NP)??", "was war die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "was waren Musiken von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person ist die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person war die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen sind die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "Welche Personen waren die Musik von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "574",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die B�rgermeister von ($x | City_NP)?", "Gib mir die Musik von die B�rgermeister von ($x | City_NP)?", "Gib mir die Musiken von die B�rgermeister von ($x | City_NP)?", "Liste alle Musiken von die B�rgermeister von ($x | City_NP)? auf", "Liste die Musiken von die B�rgermeister von ($x | City_NP)? auf", "was ist die Musik von die B�rgermeister von ($x | City_NP)??", "was sind Musiken von die B�rgermeister von ($x | City_NP)??", "was war die Musik von die B�rgermeister von ($x | City_NP)??", "was waren Musiken von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person ist die Musik von die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person war die Musik von die B�rgermeister von ($x | City_NP)??", "Welche Personen sind die Musik von die B�rgermeister von ($x | City_NP)??", "Welche Personen waren die Musik von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "575",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die Doktorvater von ($x | Person_NP)?", "Gib mir die Musik von die Doktorvater von ($x | Person_NP)?", "Gib mir die Musiken von die Doktorvater von ($x | Person_NP)?", "Liste alle Musiken von die Doktorvater von ($x | Person_NP)? auf", "Liste die Musiken von die Doktorvater von ($x | Person_NP)? auf", "was ist die Musik von die Doktorvater von ($x | Person_NP)??", "was sind Musiken von die Doktorvater von ($x | Person_NP)??", "was war die Musik von die Doktorvater von ($x | Person_NP)??", "was waren Musiken von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person ist die Musik von die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person war die Musik von die Doktorvater von ($x | Person_NP)??", "Welche Personen sind die Musik von die Doktorvater von ($x | Person_NP)??", "Welche Personen waren die Musik von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "576",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Musik von die Bandmitglieder von ($x | Band_NP)?", "Gib mir die Musiken von die Bandmitglieder von ($x | Band_NP)?", "Liste alle Musiken von die Bandmitglieder von ($x | Band_NP)? auf", "Liste die Musiken von die Bandmitglieder von ($x | Band_NP)? auf", "was ist die Musik von die Bandmitglieder von ($x | Band_NP)??", "was sind Musiken von die Bandmitglieder von ($x | Band_NP)??", "was war die Musik von die Bandmitglieder von ($x | Band_NP)??", "was waren Musiken von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person ist die Musik von die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person war die Musik von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen sind die Musik von die Bandmitglieder von ($x | Band_NP)??", "Welche Personen waren die Musik von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "577",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "578",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "579",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "580",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "581",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Enkel von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Enkel von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "582",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Kind von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Kind von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "583",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Vizepr�sident unter ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "584",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Tochter von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Tochter von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "585",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Sohn von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Sohn von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "586",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Nachfolger von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "587",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Frau von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Frau von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "588",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Herausgeber von ($x | WrittenWork_NP)??", "sind ($x | Musical_NP) die Musiken von die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "589",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die B�rgermeister von ($x | City_NP)??", "sind ($x | Musical_NP) die Musiken von die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "590",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Doktorvater von ($x | Person_NP)??", "sind ($x | Musical_NP) die Musiken von die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "591",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von die Bandmitglieder von ($x | Band_NP)??", "sind ($x | Musical_NP) die Musiken von die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "592",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "593",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "594",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "595",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "596",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "597",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/operator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "598",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/product> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "599",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "600",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "601",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "602",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ " - hat die Zutaten von ($x | Food_NP)? genannt?", " - nannte die Zutaten von ($x | Food_NP)??", "Wieviel hat die Zutaten von ($x | Food_NP)? genannt?", "wer hat die Zutaten von ($x | Food_NP)? genannt?", "wer nannte die Zutaten von ($x | Food_NP)??", "wer sich nennen die Zutaten von ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "603",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ " - hat die Spitzname von ($x | City_NP)? genannt?", " - nannte die Spitzname von ($x | City_NP)??", "Wieviel hat die Spitzname von ($x | City_NP)? genannt?", "wer hat die Spitzname von ($x | City_NP)? genannt?", "wer nannte die Spitzname von ($x | City_NP)??", "wer sich nennen die Spitzname von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "604",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ " - hat die Vorwahl von ($x | Place_NP)? genannt?", " - nannte die Vorwahl von ($x | Place_NP)??", "Wieviel hat die Vorwahl von ($x | Place_NP)? genannt?", "wer hat die Vorwahl von ($x | Place_NP)? genannt?", "wer nannte die Vorwahl von ($x | Place_NP)??", "wer sich nennen die Vorwahl von ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "605",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Lighthouse",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ " - hat die H�he von ($x | Lighthouse_NP)? genannt?", " - nannte die H�he von ($x | Lighthouse_NP)??", "Wieviel hat die H�he von ($x | Lighthouse_NP)? genannt?", "wer hat die H�he von ($x | Lighthouse_NP)? genannt?", "wer nannte die H�he von ($x | Lighthouse_NP)??", "wer sich nennen die H�he von ($x | Lighthouse_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/height> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "606",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Enkel von ($x | Person_NP)? genannt?", "was wird von die Enkel von ($x | Person_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "607",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Kind von ($x | Person_NP)? genannt?", "was wird von die Kind von ($x | Person_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "608",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Vizepr�sident unter ($x | Person_NP)? genannt?", "was wird von die Vizepr�sident unter ($x | Person_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "609",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Tochter von ($x | Person_NP)? genannt?", "was wird von die Tochter von ($x | Person_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "610",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Sohn von ($x | Person_NP)? genannt?", "was wird von die Sohn von ($x | Person_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "611",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Nachfolger von ($x | Person_NP)? genannt?", "was wird von die Nachfolger von ($x | Person_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "612",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Frau von ($x | Person_NP)? genannt?", "was wird von die Frau von ($x | Person_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "613",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Herausgeber von ($x | WrittenWork_NP)? genannt?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "614",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die B�rgermeister von ($x | City_NP)? genannt?", "was wird von die B�rgermeister von ($x | City_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "615",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Doktorvater von ($x | Person_NP)? genannt?", "was wird von die Doktorvater von ($x | Person_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "616",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Bandmitglieder von ($x | Band_NP)? genannt?", "was wird von die Bandmitglieder von ($x | Band_NP)? genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "617",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "618",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "619",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "620",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "621",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "622",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die Enkel von ($x | Person_NP)? entdeckt?", "was wird von die Enkel von ($x | Person_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "623",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die Kind von ($x | Person_NP)? entdeckt?", "was wird von die Kind von ($x | Person_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "624",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die Vizepr�sident unter ($x | Person_NP)? entdeckt?", "was wird von die Vizepr�sident unter ($x | Person_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "625",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die Tochter von ($x | Person_NP)? entdeckt?", "was wird von die Tochter von ($x | Person_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "626",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die Sohn von ($x | Person_NP)? entdeckt?", "was wird von die Sohn von ($x | Person_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "627",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die Nachfolger von ($x | Person_NP)? entdeckt?", "was wird von die Nachfolger von ($x | Person_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "628",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die Frau von ($x | Person_NP)? entdeckt?", "was wird von die Frau von ($x | Person_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "629",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die Herausgeber von ($x | WrittenWork_NP)? entdeckt?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "630",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die B�rgermeister von ($x | City_NP)? entdeckt?", "was wird von die B�rgermeister von ($x | City_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "631",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die Doktorvater von ($x | Person_NP)? entdeckt?", "was wird von die Doktorvater von ($x | Person_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "632",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von die Bandmitglieder von ($x | Band_NP)? entdeckt?", "was wird von die Bandmitglieder von ($x | Band_NP)? entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "633",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "634",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "635",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "636",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "637",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Software",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "638",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Software",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "639",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Software",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "640",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die Enkel von ($x | Person_NP)? hat geheiratet?", "Welche dbo:Person heiratete die Enkel von ($x | Person_NP)??", "Wieviel hat die Enkel von ($x | Person_NP)? hat geheiratet?", "wer hat die Enkel von ($x | Person_NP)? hat geheiratet?", "wer heiraten die Enkel von ($x | Person_NP)??", "wer heiratete die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "641",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die Kind von ($x | Person_NP)? hat geheiratet?", "Welche dbo:Person heiratete die Kind von ($x | Person_NP)??", "Wieviel hat die Kind von ($x | Person_NP)? hat geheiratet?", "wer hat die Kind von ($x | Person_NP)? hat geheiratet?", "wer heiraten die Kind von ($x | Person_NP)??", "wer heiratete die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "642",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die Vizepr�sident unter ($x | Person_NP)? hat geheiratet?", "Welche dbo:Person heiratete die Vizepr�sident unter ($x | Person_NP)??", "Wieviel hat die Vizepr�sident unter ($x | Person_NP)? hat geheiratet?", "wer hat die Vizepr�sident unter ($x | Person_NP)? hat geheiratet?", "wer heiraten die Vizepr�sident unter ($x | Person_NP)??", "wer heiratete die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "643",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die Tochter von ($x | Person_NP)? hat geheiratet?", "Welche dbo:Person heiratete die Tochter von ($x | Person_NP)??", "Wieviel hat die Tochter von ($x | Person_NP)? hat geheiratet?", "wer hat die Tochter von ($x | Person_NP)? hat geheiratet?", "wer heiraten die Tochter von ($x | Person_NP)??", "wer heiratete die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "644",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die Sohn von ($x | Person_NP)? hat geheiratet?", "Welche dbo:Person heiratete die Sohn von ($x | Person_NP)??", "Wieviel hat die Sohn von ($x | Person_NP)? hat geheiratet?", "wer hat die Sohn von ($x | Person_NP)? hat geheiratet?", "wer heiraten die Sohn von ($x | Person_NP)??", "wer heiratete die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "645",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die Nachfolger von ($x | Person_NP)? hat geheiratet?", "Welche dbo:Person heiratete die Nachfolger von ($x | Person_NP)??", "Wieviel hat die Nachfolger von ($x | Person_NP)? hat geheiratet?", "wer hat die Nachfolger von ($x | Person_NP)? hat geheiratet?", "wer heiraten die Nachfolger von ($x | Person_NP)??", "wer heiratete die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "646",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die Frau von ($x | Person_NP)? hat geheiratet?", "Welche dbo:Person heiratete die Frau von ($x | Person_NP)??", "Wieviel hat die Frau von ($x | Person_NP)? hat geheiratet?", "wer hat die Frau von ($x | Person_NP)? hat geheiratet?", "wer heiraten die Frau von ($x | Person_NP)??", "wer heiratete die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "647",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die Herausgeber von ($x | WrittenWork_NP)? hat geheiratet?", "Welche dbo:Person heiratete die Herausgeber von ($x | WrittenWork_NP)??", "Wieviel hat die Herausgeber von ($x | WrittenWork_NP)? hat geheiratet?", "wer hat die Herausgeber von ($x | WrittenWork_NP)? hat geheiratet?", "wer heiraten die Herausgeber von ($x | WrittenWork_NP)??", "wer heiratete die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "648",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die B�rgermeister von ($x | City_NP)? hat geheiratet?", "Welche dbo:Person heiratete die B�rgermeister von ($x | City_NP)??", "Wieviel hat die B�rgermeister von ($x | City_NP)? hat geheiratet?", "wer hat die B�rgermeister von ($x | City_NP)? hat geheiratet?", "wer heiraten die B�rgermeister von ($x | City_NP)??", "wer heiratete die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "649",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die Doktorvater von ($x | Person_NP)? hat geheiratet?", "Welche dbo:Person heiratete die Doktorvater von ($x | Person_NP)??", "Wieviel hat die Doktorvater von ($x | Person_NP)? hat geheiratet?", "wer hat die Doktorvater von ($x | Person_NP)? hat geheiratet?", "wer heiraten die Doktorvater von ($x | Person_NP)??", "wer heiratete die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "650",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat die Bandmitglieder von ($x | Band_NP)? hat geheiratet?", "Welche dbo:Person heiratete die Bandmitglieder von ($x | Band_NP)??", "Wieviel hat die Bandmitglieder von ($x | Band_NP)? hat geheiratet?", "wer hat die Bandmitglieder von ($x | Band_NP)? hat geheiratet?", "wer heiraten die Bandmitglieder von ($x | Band_NP)??", "wer heiratete die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "651",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "652",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "653",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "654",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "655",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die Enkel von ($x | Person_NP)? hat geheiratet?", "wer wird mit die Enkel von ($x | Person_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "656",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die Kind von ($x | Person_NP)? hat geheiratet?", "wer wird mit die Kind von ($x | Person_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "657",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die Vizepr�sident unter ($x | Person_NP)? hat geheiratet?", "wer wird mit die Vizepr�sident unter ($x | Person_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "658",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die Tochter von ($x | Person_NP)? hat geheiratet?", "wer wird mit die Tochter von ($x | Person_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "659",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die Sohn von ($x | Person_NP)? hat geheiratet?", "wer wird mit die Sohn von ($x | Person_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "660",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die Nachfolger von ($x | Person_NP)? hat geheiratet?", "wer wird mit die Nachfolger von ($x | Person_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "661",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die Frau von ($x | Person_NP)? hat geheiratet?", "wer wird mit die Frau von ($x | Person_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "662",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die Herausgeber von ($x | WrittenWork_NP)? hat geheiratet?", "wer wird mit die Herausgeber von ($x | WrittenWork_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "663",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die B�rgermeister von ($x | City_NP)? hat geheiratet?", "wer wird mit die B�rgermeister von ($x | City_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "664",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die Doktorvater von ($x | Person_NP)? hat geheiratet?", "wer wird mit die Doktorvater von ($x | Person_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "665",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit die Bandmitglieder von ($x | Band_NP)? hat geheiratet?", "wer wird mit die Bandmitglieder von ($x | Band_NP)? hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "666",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "667",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "668",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "669",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "670",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "671",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "672",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "673",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "674",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "675",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "676",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "677",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "678",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "679",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die Enkel von ($x | Person_NP)? geschrieben?", "was wird von die Enkel von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "680",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die Kind von ($x | Person_NP)? geschrieben?", "was wird von die Kind von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "681",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die Vizepr�sident unter ($x | Person_NP)? geschrieben?", "was wird von die Vizepr�sident unter ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "682",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die Tochter von ($x | Person_NP)? geschrieben?", "was wird von die Tochter von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "683",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die Sohn von ($x | Person_NP)? geschrieben?", "was wird von die Sohn von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "684",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die Nachfolger von ($x | Person_NP)? geschrieben?", "was wird von die Nachfolger von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "685",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die Frau von ($x | Person_NP)? geschrieben?", "was wird von die Frau von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "686",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die Herausgeber von ($x | WrittenWork_NP)? geschrieben?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "687",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die B�rgermeister von ($x | City_NP)? geschrieben?", "was wird von die B�rgermeister von ($x | City_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "688",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die Doktorvater von ($x | Person_NP)? geschrieben?", "was wird von die Doktorvater von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "689",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von die Bandmitglieder von ($x | Band_NP)? geschrieben?", "was wird von die Bandmitglieder von ($x | Band_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "690",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "691",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "692",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "693",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "694",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "695",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "696",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "697",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "698",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Enkel von ($x | Person_NP)? komponiert?", "was wird von die Enkel von ($x | Person_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "699",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Kind von ($x | Person_NP)? komponiert?", "was wird von die Kind von ($x | Person_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "700",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Vizepr�sident unter ($x | Person_NP)? komponiert?", "was wird von die Vizepr�sident unter ($x | Person_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "701",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Tochter von ($x | Person_NP)? komponiert?", "was wird von die Tochter von ($x | Person_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "702",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Sohn von ($x | Person_NP)? komponiert?", "was wird von die Sohn von ($x | Person_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "703",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Nachfolger von ($x | Person_NP)? komponiert?", "was wird von die Nachfolger von ($x | Person_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "704",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Frau von ($x | Person_NP)? komponiert?", "was wird von die Frau von ($x | Person_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "705",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Herausgeber von ($x | WrittenWork_NP)? komponiert?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "706",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die B�rgermeister von ($x | City_NP)? komponiert?", "was wird von die B�rgermeister von ($x | City_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "707",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Doktorvater von ($x | Person_NP)? komponiert?", "was wird von die Doktorvater von ($x | Person_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "708",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Bandmitglieder von ($x | Band_NP)? komponiert?", "was wird von die Bandmitglieder von ($x | Band_NP)? komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "709",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "710",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "711",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "712",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "713",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "714",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "715",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "716",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "717",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Enkel von ($x | Person_NP)? geschrieben?", "was wird von die Enkel von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "718",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Kind von ($x | Person_NP)? geschrieben?", "was wird von die Kind von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "719",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Vizepr�sident unter ($x | Person_NP)? geschrieben?", "was wird von die Vizepr�sident unter ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "720",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Tochter von ($x | Person_NP)? geschrieben?", "was wird von die Tochter von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "721",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Sohn von ($x | Person_NP)? geschrieben?", "was wird von die Sohn von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "722",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Nachfolger von ($x | Person_NP)? geschrieben?", "was wird von die Nachfolger von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "723",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Frau von ($x | Person_NP)? geschrieben?", "was wird von die Frau von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "724",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Herausgeber von ($x | WrittenWork_NP)? geschrieben?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "725",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die B�rgermeister von ($x | City_NP)? geschrieben?", "was wird von die B�rgermeister von ($x | City_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "726",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Doktorvater von ($x | Person_NP)? geschrieben?", "was wird von die Doktorvater von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "727",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Bandmitglieder von ($x | Band_NP)? geschrieben?", "was wird von die Bandmitglieder von ($x | Band_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "728",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "729",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "730",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "731",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "732",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "733",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "734",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "735",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "736",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Enkel von ($x | Person_NP)? gedreht?", "was wird von die Enkel von ($x | Person_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "737",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Kind von ($x | Person_NP)? gedreht?", "was wird von die Kind von ($x | Person_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "738",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Vizepr�sident unter ($x | Person_NP)? gedreht?", "was wird von die Vizepr�sident unter ($x | Person_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "739",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Tochter von ($x | Person_NP)? gedreht?", "was wird von die Tochter von ($x | Person_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "740",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Sohn von ($x | Person_NP)? gedreht?", "was wird von die Sohn von ($x | Person_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "741",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Nachfolger von ($x | Person_NP)? gedreht?", "was wird von die Nachfolger von ($x | Person_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "742",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Frau von ($x | Person_NP)? gedreht?", "was wird von die Frau von ($x | Person_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "743",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Herausgeber von ($x | WrittenWork_NP)? gedreht?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "744",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die B�rgermeister von ($x | City_NP)? gedreht?", "was wird von die B�rgermeister von ($x | City_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "745",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Doktorvater von ($x | Person_NP)? gedreht?", "was wird von die Doktorvater von ($x | Person_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "746",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Bandmitglieder von ($x | Band_NP)? gedreht?", "was wird von die Bandmitglieder von ($x | Band_NP)? gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "747",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "748",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "749",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "750",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "751",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "752",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "753",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "754",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "755",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Enkel von ($x | Person_NP)? hat moderiert?", "was wird von die Enkel von ($x | Person_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "756",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Kind von ($x | Person_NP)? hat moderiert?", "was wird von die Kind von ($x | Person_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "757",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Vizepr�sident unter ($x | Person_NP)? hat moderiert?", "was wird von die Vizepr�sident unter ($x | Person_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "758",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Tochter von ($x | Person_NP)? hat moderiert?", "was wird von die Tochter von ($x | Person_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "759",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Sohn von ($x | Person_NP)? hat moderiert?", "was wird von die Sohn von ($x | Person_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "760",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Nachfolger von ($x | Person_NP)? hat moderiert?", "was wird von die Nachfolger von ($x | Person_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "761",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Frau von ($x | Person_NP)? hat moderiert?", "was wird von die Frau von ($x | Person_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "762",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Herausgeber von ($x | WrittenWork_NP)? hat moderiert?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "763",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die B�rgermeister von ($x | City_NP)? hat moderiert?", "was wird von die B�rgermeister von ($x | City_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "764",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Doktorvater von ($x | Person_NP)? hat moderiert?", "was wird von die Doktorvater von ($x | Person_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "765",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Bandmitglieder von ($x | Band_NP)? hat moderiert?", "was wird von die Bandmitglieder von ($x | Band_NP)? hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "766",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "767",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "768",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "769",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "770",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "771",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "772",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Number",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "773",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Number",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "774",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Gesamteinwohnerzahl von ($x | Location_NP)? gekostet?", "was wird von die Gesamteinwohnerzahl von ($x | Location_NP)? gekostet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/populationTotal> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "775",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Seitenzahl von ($x | WrittenWork_NP)? gekostet?", "was wird von die Seitenzahl von ($x | WrittenWork_NP)? gekostet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/numberOfPages> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "776",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "777",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "778",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die Enkel von ($x | Person_NP)? entworfen?", "was wird von die Enkel von ($x | Person_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "779",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die Kind von ($x | Person_NP)? entworfen?", "was wird von die Kind von ($x | Person_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "780",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die Vizepr�sident unter ($x | Person_NP)? entworfen?", "was wird von die Vizepr�sident unter ($x | Person_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "781",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die Tochter von ($x | Person_NP)? entworfen?", "was wird von die Tochter von ($x | Person_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "782",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die Sohn von ($x | Person_NP)? entworfen?", "was wird von die Sohn von ($x | Person_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "783",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die Nachfolger von ($x | Person_NP)? entworfen?", "was wird von die Nachfolger von ($x | Person_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "784",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die Frau von ($x | Person_NP)? entworfen?", "was wird von die Frau von ($x | Person_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "785",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die Herausgeber von ($x | WrittenWork_NP)? entworfen?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "786",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die B�rgermeister von ($x | City_NP)? entworfen?", "was wird von die B�rgermeister von ($x | City_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "787",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die Doktorvater von ($x | Person_NP)? entworfen?", "was wird von die Doktorvater von ($x | Person_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "788",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von die Bandmitglieder von ($x | Band_NP)? entworfen?", "was wird von die Bandmitglieder von ($x | Band_NP)? entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "789",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "790",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "791",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "792",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "793",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "794",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die Enkel von ($x | Person_NP)? geschrieben?", "was wird von die Enkel von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "795",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die Kind von ($x | Person_NP)? geschrieben?", "was wird von die Kind von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "796",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die Vizepr�sident unter ($x | Person_NP)? geschrieben?", "was wird von die Vizepr�sident unter ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "797",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die Tochter von ($x | Person_NP)? geschrieben?", "was wird von die Tochter von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "798",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die Sohn von ($x | Person_NP)? geschrieben?", "was wird von die Sohn von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "799",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die Nachfolger von ($x | Person_NP)? geschrieben?", "was wird von die Nachfolger von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "800",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die Frau von ($x | Person_NP)? geschrieben?", "was wird von die Frau von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "801",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die Herausgeber von ($x | WrittenWork_NP)? geschrieben?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "802",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die B�rgermeister von ($x | City_NP)? geschrieben?", "was wird von die B�rgermeister von ($x | City_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "803",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die Doktorvater von ($x | Person_NP)? geschrieben?", "was wird von die Doktorvater von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "804",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von die Bandmitglieder von ($x | Band_NP)? geschrieben?", "was wird von die Bandmitglieder von ($x | Band_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "805",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "806",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "807",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "808",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "809",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "810",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "811",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "812",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "813",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "814",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Enkel von ($x | Person_NP)? gemalt?", "was wird von die Enkel von ($x | Person_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "815",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Kind von ($x | Person_NP)? gemalt?", "was wird von die Kind von ($x | Person_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "816",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Vizepr�sident unter ($x | Person_NP)? gemalt?", "was wird von die Vizepr�sident unter ($x | Person_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "817",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Tochter von ($x | Person_NP)? gemalt?", "was wird von die Tochter von ($x | Person_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "818",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Sohn von ($x | Person_NP)? gemalt?", "was wird von die Sohn von ($x | Person_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "819",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Nachfolger von ($x | Person_NP)? gemalt?", "was wird von die Nachfolger von ($x | Person_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "820",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Frau von ($x | Person_NP)? gemalt?", "was wird von die Frau von ($x | Person_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "821",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Herausgeber von ($x | WrittenWork_NP)? gemalt?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "822",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die B�rgermeister von ($x | City_NP)? gemalt?", "was wird von die B�rgermeister von ($x | City_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "823",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Doktorvater von ($x | Person_NP)? gemalt?", "was wird von die Doktorvater von ($x | Person_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "824",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Bandmitglieder von ($x | Band_NP)? gemalt?", "was wird von die Bandmitglieder von ($x | Band_NP)? gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "825",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "826",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "827",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "828",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "829",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "830",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die Enkel von ($x | Person_NP)? gespielt?", "wer wird von die Enkel von ($x | Person_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "831",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die Kind von ($x | Person_NP)? gespielt?", "wer wird von die Kind von ($x | Person_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "832",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die Vizepr�sident unter ($x | Person_NP)? gespielt?", "wer wird von die Vizepr�sident unter ($x | Person_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "833",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die Tochter von ($x | Person_NP)? gespielt?", "wer wird von die Tochter von ($x | Person_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "834",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die Sohn von ($x | Person_NP)? gespielt?", "wer wird von die Sohn von ($x | Person_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "835",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die Nachfolger von ($x | Person_NP)? gespielt?", "wer wird von die Nachfolger von ($x | Person_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "836",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die Frau von ($x | Person_NP)? gespielt?", "wer wird von die Frau von ($x | Person_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "837",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die Herausgeber von ($x | WrittenWork_NP)? gespielt?", "wer wird von die Herausgeber von ($x | WrittenWork_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "838",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die B�rgermeister von ($x | City_NP)? gespielt?", "wer wird von die B�rgermeister von ($x | City_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "839",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die Doktorvater von ($x | Person_NP)? gespielt?", "wer wird von die Doktorvater von ($x | Person_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "840",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von die Bandmitglieder von ($x | Band_NP)? gespielt?", "wer wird von die Bandmitglieder von ($x | Band_NP)? gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "841",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "842",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "843",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "844",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "845",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "846",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "847",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "848",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "849",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Enkel von ($x | Person_NP)? geschrieben?", "was wird von die Enkel von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "850",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Kind von ($x | Person_NP)? geschrieben?", "was wird von die Kind von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "851",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Vizepr�sident unter ($x | Person_NP)? geschrieben?", "was wird von die Vizepr�sident unter ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "852",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Tochter von ($x | Person_NP)? geschrieben?", "was wird von die Tochter von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "853",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Sohn von ($x | Person_NP)? geschrieben?", "was wird von die Sohn von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "854",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Nachfolger von ($x | Person_NP)? geschrieben?", "was wird von die Nachfolger von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "855",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Frau von ($x | Person_NP)? geschrieben?", "was wird von die Frau von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "856",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Herausgeber von ($x | WrittenWork_NP)? geschrieben?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "857",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die B�rgermeister von ($x | City_NP)? geschrieben?", "was wird von die B�rgermeister von ($x | City_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "858",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Doktorvater von ($x | Person_NP)? geschrieben?", "was wird von die Doktorvater von ($x | Person_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "859",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von die Bandmitglieder von ($x | Band_NP)? geschrieben?", "was wird von die Bandmitglieder von ($x | Band_NP)? geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "860",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "861",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "862",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "863",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "864",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "865",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die Enkel von ($x | Person_NP)? bestiegen?", "was wird von die Enkel von ($x | Person_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "866",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die Kind von ($x | Person_NP)? bestiegen?", "was wird von die Kind von ($x | Person_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "867",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die Vizepr�sident unter ($x | Person_NP)? bestiegen?", "was wird von die Vizepr�sident unter ($x | Person_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "868",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die Tochter von ($x | Person_NP)? bestiegen?", "was wird von die Tochter von ($x | Person_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "869",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die Sohn von ($x | Person_NP)? bestiegen?", "was wird von die Sohn von ($x | Person_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "870",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die Nachfolger von ($x | Person_NP)? bestiegen?", "was wird von die Nachfolger von ($x | Person_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "871",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die Frau von ($x | Person_NP)? bestiegen?", "was wird von die Frau von ($x | Person_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "872",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die Herausgeber von ($x | WrittenWork_NP)? bestiegen?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "873",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die B�rgermeister von ($x | City_NP)? bestiegen?", "was wird von die B�rgermeister von ($x | City_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "874",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die Doktorvater von ($x | Person_NP)? bestiegen?", "was wird von die Doktorvater von ($x | Person_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "875",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von die Bandmitglieder von ($x | Band_NP)? bestiegen?", "was wird von die Bandmitglieder von ($x | Band_NP)? bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "876",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "877",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "878",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "879",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "880",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "River",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "881",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "River",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "882",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "883",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "884",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "885",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "886",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Enkel von ($x | Person_NP)? erfunden?", "was wird von die Enkel von ($x | Person_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "887",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Kind von ($x | Person_NP)? erfunden?", "was wird von die Kind von ($x | Person_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "888",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Vizepr�sident unter ($x | Person_NP)? erfunden?", "was wird von die Vizepr�sident unter ($x | Person_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "889",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Tochter von ($x | Person_NP)? erfunden?", "was wird von die Tochter von ($x | Person_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "890",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Sohn von ($x | Person_NP)? erfunden?", "was wird von die Sohn von ($x | Person_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "891",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Nachfolger von ($x | Person_NP)? erfunden?", "was wird von die Nachfolger von ($x | Person_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "892",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Frau von ($x | Person_NP)? erfunden?", "was wird von die Frau von ($x | Person_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "893",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Herausgeber von ($x | WrittenWork_NP)? erfunden?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "894",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die B�rgermeister von ($x | City_NP)? erfunden?", "was wird von die B�rgermeister von ($x | City_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "895",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Doktorvater von ($x | Person_NP)? erfunden?", "was wird von die Doktorvater von ($x | Person_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "896",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von die Bandmitglieder von ($x | Band_NP)? erfunden?", "was wird von die Bandmitglieder von ($x | Band_NP)? erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "897",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "898",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "899",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "900",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "901",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die Enkel von ($x | Person_NP)??", "Welche dbo:Person hat die Enkel von ($x | Person_NP)? beeinflusst?", "Wieviel hat die Enkel von ($x | Person_NP)? beeinflusst?", "wer beeinflussen die Enkel von ($x | Person_NP)??", "wer beeinflusste die Enkel von ($x | Person_NP)??", "wer hat die Enkel von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "902",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die Kind von ($x | Person_NP)??", "Welche dbo:Person hat die Kind von ($x | Person_NP)? beeinflusst?", "Wieviel hat die Kind von ($x | Person_NP)? beeinflusst?", "wer beeinflussen die Kind von ($x | Person_NP)??", "wer beeinflusste die Kind von ($x | Person_NP)??", "wer hat die Kind von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "903",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die Vizepr�sident unter ($x | Person_NP)??", "Welche dbo:Person hat die Vizepr�sident unter ($x | Person_NP)? beeinflusst?", "Wieviel hat die Vizepr�sident unter ($x | Person_NP)? beeinflusst?", "wer beeinflussen die Vizepr�sident unter ($x | Person_NP)??", "wer beeinflusste die Vizepr�sident unter ($x | Person_NP)??", "wer hat die Vizepr�sident unter ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "904",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die Tochter von ($x | Person_NP)??", "Welche dbo:Person hat die Tochter von ($x | Person_NP)? beeinflusst?", "Wieviel hat die Tochter von ($x | Person_NP)? beeinflusst?", "wer beeinflussen die Tochter von ($x | Person_NP)??", "wer beeinflusste die Tochter von ($x | Person_NP)??", "wer hat die Tochter von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "905",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die Sohn von ($x | Person_NP)??", "Welche dbo:Person hat die Sohn von ($x | Person_NP)? beeinflusst?", "Wieviel hat die Sohn von ($x | Person_NP)? beeinflusst?", "wer beeinflussen die Sohn von ($x | Person_NP)??", "wer beeinflusste die Sohn von ($x | Person_NP)??", "wer hat die Sohn von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "906",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die Nachfolger von ($x | Person_NP)??", "Welche dbo:Person hat die Nachfolger von ($x | Person_NP)? beeinflusst?", "Wieviel hat die Nachfolger von ($x | Person_NP)? beeinflusst?", "wer beeinflussen die Nachfolger von ($x | Person_NP)??", "wer beeinflusste die Nachfolger von ($x | Person_NP)??", "wer hat die Nachfolger von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "907",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die Frau von ($x | Person_NP)??", "Welche dbo:Person hat die Frau von ($x | Person_NP)? beeinflusst?", "Wieviel hat die Frau von ($x | Person_NP)? beeinflusst?", "wer beeinflussen die Frau von ($x | Person_NP)??", "wer beeinflusste die Frau von ($x | Person_NP)??", "wer hat die Frau von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "908",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die Herausgeber von ($x | WrittenWork_NP)??", "Welche dbo:Person hat die Herausgeber von ($x | WrittenWork_NP)? beeinflusst?", "Wieviel hat die Herausgeber von ($x | WrittenWork_NP)? beeinflusst?", "wer beeinflussen die Herausgeber von ($x | WrittenWork_NP)??", "wer beeinflusste die Herausgeber von ($x | WrittenWork_NP)??", "wer hat die Herausgeber von ($x | WrittenWork_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "909",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die B�rgermeister von ($x | City_NP)??", "Welche dbo:Person hat die B�rgermeister von ($x | City_NP)? beeinflusst?", "Wieviel hat die B�rgermeister von ($x | City_NP)? beeinflusst?", "wer beeinflussen die B�rgermeister von ($x | City_NP)??", "wer beeinflusste die B�rgermeister von ($x | City_NP)??", "wer hat die B�rgermeister von ($x | City_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "910",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die Doktorvater von ($x | Person_NP)??", "Welche dbo:Person hat die Doktorvater von ($x | Person_NP)? beeinflusst?", "Wieviel hat die Doktorvater von ($x | Person_NP)? beeinflusst?", "wer beeinflussen die Doktorvater von ($x | Person_NP)??", "wer beeinflusste die Doktorvater von ($x | Person_NP)??", "wer hat die Doktorvater von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "911",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste die Bandmitglieder von ($x | Band_NP)??", "Welche dbo:Person hat die Bandmitglieder von ($x | Band_NP)? beeinflusst?", "Wieviel hat die Bandmitglieder von ($x | Band_NP)? beeinflusst?", "wer beeinflussen die Bandmitglieder von ($x | Band_NP)??", "wer beeinflusste die Bandmitglieder von ($x | Band_NP)??", "wer hat die Bandmitglieder von ($x | Band_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "912",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "913",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "914",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "915",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "916",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Enkel von ($x | Person_NP)? beeinflusst?", "wer wird von die Enkel von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "917",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Kind von ($x | Person_NP)? beeinflusst?", "wer wird von die Kind von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "918",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Vizepr�sident unter ($x | Person_NP)? beeinflusst?", "wer wird von die Vizepr�sident unter ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "919",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Tochter von ($x | Person_NP)? beeinflusst?", "wer wird von die Tochter von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "920",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Sohn von ($x | Person_NP)? beeinflusst?", "wer wird von die Sohn von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "921",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Nachfolger von ($x | Person_NP)? beeinflusst?", "wer wird von die Nachfolger von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "922",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Frau von ($x | Person_NP)? beeinflusst?", "wer wird von die Frau von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "923",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Herausgeber von ($x | WrittenWork_NP)? beeinflusst?", "wer wird von die Herausgeber von ($x | WrittenWork_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "924",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die B�rgermeister von ($x | City_NP)? beeinflusst?", "wer wird von die B�rgermeister von ($x | City_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "925",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Doktorvater von ($x | Person_NP)? beeinflusst?", "wer wird von die Doktorvater von ($x | Person_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "926",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Bandmitglieder von ($x | Band_NP)? beeinflusst?", "wer wird von die Bandmitglieder von ($x | Band_NP)? beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "927",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "928",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "929",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "930",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "931",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influenced> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "932",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "933",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "LaunchPad",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "934",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "LaunchPad",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "935",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "LaunchPad",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "936",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die Enkel von ($x | Person_NP)??", "Welche Universit�t hat die Enkel von ($x | Person_NP)? besucht?", "Wieviel hat die Enkel von ($x | Person_NP)? besucht?", "wer besuchen die Enkel von ($x | Person_NP)??", "wer besuchte die Enkel von ($x | Person_NP)??", "wer hat die Enkel von ($x | Person_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "937",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die Kind von ($x | Person_NP)??", "Welche Universit�t hat die Kind von ($x | Person_NP)? besucht?", "Wieviel hat die Kind von ($x | Person_NP)? besucht?", "wer besuchen die Kind von ($x | Person_NP)??", "wer besuchte die Kind von ($x | Person_NP)??", "wer hat die Kind von ($x | Person_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "938",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die Vizepr�sident unter ($x | Person_NP)??", "Welche Universit�t hat die Vizepr�sident unter ($x | Person_NP)? besucht?", "Wieviel hat die Vizepr�sident unter ($x | Person_NP)? besucht?", "wer besuchen die Vizepr�sident unter ($x | Person_NP)??", "wer besuchte die Vizepr�sident unter ($x | Person_NP)??", "wer hat die Vizepr�sident unter ($x | Person_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "939",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die Tochter von ($x | Person_NP)??", "Welche Universit�t hat die Tochter von ($x | Person_NP)? besucht?", "Wieviel hat die Tochter von ($x | Person_NP)? besucht?", "wer besuchen die Tochter von ($x | Person_NP)??", "wer besuchte die Tochter von ($x | Person_NP)??", "wer hat die Tochter von ($x | Person_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "940",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die Sohn von ($x | Person_NP)??", "Welche Universit�t hat die Sohn von ($x | Person_NP)? besucht?", "Wieviel hat die Sohn von ($x | Person_NP)? besucht?", "wer besuchen die Sohn von ($x | Person_NP)??", "wer besuchte die Sohn von ($x | Person_NP)??", "wer hat die Sohn von ($x | Person_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "941",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die Nachfolger von ($x | Person_NP)??", "Welche Universit�t hat die Nachfolger von ($x | Person_NP)? besucht?", "Wieviel hat die Nachfolger von ($x | Person_NP)? besucht?", "wer besuchen die Nachfolger von ($x | Person_NP)??", "wer besuchte die Nachfolger von ($x | Person_NP)??", "wer hat die Nachfolger von ($x | Person_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "942",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die Frau von ($x | Person_NP)??", "Welche Universit�t hat die Frau von ($x | Person_NP)? besucht?", "Wieviel hat die Frau von ($x | Person_NP)? besucht?", "wer besuchen die Frau von ($x | Person_NP)??", "wer besuchte die Frau von ($x | Person_NP)??", "wer hat die Frau von ($x | Person_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "943",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die Herausgeber von ($x | WrittenWork_NP)??", "Welche Universit�t hat die Herausgeber von ($x | WrittenWork_NP)? besucht?", "Wieviel hat die Herausgeber von ($x | WrittenWork_NP)? besucht?", "wer besuchen die Herausgeber von ($x | WrittenWork_NP)??", "wer besuchte die Herausgeber von ($x | WrittenWork_NP)??", "wer hat die Herausgeber von ($x | WrittenWork_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "944",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die B�rgermeister von ($x | City_NP)??", "Welche Universit�t hat die B�rgermeister von ($x | City_NP)? besucht?", "Wieviel hat die B�rgermeister von ($x | City_NP)? besucht?", "wer besuchen die B�rgermeister von ($x | City_NP)??", "wer besuchte die B�rgermeister von ($x | City_NP)??", "wer hat die B�rgermeister von ($x | City_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "945",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die Doktorvater von ($x | Person_NP)??", "Welche Universit�t hat die Doktorvater von ($x | Person_NP)? besucht?", "Wieviel hat die Doktorvater von ($x | Person_NP)? besucht?", "wer besuchen die Doktorvater von ($x | Person_NP)??", "wer besuchte die Doktorvater von ($x | Person_NP)??", "wer hat die Doktorvater von ($x | Person_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "946",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte die Bandmitglieder von ($x | Band_NP)??", "Welche Universit�t hat die Bandmitglieder von ($x | Band_NP)? besucht?", "Wieviel hat die Bandmitglieder von ($x | Band_NP)? besucht?", "wer besuchen die Bandmitglieder von ($x | Band_NP)??", "wer besuchte die Bandmitglieder von ($x | Band_NP)??", "wer hat die Bandmitglieder von ($x | Band_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "947",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "948",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "949",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "950",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "951",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von die Entwickler von ($x | Software_NP)? besucht?", "wer wird von die Entwickler von ($x | Software_NP)? besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/developer> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "952",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Award",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "953",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "954",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "955",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Enkel von ($x | Person_NP)? verlegt?", "was wird von die Enkel von ($x | Person_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "956",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Kind von ($x | Person_NP)? verlegt?", "was wird von die Kind von ($x | Person_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "957",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Vizepr�sident unter ($x | Person_NP)? verlegt?", "was wird von die Vizepr�sident unter ($x | Person_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "958",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Tochter von ($x | Person_NP)? verlegt?", "was wird von die Tochter von ($x | Person_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "959",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Sohn von ($x | Person_NP)? verlegt?", "was wird von die Sohn von ($x | Person_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "960",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Nachfolger von ($x | Person_NP)? verlegt?", "was wird von die Nachfolger von ($x | Person_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "961",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Frau von ($x | Person_NP)? verlegt?", "was wird von die Frau von ($x | Person_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "962",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Herausgeber von ($x | WrittenWork_NP)? verlegt?", "was wird von die Herausgeber von ($x | WrittenWork_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "963",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die B�rgermeister von ($x | City_NP)? verlegt?", "was wird von die B�rgermeister von ($x | City_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "964",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Doktorvater von ($x | Person_NP)? verlegt?", "was wird von die Doktorvater von ($x | Person_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "965",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von die Bandmitglieder von ($x | Band_NP)? verlegt?", "was wird von die Bandmitglieder von ($x | Band_NP)? verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "966",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "967",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "968",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "969",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "970",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "971",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Food",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Essen befinden in die Hauptstadt von ($x | Country_NP)??", "Welches Essen befinden in die Hauptstadt von ($x | Country_NP)??", "was befinden in die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/locationCity> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "972",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Enkel von ($x | Person_NP)? gestorben?", "in Welche Stadt ist die Enkel von ($x | Person_NP)? gestorben?", "in Welche Stadt stirbt die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "973",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Kind von ($x | Person_NP)? gestorben?", "in Welche Stadt ist die Kind von ($x | Person_NP)? gestorben?", "in Welche Stadt stirbt die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "974",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Vizepr�sident unter ($x | Person_NP)? gestorben?", "in Welche Stadt ist die Vizepr�sident unter ($x | Person_NP)? gestorben?", "in Welche Stadt stirbt die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "975",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Tochter von ($x | Person_NP)? gestorben?", "in Welche Stadt ist die Tochter von ($x | Person_NP)? gestorben?", "in Welche Stadt stirbt die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "976",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Sohn von ($x | Person_NP)? gestorben?", "in Welche Stadt ist die Sohn von ($x | Person_NP)? gestorben?", "in Welche Stadt stirbt die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "977",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Nachfolger von ($x | Person_NP)? gestorben?", "in Welche Stadt ist die Nachfolger von ($x | Person_NP)? gestorben?", "in Welche Stadt stirbt die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "978",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Frau von ($x | Person_NP)? gestorben?", "in Welche Stadt ist die Frau von ($x | Person_NP)? gestorben?", "in Welche Stadt stirbt die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "979",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Herausgeber von ($x | WrittenWork_NP)? gestorben?", "in Welche Stadt ist die Herausgeber von ($x | WrittenWork_NP)? gestorben?", "in Welche Stadt stirbt die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "980",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die B�rgermeister von ($x | City_NP)? gestorben?", "in Welche Stadt ist die B�rgermeister von ($x | City_NP)? gestorben?", "in Welche Stadt stirbt die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "981",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Doktorvater von ($x | Person_NP)? gestorben?", "in Welche Stadt ist die Doktorvater von ($x | Person_NP)? gestorben?", "in Welche Stadt stirbt die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "982",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Bandmitglieder von ($x | Band_NP)? gestorben?", "in Welche Stadt ist die Bandmitglieder von ($x | Band_NP)? gestorben?", "in Welche Stadt stirbt die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "983",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "984",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "985",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "986",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "987",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wurde in die Hauptstadt von ($x | Country_NP)? gestorben?", "wer ist in die Hauptstadt von ($x | Country_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "988",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die Enkel von ($x | Person_NP)? gestorben?", "an  - stirbt die Enkel von ($x | Person_NP)??", "an was ist die Enkel von ($x | Person_NP)? gestorben?", "an was stirbt die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "989",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die Kind von ($x | Person_NP)? gestorben?", "an  - stirbt die Kind von ($x | Person_NP)??", "an was ist die Kind von ($x | Person_NP)? gestorben?", "an was stirbt die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "990",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die Vizepr�sident unter ($x | Person_NP)? gestorben?", "an  - stirbt die Vizepr�sident unter ($x | Person_NP)??", "an was ist die Vizepr�sident unter ($x | Person_NP)? gestorben?", "an was stirbt die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "991",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die Tochter von ($x | Person_NP)? gestorben?", "an  - stirbt die Tochter von ($x | Person_NP)??", "an was ist die Tochter von ($x | Person_NP)? gestorben?", "an was stirbt die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "992",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die Sohn von ($x | Person_NP)? gestorben?", "an  - stirbt die Sohn von ($x | Person_NP)??", "an was ist die Sohn von ($x | Person_NP)? gestorben?", "an was stirbt die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "993",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die Nachfolger von ($x | Person_NP)? gestorben?", "an  - stirbt die Nachfolger von ($x | Person_NP)??", "an was ist die Nachfolger von ($x | Person_NP)? gestorben?", "an was stirbt die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "994",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die Frau von ($x | Person_NP)? gestorben?", "an  - stirbt die Frau von ($x | Person_NP)??", "an was ist die Frau von ($x | Person_NP)? gestorben?", "an was stirbt die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "995",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die Herausgeber von ($x | WrittenWork_NP)? gestorben?", "an  - stirbt die Herausgeber von ($x | WrittenWork_NP)??", "an was ist die Herausgeber von ($x | WrittenWork_NP)? gestorben?", "an was stirbt die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "996",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die B�rgermeister von ($x | City_NP)? gestorben?", "an  - stirbt die B�rgermeister von ($x | City_NP)??", "an was ist die B�rgermeister von ($x | City_NP)? gestorben?", "an was stirbt die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "997",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die Doktorvater von ($x | Person_NP)? gestorben?", "an  - stirbt die Doktorvater von ($x | Person_NP)??", "an was ist die Doktorvater von ($x | Person_NP)? gestorben?", "an was stirbt die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "998",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist die Bandmitglieder von ($x | Band_NP)? gestorben?", "an  - stirbt die Bandmitglieder von ($x | Band_NP)??", "an was ist die Bandmitglieder von ($x | Band_NP)? gestorben?", "an was stirbt die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "999",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1000",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1001",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1002",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1003",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Personen sterben an die Zutaten von ($x | Food_NP)??", "Welche dbo:Person sterben an die Zutaten von ($x | Food_NP)??", "wer sterben an die Zutaten von ($x | Food_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/ingredient> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1004",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Personen sterben an die Spitzname von ($x | City_NP)??", "Welche dbo:Person sterben an die Spitzname von ($x | City_NP)??", "wer sterben an die Spitzname von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/property/nickname> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1005",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Personen sterben an die Vorwahl von ($x | Place_NP)??", "Welche dbo:Person sterben an die Vorwahl von ($x | Place_NP)??", "wer sterben an die Vorwahl von ($x | Place_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/areaCode> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1006",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Lighthouse",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Personen sterben an die H�he von ($x | Lighthouse_NP)??", "Welche dbo:Person sterben an die H�he von ($x | Lighthouse_NP)??", "wer sterben an die H�he von ($x | Lighthouse_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/height> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1007",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Enkel von ($x | Person_NP)? geboren?", "Wann wurde die Enkel von ($x | Person_NP)? geboren?", "in Welchem Datum wurde die Enkel von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1008",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Kind von ($x | Person_NP)? geboren?", "Wann wurde die Kind von ($x | Person_NP)? geboren?", "in Welchem Datum wurde die Kind von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1009",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Vizepr�sident unter ($x | Person_NP)? geboren?", "Wann wurde die Vizepr�sident unter ($x | Person_NP)? geboren?", "in Welchem Datum wurde die Vizepr�sident unter ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1010",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Tochter von ($x | Person_NP)? geboren?", "Wann wurde die Tochter von ($x | Person_NP)? geboren?", "in Welchem Datum wurde die Tochter von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1011",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Sohn von ($x | Person_NP)? geboren?", "Wann wurde die Sohn von ($x | Person_NP)? geboren?", "in Welchem Datum wurde die Sohn von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1012",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Nachfolger von ($x | Person_NP)? geboren?", "Wann wurde die Nachfolger von ($x | Person_NP)? geboren?", "in Welchem Datum wurde die Nachfolger von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1013",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Frau von ($x | Person_NP)? geboren?", "Wann wurde die Frau von ($x | Person_NP)? geboren?", "in Welchem Datum wurde die Frau von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1014",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Herausgeber von ($x | WrittenWork_NP)? geboren?", "Wann wurde die Herausgeber von ($x | WrittenWork_NP)? geboren?", "in Welchem Datum wurde die Herausgeber von ($x | WrittenWork_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1015",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die B�rgermeister von ($x | City_NP)? geboren?", "Wann wurde die B�rgermeister von ($x | City_NP)? geboren?", "in Welchem Datum wurde die B�rgermeister von ($x | City_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1016",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Doktorvater von ($x | Person_NP)? geboren?", "Wann wurde die Doktorvater von ($x | Person_NP)? geboren?", "in Welchem Datum wurde die Doktorvater von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1017",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Bandmitglieder von ($x | Band_NP)? geboren?", "Wann wurde die Bandmitglieder von ($x | Band_NP)? geboren?", "in Welchem Datum wurde die Bandmitglieder von ($x | Band_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1018",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1019",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1020",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1021",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1022",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "River",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fl�sse entspringen in die Vizepr�sident von ($x | Person_NP)??", "Welcher Fluss entspringen in die Vizepr�sident von ($x | Person_NP)??", "was entspringen in die Vizepr�sident von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1023",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Language",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wieviele Sprachen werden in die Vizepr�sident von ($x | Person_NP)? gesprochen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1024",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "BodyOfWater",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1025",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "BodyOfWater",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1026",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Road",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "was h�rte in die Hauptstadt von ($x | Country_NP)? auf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1027",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Road",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "was h�rte in die Hauptquartier von ($x | Organisation_NP)? auf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/headquarter> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1028",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Road",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "was h�rte in die Vizepr�sident von ($x | Person_NP)? auf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1029",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Road",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "was h�rte in die Lage in ($x | Location_NP)? auf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1030",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Enkel von ($x | Person_NP)? geboren?", "in Welche Lage geb�rt die Enkel von ($x | Person_NP)??", "in Welche Lage ist die Enkel von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1031",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Kind von ($x | Person_NP)? geboren?", "in Welche Lage geb�rt die Kind von ($x | Person_NP)??", "in Welche Lage ist die Kind von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1032",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Vizepr�sident unter ($x | Person_NP)? geboren?", "in Welche Lage geb�rt die Vizepr�sident unter ($x | Person_NP)??", "in Welche Lage ist die Vizepr�sident unter ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1033",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Tochter von ($x | Person_NP)? geboren?", "in Welche Lage geb�rt die Tochter von ($x | Person_NP)??", "in Welche Lage ist die Tochter von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1034",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Sohn von ($x | Person_NP)? geboren?", "in Welche Lage geb�rt die Sohn von ($x | Person_NP)??", "in Welche Lage ist die Sohn von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1035",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Nachfolger von ($x | Person_NP)? geboren?", "in Welche Lage geb�rt die Nachfolger von ($x | Person_NP)??", "in Welche Lage ist die Nachfolger von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1036",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Frau von ($x | Person_NP)? geboren?", "in Welche Lage geb�rt die Frau von ($x | Person_NP)??", "in Welche Lage ist die Frau von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1037",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Herausgeber von ($x | WrittenWork_NP)? geboren?", "in Welche Lage geb�rt die Herausgeber von ($x | WrittenWork_NP)??", "in Welche Lage ist die Herausgeber von ($x | WrittenWork_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1038",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die B�rgermeister von ($x | City_NP)? geboren?", "in Welche Lage geb�rt die B�rgermeister von ($x | City_NP)??", "in Welche Lage ist die B�rgermeister von ($x | City_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1039",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Doktorvater von ($x | Person_NP)? geboren?", "in Welche Lage geb�rt die Doktorvater von ($x | Person_NP)??", "in Welche Lage ist die Doktorvater von ($x | Person_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1040",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Bandmitglieder von ($x | Band_NP)? geboren?", "in Welche Lage geb�rt die Bandmitglieder von ($x | Band_NP)??", "in Welche Lage ist die Bandmitglieder von ($x | Band_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1041",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1042",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1043",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1044",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1045",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wurde in die Lage in ($x | Location_NP)? geboren?", "wer ist in die Lage in ($x | Location_NP)? geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/locatedInArea> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1046",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Enkel von ($x | Person_NP)? gewohnt?", "in Welche Stadt ist die Enkel von ($x | Person_NP)? gewohnt?", "in Welche Stadt wohnt die Enkel von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1047",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Kind von ($x | Person_NP)? gewohnt?", "in Welche Stadt ist die Kind von ($x | Person_NP)? gewohnt?", "in Welche Stadt wohnt die Kind von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1048",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Vizepr�sident unter ($x | Person_NP)? gewohnt?", "in Welche Stadt ist die Vizepr�sident unter ($x | Person_NP)? gewohnt?", "in Welche Stadt wohnt die Vizepr�sident unter ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1049",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Tochter von ($x | Person_NP)? gewohnt?", "in Welche Stadt ist die Tochter von ($x | Person_NP)? gewohnt?", "in Welche Stadt wohnt die Tochter von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1050",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Sohn von ($x | Person_NP)? gewohnt?", "in Welche Stadt ist die Sohn von ($x | Person_NP)? gewohnt?", "in Welche Stadt wohnt die Sohn von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1051",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Nachfolger von ($x | Person_NP)? gewohnt?", "in Welche Stadt ist die Nachfolger von ($x | Person_NP)? gewohnt?", "in Welche Stadt wohnt die Nachfolger von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1052",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Frau von ($x | Person_NP)? gewohnt?", "in Welche Stadt ist die Frau von ($x | Person_NP)? gewohnt?", "in Welche Stadt wohnt die Frau von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1053",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Herausgeber von ($x | WrittenWork_NP)? gewohnt?", "in Welche Stadt ist die Herausgeber von ($x | WrittenWork_NP)? gewohnt?", "in Welche Stadt wohnt die Herausgeber von ($x | WrittenWork_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1054",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die B�rgermeister von ($x | City_NP)? gewohnt?", "in Welche Stadt ist die B�rgermeister von ($x | City_NP)? gewohnt?", "in Welche Stadt wohnt die B�rgermeister von ($x | City_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1055",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Doktorvater von ($x | Person_NP)? gewohnt?", "in Welche Stadt ist die Doktorvater von ($x | Person_NP)? gewohnt?", "in Welche Stadt wohnt die Doktorvater von ($x | Person_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1056",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde die Bandmitglieder von ($x | Band_NP)? gewohnt?", "in Welche Stadt ist die Bandmitglieder von ($x | Band_NP)? gewohnt?", "in Welche Stadt wohnt die Bandmitglieder von ($x | Band_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1057",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1058",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1059",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1060",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1061",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wurde in die Hauptstadt von ($x | Country_NP)? gewohnt?", "wer ist in die Hauptstadt von ($x | Country_NP)? gewohnt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1062",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Enkel von ($x | Person_NP)? gestorben?", "Wann wurde die Enkel von ($x | Person_NP)? gestorben?", "am Welchem Datum wurde die Enkel von ($x | Person_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/parent> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1063",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Kind von ($x | Person_NP)? gestorben?", "Wann wurde die Kind von ($x | Person_NP)? gestorben?", "am Welchem Datum wurde die Kind von ($x | Person_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1064",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Vizepr�sident unter ($x | Person_NP)? gestorben?", "Wann wurde die Vizepr�sident unter ($x | Person_NP)? gestorben?", "am Welchem Datum wurde die Vizepr�sident unter ($x | Person_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/vicePresident> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1065",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Tochter von ($x | Person_NP)? gestorben?", "Wann wurde die Tochter von ($x | Person_NP)? gestorben?", "am Welchem Datum wurde die Tochter von ($x | Person_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1066",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Sohn von ($x | Person_NP)? gestorben?", "Wann wurde die Sohn von ($x | Person_NP)? gestorben?", "am Welchem Datum wurde die Sohn von ($x | Person_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/child> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1067",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Nachfolger von ($x | Person_NP)? gestorben?", "Wann wurde die Nachfolger von ($x | Person_NP)? gestorben?", "am Welchem Datum wurde die Nachfolger von ($x | Person_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/successor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1068",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Frau von ($x | Person_NP)? gestorben?", "Wann wurde die Frau von ($x | Person_NP)? gestorben?", "am Welchem Datum wurde die Frau von ($x | Person_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1069",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Herausgeber von ($x | WrittenWork_NP)? gestorben?", "Wann wurde die Herausgeber von ($x | WrittenWork_NP)? gestorben?", "am Welchem Datum wurde die Herausgeber von ($x | WrittenWork_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/editor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1070",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die B�rgermeister von ($x | City_NP)? gestorben?", "Wann wurde die B�rgermeister von ($x | City_NP)? gestorben?", "am Welchem Datum wurde die B�rgermeister von ($x | City_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/mayor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1071",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Doktorvater von ($x | Person_NP)? gestorben?", "Wann wurde die Doktorvater von ($x | Person_NP)? gestorben?", "am Welchem Datum wurde die Doktorvater von ($x | Person_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/doctoralAdvisor> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1072",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist die Bandmitglieder von ($x | Band_NP)? gestorben?", "Wann wurde die Bandmitglieder von ($x | Band_NP)? gestorben?", "am Welchem Datum wurde die Bandmitglieder von ($x | Band_NP)? gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/bandMember> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1073",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1074",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1075",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1076",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfPropx)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1077",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fl�sse flie�en durch die Hauptstadt von ($x | Country_NP)??", "Welcher Fluss flie�en durch die Hauptstadt von ($x | Country_NP)??", "was flie�en durch die Hauptstadt von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1078",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Software",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Software schreiben in die Amtssprache von ($x | Country_NP)??", "was schreiben in die Amtssprache von ($x | Country_NP)??" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/officialLanguage> ?objOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  }, {
    "id" : "1079",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Road",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "was fing  die Hauptstadt von ($x | Country_NP)? an?", "was f�ngt  die Hauptstadt von ($x | Country_NP)? an?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/capital> ?subjOfProp)\n)\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : true
  } ]
}