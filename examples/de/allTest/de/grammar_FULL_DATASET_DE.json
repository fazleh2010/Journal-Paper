{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#zutaten_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Zutaten von ($x | Food_NP)", "Gib mir die Zutaten von ($x | Food_NP)", "Liste alle Zutaten von ($x | Food_NP) auf", "Liste die Zutaten von ($x | Food_NP) auf", "was ist die Zutaten von ($x | Food_NP)?", "was sind Zutaten von ($x | Food_NP)?", "was war die Zutaten von ($x | Food_NP)?", "was waren Zutaten von ($x | Food_NP)?", "Welche Dinger sind die Zutaten von ($x | Food_NP)?", "Welche Dinger waren die Zutaten von ($x | Food_NP)?", "Welches Ding ist die Zutaten von ($x | Food_NP)?", "Welches Ding war die Zutaten von ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "2",
    "lexicalEntryUri" : "http://localhost:8080#zutaten_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | THING_NP) die Zutaten von ($x | Food_NP)?", "sind ($x | THING_NP) die Zutaten von ($x | Food_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#zutaten_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Food",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Zutaten von ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#Enkel_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Enkel von ($x | Person_NP)", "Gib mir den Enkel von ($x | Person_NP)", "Gib mir die Enkel von ($x | Person_NP)", "Liste alle Enkel von ($x | Person_NP) auf", "Liste die Enkel von ($x | Person_NP) auf", "Welche dbo:Person ist die Enkel von ($x | Person_NP)?", "Welche dbo:Person war die Enkel von ($x | Person_NP)?", "Welche Personen sind die Enkel von ($x | Person_NP)?", "Welche Personen waren die Enkel von ($x | Person_NP)?", "wer ist die Enkel von ($x | Person_NP)?", "wer sind Enkel von ($x | Person_NP)?", "wer war die Enkel von ($x | Person_NP)?", "wer waren Enkel von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#Enkel_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die Enkel von ($x | Person_NP)?", "sind ($x | Person_NP) die Enkel von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#Enkel_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Enkel von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#kinder_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Kinder von ($x | Person_NP)", "Gib mir die Kind von ($x | Person_NP)", "Gib mir die Kinder von ($x | Person_NP)", "Liste alle Kinder von ($x | Person_NP) auf", "Liste die Kinder von ($x | Person_NP) auf", "Welche dbo:Person ist die Kind von ($x | Person_NP)?", "Welche dbo:Person war die Kind von ($x | Person_NP)?", "Welche Personen sind die Kind von ($x | Person_NP)?", "Welche Personen waren die Kind von ($x | Person_NP)?", "wer ist die Kind von ($x | Person_NP)?", "wer sind Kinder von ($x | Person_NP)?", "wer war die Kind von ($x | Person_NP)?", "wer waren Kinder von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#kinder_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die Kind von ($x | Person_NP)?", "sind ($x | Person_NP) die Kinder von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#kinder_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Kind von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_unter",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten unter ($x | Person_NP)", "Gib mir den Vizepr�sident unter ($x | Person_NP)", "Gib mir die Vizepr�sidenten unter ($x | Person_NP)", "Liste alle Vizepr�sidenten unter ($x | Person_NP) auf", "Liste die Vizepr�sidenten unter ($x | Person_NP) auf", "Welche dbo:Person ist die Vizepr�sident unter ($x | Person_NP)?", "Welche dbo:Person war die Vizepr�sident unter ($x | Person_NP)?", "Welche Personen sind die Vizepr�sident unter ($x | Person_NP)?", "Welche Personen waren die Vizepr�sident unter ($x | Person_NP)?", "wer ist die Vizepr�sident unter ($x | Person_NP)?", "wer sind Vizepr�sidenten unter ($x | Person_NP)?", "wer war die Vizepr�sident unter ($x | Person_NP)?", "wer waren Vizepr�sidenten unter ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_unter",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die Vizepr�sident unter ($x | Person_NP)?", "sind ($x | Person_NP) die Vizepr�sidenten unter ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_unter",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Vizepr�sident unter ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#Hauptstadt_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir die Hauptstadt von ($x | Country_NP)", "was ist die Hauptstadt von ($x | Country_NP)?", "was war die Hauptstadt von ($x | Country_NP)?", "Welche Stadt ist die Hauptstadt von ($x | Country_NP)?", "Welche Stadt war die Hauptstadt von ($x | Country_NP)?", "Welche St�dte sind die Hauptstadt von ($x | Country_NP)?", "Welche St�dte waren die Hauptstadt von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#Hauptstadt_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | City_NP) die Hauptstadt von ($x | Country_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#Hauptstadt_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Hauptstadt von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#spitzname_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Spitznamen von ($x | City_NP)", "Gib mir den Spitzname von ($x | City_NP)", "Gib mir die Spitznamen von ($x | City_NP)", "Liste alle Spitznamen von ($x | City_NP) auf", "Liste die Spitznamen von ($x | City_NP) auf", "was ist die Spitzname von ($x | City_NP)?", "was sind Spitznamen von ($x | City_NP)?", "was war die Spitzname von ($x | City_NP)?", "was waren Spitznamen von ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#spitzname_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | THING_NP) die Spitzname von ($x | City_NP)?", "sind ($x | THING_NP) die Spitznamen von ($x | City_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#spitzname_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Spitzname von ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#Gesamteinwohnerzahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir die Gesamteinwohnerzahl von ($x | Location_NP)", "was ist die Gesamteinwohnerzahl von ($x | Location_NP)?", "was war die Gesamteinwohnerzahl von ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#Gesamteinwohnerzahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Number_NP) die Gesamteinwohnerzahl von ($x | Location_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#Gesamteinwohnerzahl_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Gesamteinwohnerzahl von ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#tocher_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle T�chter von ($x | Person_NP)", "Gib mir die Tochter von ($x | Person_NP)", "Gib mir die T�chter von ($x | Person_NP)", "Liste alle T�chter von ($x | Person_NP) auf", "Liste die T�chter von ($x | Person_NP) auf", "Welche dbo:Person ist die Tochter von ($x | Person_NP)?", "Welche dbo:Person war die Tochter von ($x | Person_NP)?", "Welche Personen sind die Tochter von ($x | Person_NP)?", "Welche Personen waren die Tochter von ($x | Person_NP)?", "wer ist die Tochter von ($x | Person_NP)?", "wer sind T�chter von ($x | Person_NP)?", "wer war die Tochter von ($x | Person_NP)?", "wer waren T�chter von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#tocher_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die Tochter von ($x | Person_NP)?", "sind ($x | Person_NP) die T�chter von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#tocher_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Tochter von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#sohn_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle S�hne von ($x | Person_NP)", "Gib mir die Sohn von ($x | Person_NP)", "Gib mir die S�hne von ($x | Person_NP)", "Liste alle S�hne von ($x | Person_NP) auf", "Liste die S�hne von ($x | Person_NP) auf", "Welche dbo:Person ist die Sohn von ($x | Person_NP)?", "Welche dbo:Person war die Sohn von ($x | Person_NP)?", "Welche Personen sind die Sohn von ($x | Person_NP)?", "Welche Personen waren die Sohn von ($x | Person_NP)?", "wer ist die Sohn von ($x | Person_NP)?", "wer sind S�hne von ($x | Person_NP)?", "wer war die Sohn von ($x | Person_NP)?", "wer waren S�hne von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "26",
    "lexicalEntryUri" : "http://localhost:8080#sohn_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die Sohn von ($x | Person_NP)?", "sind ($x | Person_NP) die S�hne von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#sohn_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Sohn von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#vorwahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vorwahl von ($x | Place_NP)", "Gib mir die Vorwahl von ($x | Place_NP)", "Liste alle Vorwahl von ($x | Place_NP) auf", "Liste die Vorwahl von ($x | Place_NP) auf", "was ist die Vorwahl von ($x | Place_NP)?", "was sind Vorwahl von ($x | Place_NP)?", "was war die Vorwahl von ($x | Place_NP)?", "was waren Vorwahl von ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "29",
    "lexicalEntryUri" : "http://localhost:8080#vorwahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | THING_NP) die Vorwahl von ($x | Place_NP)?", "sind ($x | THING_NP) die Vorwahl von ($x | Place_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "30",
    "lexicalEntryUri" : "http://localhost:8080#vorwahl_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Vorwahl von ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#nachfolger_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Nachfolger von ($x | Person_NP)", "Gib mir den Nachfolger von ($x | Person_NP)", "Gib mir die Nachfolger von ($x | Person_NP)", "Liste alle Nachfolger von ($x | Person_NP) auf", "Liste die Nachfolger von ($x | Person_NP) auf", "Welche dbo:Person ist die Nachfolger von ($x | Person_NP)?", "Welche dbo:Person war die Nachfolger von ($x | Person_NP)?", "Welche Personen sind die Nachfolger von ($x | Person_NP)?", "Welche Personen waren die Nachfolger von ($x | Person_NP)?", "wer ist die Nachfolger von ($x | Person_NP)?", "wer sind Nachfolger von ($x | Person_NP)?", "wer war die Nachfolger von ($x | Person_NP)?", "wer waren Nachfolger von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#nachfolger_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die Nachfolger von ($x | Person_NP)?", "sind ($x | Person_NP) die Nachfolger von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#nachfolger_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Nachfolger von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "34",
    "lexicalEntryUri" : "http://localhost:8080#hauptquartier_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ " feminine sind die Hauptquartier von ($x | Organisation_NP)?", " feminine waren die Hauptquartier von ($x | Organisation_NP)?", " Geb�ude ist die Hauptquartier von ($x | Organisation_NP)?", " Geb�ude war die Hauptquartier von ($x | Organisation_NP)?", "Gib mir alle Hauptquaritere von ($x | Organisation_NP)", "Gib mir das Hauptquartier von ($x | Organisation_NP)", "Gib mir die Hauptquaritere von ($x | Organisation_NP)", "Liste alle Hauptquaritere von ($x | Organisation_NP) auf", "Liste die Hauptquaritere von ($x | Organisation_NP) auf", "was ist die Hauptquartier von ($x | Organisation_NP)?", "was sind Hauptquaritere von ($x | Organisation_NP)?", "was war die Hauptquartier von ($x | Organisation_NP)?", "was waren Hauptquaritere von ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "35",
    "lexicalEntryUri" : "http://localhost:8080#hauptquartier_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | PopulatedPlace_NP) die Hauptquartier von ($x | Organisation_NP)?", "sind ($x | PopulatedPlace_NP) die Hauptquaritere von ($x | Organisation_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#hauptquartier_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "PopulatedPlace",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Hauptquartier von ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/headquarter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#Trainer_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "CollegeCoach",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Trainer von ($x | IceHockeyLeague_NP)", "Gib mir den Trainer von ($x | IceHockeyLeague_NP)", "Gib mir die Trainer von ($x | IceHockeyLeague_NP)", "Liste alle Trainer von ($x | IceHockeyLeague_NP) auf", "Liste die Trainer von ($x | IceHockeyLeague_NP) auf", "Welche Trainer sind die Trainer von ($x | IceHockeyLeague_NP)?", "Welche Trainer waren die Trainer von ($x | IceHockeyLeague_NP)?", "Welcher Trainer ist die Trainer von ($x | IceHockeyLeague_NP)?", "Welcher Trainer war die Trainer von ($x | IceHockeyLeague_NP)?", "wer ist die Trainer von ($x | IceHockeyLeague_NP)?", "wer sind Trainer von ($x | IceHockeyLeague_NP)?", "wer war die Trainer von ($x | IceHockeyLeague_NP)?", "wer waren Trainer von ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#Trainer_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "CollegeCoach",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | CollegeCoach_NP) die Trainer von ($x | IceHockeyLeague_NP)?", "sind ($x | CollegeCoach_NP) die Trainer von ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "39",
    "lexicalEntryUri" : "http://localhost:8080#Trainer_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "IceHockeyLeague",
    "returnType" : "CollegeCoach",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Trainer von ($x | IceHockeyLeague_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/coach> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "40",
    "lexicalEntryUri" : "http://localhost:8080#Frau_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Frauen von ($x | Person_NP)", "Gib mir die Frau von ($x | Person_NP)", "Gib mir die Frauen von ($x | Person_NP)", "Liste alle Frauen von ($x | Person_NP) auf", "Liste die Frauen von ($x | Person_NP) auf", "Welche dbo:Person ist die Frau von ($x | Person_NP)?", "Welche dbo:Person war die Frau von ($x | Person_NP)?", "Welche Personen sind die Frau von ($x | Person_NP)?", "Welche Personen waren die Frau von ($x | Person_NP)?", "wer ist die Frau von ($x | Person_NP)?", "wer sind Frauen von ($x | Person_NP)?", "wer war die Frau von ($x | Person_NP)?", "wer waren Frauen von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#Frau_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die Frau von ($x | Person_NP)?", "sind ($x | Person_NP) die Frauen von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#Frau_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Frau von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#Herausgeber_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Herausgeber von ($x | WrittenWork_NP)", "Gib mir den Herausgeber von ($x | WrittenWork_NP)", "Gib mir die Herausgeber von ($x | WrittenWork_NP)", "Liste alle Herausgeber von ($x | WrittenWork_NP) auf", "Liste die Herausgeber von ($x | WrittenWork_NP) auf", "Welche dbo:Person ist die Herausgeber von ($x | WrittenWork_NP)?", "Welche dbo:Person war die Herausgeber von ($x | WrittenWork_NP)?", "Welche Personen sind die Herausgeber von ($x | WrittenWork_NP)?", "Welche Personen waren die Herausgeber von ($x | WrittenWork_NP)?", "wer ist die Herausgeber von ($x | WrittenWork_NP)?", "wer sind Herausgeber von ($x | WrittenWork_NP)?", "wer war die Herausgeber von ($x | WrittenWork_NP)?", "wer waren Herausgeber von ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "44",
    "lexicalEntryUri" : "http://localhost:8080#Herausgeber_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die Herausgeber von ($x | WrittenWork_NP)?", "sind ($x | Person_NP) die Herausgeber von ($x | WrittenWork_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "45",
    "lexicalEntryUri" : "http://localhost:8080#Herausgeber_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "WrittenWork",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Herausgeber von ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Vizepr�sidenten von ($x | Person_NP)", "Gib mir den Vizepr�sident von ($x | Person_NP)", "Gib mir die Vizepr�sidenten von ($x | Person_NP)", "Liste alle Vizepr�sidenten von ($x | Person_NP) auf", "Liste die Vizepr�sidenten von ($x | Person_NP) auf", "was ist die Vizepr�sident von ($x | Person_NP)?", "was sind Vizepr�sidenten von ($x | Person_NP)?", "was war die Vizepr�sident von ($x | Person_NP)?", "was waren Vizepr�sidenten von ($x | Person_NP)?", "Welche L�nder sind die Vizepr�sident von ($x | Person_NP)?", "Welche L�nder waren die Vizepr�sident von ($x | Person_NP)?", "Welches Land ist die Vizepr�sident von ($x | Person_NP)?", "Welches Land war die Vizepr�sident von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Country_NP) die Vizepr�sident von ($x | Person_NP)?", "sind ($x | Country_NP) die Vizepr�sidenten von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#vizepr�sident_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Vizepr�sident von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "49",
    "lexicalEntryUri" : "http://localhost:8080#seitenanzahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Seitenzahlen von ($x | WrittenWork_NP)", "Gib mir die Seitenzahl von ($x | WrittenWork_NP)", "Gib mir die Seitenzahlen von ($x | WrittenWork_NP)", "Liste alle Seitenzahlen von ($x | WrittenWork_NP) auf", "Liste die Seitenzahlen von ($x | WrittenWork_NP) auf", "was ist die Seitenzahl von ($x | WrittenWork_NP)?", "was sind Seitenzahlen von ($x | WrittenWork_NP)?", "was war die Seitenzahl von ($x | WrittenWork_NP)?", "was waren Seitenzahlen von ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "50",
    "lexicalEntryUri" : "http://localhost:8080#seitenanzahl_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Number_NP) die Seitenzahl von ($x | WrittenWork_NP)?", "sind ($x | Number_NP) die Seitenzahlen von ($x | WrittenWork_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#seitenanzahl_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "WrittenWork",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Seitenzahl von ($x | WrittenWork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/numberOfPages> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#government_type",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Regierungsform von ($x | Country_NP)", "Gib mir die Regierungsform von ($x | Country_NP)", "Liste alle Regierungsform von ($x | Country_NP) auf", "Liste die Regierungsform von ($x | Country_NP) auf", "was ist die Regierungsform von ($x | Country_NP)?", "was sind Regierungsform von ($x | Country_NP)?", "was war die Regierungsform von ($x | Country_NP)?", "was waren Regierungsform von ($x | Country_NP)?", "Welche Typen sind die Regierungsform von ($x | Country_NP)?", "Welche Typen waren die Regierungsform von ($x | Country_NP)?", "Welcher Typ ist die Regierungsform von ($x | Country_NP)?", "Welcher Typ war die Regierungsform von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#government_type",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | GovernmentType_NP) die Regierungsform von ($x | Country_NP)?", "sind ($x | GovernmentType_NP) die Regierungsform von ($x | Country_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "54",
    "lexicalEntryUri" : "http://localhost:8080#government_type",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Regierungsform von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "55",
    "lexicalEntryUri" : "http://localhost:8080#w�hrung_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle W�hrungen von ($x | Country_NP)", "Gib mir die W�hrung von ($x | Country_NP)", "Gib mir die W�hrungen von ($x | Country_NP)", "Liste alle W�hrungen von ($x | Country_NP) auf", "Liste die W�hrungen von ($x | Country_NP) auf", "was ist die W�hrung von ($x | Country_NP)?", "was sind W�hrungen von ($x | Country_NP)?", "was war die W�hrung von ($x | Country_NP)?", "was waren W�hrungen von ($x | Country_NP)?", "Welche W�hrung ist die W�hrung von ($x | Country_NP)?", "Welche W�hrung war die W�hrung von ($x | Country_NP)?", "Welche W�hrungen sind die W�hrung von ($x | Country_NP)?", "Welche W�hrungen waren die W�hrung von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#w�hrung_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Currency_NP) die W�hrung von ($x | Country_NP)?", "sind ($x | Currency_NP) die W�hrungen von ($x | Country_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#w�hrung_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die W�hrung von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#B�rgermeister_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir den B�rgermeister von ($x | City_NP)", "Welche dbo:Person ist die B�rgermeister von ($x | City_NP)?", "Welche dbo:Person war die B�rgermeister von ($x | City_NP)?", "Welche Personen sind die B�rgermeister von ($x | City_NP)?", "Welche Personen waren die B�rgermeister von ($x | City_NP)?", "wer ist die B�rgermeister von ($x | City_NP)?", "wer war die B�rgermeister von ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "59",
    "lexicalEntryUri" : "http://localhost:8080#B�rgermeister_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die B�rgermeister von ($x | City_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "60",
    "lexicalEntryUri" : "http://localhost:8080#B�rgermeister_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die B�rgermeister von ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#Amtssprache_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Amtssprachen von ($x | Country_NP)", "Gib mir die Amtssprache von ($x | Country_NP)", "Gib mir die Amtssprachen von ($x | Country_NP)", "Liste alle Amtssprachen von ($x | Country_NP) auf", "Liste die Amtssprachen von ($x | Country_NP) auf", "was ist die Amtssprache von ($x | Country_NP)?", "was sind Amtssprachen von ($x | Country_NP)?", "was war die Amtssprache von ($x | Country_NP)?", "was waren Amtssprachen von ($x | Country_NP)?", "Welche Sprache ist die Amtssprache von ($x | Country_NP)?", "Welche Sprache war die Amtssprache von ($x | Country_NP)?", "Welche Sprachen sind die Amtssprache von ($x | Country_NP)?", "Welche Sprachen waren die Amtssprache von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#Amtssprache_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Language_NP) die Amtssprache von ($x | Country_NP)?", "sind ($x | Language_NP) die Amtssprachen von ($x | Country_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#Amtssprache_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Amtssprache von ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "64",
    "lexicalEntryUri" : "http://localhost:8080#Lage_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Lagen in ($x | Location_NP)", "Gib mir das Lage in ($x | Location_NP)", "Gib mir die Lagen in ($x | Location_NP)", "Liste alle Lagen in ($x | Location_NP) auf", "Liste die Lagen in ($x | Location_NP) auf", "was ist die Lage in ($x | Location_NP)?", "was sind Lagen in ($x | Location_NP)?", "was war die Lage in ($x | Location_NP)?", "was waren Lagen in ($x | Location_NP)?", "Welche Lage ist die Lage in ($x | Location_NP)?", "Welche Lage war die Lage in ($x | Location_NP)?", "Welche Lagen sind die Lage in ($x | Location_NP)?", "Welche Lagen waren die Lage in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#Lage_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Place_NP) die Lage in ($x | Location_NP)?", "sind ($x | Place_NP) die Lagen in ($x | Location_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#Lage_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Lage in ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#entwickler_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Entwickler von ($x | Software_NP)", "Gib mir den Entwickler von ($x | Software_NP)", "Gib mir die Entwickler von ($x | Software_NP)", "Liste alle Entwickler von ($x | Software_NP) auf", "Liste die Entwickler von ($x | Software_NP) auf", "Welche Universit�t ist die Entwickler von ($x | Software_NP)?", "Welche Universit�t war die Entwickler von ($x | Software_NP)?", "Welche Universit�ten sind die Entwickler von ($x | Software_NP)?", "Welche Universit�ten waren die Entwickler von ($x | Software_NP)?", "wer ist die Entwickler von ($x | Software_NP)?", "wer sind Entwickler von ($x | Software_NP)?", "wer war die Entwickler von ($x | Software_NP)?", "wer waren Entwickler von ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "68",
    "lexicalEntryUri" : "http://localhost:8080#entwickler_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | University_NP) die Entwickler von ($x | Software_NP)?", "sind ($x | University_NP) die Entwickler von ($x | Software_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "69",
    "lexicalEntryUri" : "http://localhost:8080#entwickler_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Entwickler von ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#Doktorvater_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Doktorv�ter von ($x | Person_NP)", "Gib mir den Doktorvater von ($x | Person_NP)", "Gib mir die Doktorv�ter von ($x | Person_NP)", "Liste alle Doktorv�ter von ($x | Person_NP) auf", "Liste die Doktorv�ter von ($x | Person_NP) auf", "Welche dbo:Person ist die Doktorvater von ($x | Person_NP)?", "Welche dbo:Person war die Doktorvater von ($x | Person_NP)?", "Welche Personen sind die Doktorvater von ($x | Person_NP)?", "Welche Personen waren die Doktorvater von ($x | Person_NP)?", "wer ist die Doktorvater von ($x | Person_NP)?", "wer sind Doktorv�ter von ($x | Person_NP)?", "wer war die Doktorvater von ($x | Person_NP)?", "wer waren Doktorv�ter von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#Doktorvater_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die Doktorvater von ($x | Person_NP)?", "sind ($x | Person_NP) die Doktorv�ter von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#Doktorvater_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Doktorvater von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#Musik_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Musiken von ($x | Person_NP)", "Gib mir die Musik von ($x | Person_NP)", "Gib mir die Musiken von ($x | Person_NP)", "Liste alle Musiken von ($x | Person_NP) auf", "Liste die Musiken von ($x | Person_NP) auf", "was ist die Musik von ($x | Person_NP)?", "was sind Musiken von ($x | Person_NP)?", "was war die Musik von ($x | Person_NP)?", "was waren Musiken von ($x | Person_NP)?", "Welche dbo:Person ist die Musik von ($x | Person_NP)?", "Welche dbo:Person war die Musik von ($x | Person_NP)?", "Welche Personen sind die Musik von ($x | Person_NP)?", "Welche Personen waren die Musik von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "74",
    "lexicalEntryUri" : "http://localhost:8080#Musik_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Musical_NP) die Musik von ($x | Person_NP)?", "sind ($x | Musical_NP) die Musiken von ($x | Person_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#Musik_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Musik von ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#H�he_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Lighthouse",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir die H�he von ($x | Lighthouse_NP)", "was ist die H�he von ($x | Lighthouse_NP)?", "was war die H�he von ($x | Lighthouse_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#H�he_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Lighthouse",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | THING_NP) die H�he von ($x | Lighthouse_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#H�he_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Lighthouse",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die H�he von ($x | Lighthouse_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "79",
    "lexicalEntryUri" : "http://localhost:8080#Spiele_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Spiele von ($x | Organisation_NP)", "Gib mir das Spiel von ($x | Organisation_NP)", "Gib mir die Spiele von ($x | Organisation_NP)", "Liste alle Spiele von ($x | Organisation_NP) auf", "Liste die Spiele von ($x | Organisation_NP) auf", "was ist die Spiel von ($x | Organisation_NP)?", "was sind Spiele von ($x | Organisation_NP)?", "was war die Spiel von ($x | Organisation_NP)?", "was waren Spiele von ($x | Organisation_NP)?", "Welche Firma ist die Spiel von ($x | Organisation_NP)?", "Welche Firma war die Spiel von ($x | Organisation_NP)?", "Welche Firmen sind die Spiel von ($x | Organisation_NP)?", "Welche Firmen waren die Spiel von ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#Spiele_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Publisher_NP) die Spiel von ($x | Organisation_NP)?", "sind ($x | Publisher_NP) die Spiele von ($x | Organisation_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#Spiele_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "Publisher",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Spiel von ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#Bandmitglieder_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Gib mir alle Bandmitglieder von ($x | Band_NP)", "Gib mir den Bandmitglieder von ($x | Band_NP)", "Gib mir die Bandmitglieder von ($x | Band_NP)", "Liste alle Bandmitglieder von ($x | Band_NP) auf", "Liste die Bandmitglieder von ($x | Band_NP) auf", "Welche dbo:Person ist die Bandmitglieder von ($x | Band_NP)?", "Welche dbo:Person war die Bandmitglieder von ($x | Band_NP)?", "Welche Personen sind die Bandmitglieder von ($x | Band_NP)?", "Welche Personen waren die Bandmitglieder von ($x | Band_NP)?", "wer ist die Bandmitglieder von ($x | Band_NP)?", "wer sind Bandmitglieder von ($x | Band_NP)?", "wer war die Bandmitglieder von ($x | Band_NP)?", "wer waren Bandmitglieder von ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "83",
    "lexicalEntryUri" : "http://localhost:8080#Bandmitglieder_von",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "ist ($x | Person_NP) die Bandmitglieder von ($x | Band_NP)?", "sind ($x | Person_NP) die Bandmitglieder von ($x | Band_NP)?" ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "84",
    "lexicalEntryUri" : "http://localhost:8080#Bandmitglieder_von",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "die Bandmitglieder von ($x | Band_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#to_nennen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ " - hat ($x | THING_NP) genannt?", " - nannte ($x | THING_NP)?", "Wieviel hat ($x | THING_NP) genannt?", "wer hat ($x | THING_NP) genannt?", "wer nannte ($x | THING_NP)?", "wer sich nennen ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#to_nennen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von ($x | Person_NP) genannt?", "was wird von ($x | Person_NP) genannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#to_nennen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "88",
    "lexicalEntryUri" : "http://localhost:8080#to_entdecken",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "CelestialBody",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person entdeckte ($x | CelestialBody_NP)?", "Welche dbo:Person hat ($x | CelestialBody_NP) entdeckt?", "Wieviel hat ($x | CelestialBody_NP) entdeckt?", "wer entdecken ($x | CelestialBody_NP)?", "wer entdeckte ($x | CelestialBody_NP)?", "wer hat ($x | CelestialBody_NP) entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "89",
    "lexicalEntryUri" : "http://localhost:8080#to_entdecken",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Himmelsk�rper wird von ($x | Person_NP) entdeckt?", "was wird von ($x | Person_NP) entdeckt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#to_entdecken",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#to_entwickeln",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Software entwickelte ($x | Software_NP)?", "Welche Software hat ($x | Software_NP) entwickelt?", "Wieviel hat ($x | Software_NP) entwickelt?", "wer entwickeln ($x | Software_NP)?", "wer entwickelte ($x | Software_NP)?", "wer hat ($x | Software_NP) entwickelt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "92",
    "lexicalEntryUri" : "http://localhost:8080#to_entwickeln",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Software",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Firma wird von ($x | Organisation_NP) entwickelt?", "was wird von ($x | Organisation_NP) entwickelt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "93",
    "lexicalEntryUri" : "http://localhost:8080#to_entwickeln",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Software",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "94",
    "lexicalEntryUri" : "http://localhost:8080#to_heiraten",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat ($x | Person_NP) hat geheiratet?", "Welche dbo:Person heiratete ($x | Person_NP)?", "Wieviel hat ($x | Person_NP) hat geheiratet?", "wer hat ($x | Person_NP) hat geheiratet?", "wer heiraten ($x | Person_NP)?", "wer heiratete ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "95",
    "lexicalEntryUri" : "http://localhost:8080#to_heiraten",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird mit ($x | Person_NP) hat geheiratet?", "wer wird mit ($x | Person_NP) hat geheiratet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#to_heiraten",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#to_ausdenken",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "wer denkt ($x | TelevisionShow_NP) aus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "98",
    "lexicalEntryUri" : "http://localhost:8080#to_ausdenken",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "99",
    "lexicalEntryUri" : "http://localhost:8080#to_ausdenken",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#to_ausdenken",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "wer denkt ($x | TelevisionShow_NP) aus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#to_ausdenken",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#to_ausdenken",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "103",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat ($x | Song_NP) geschrieben?", "Welche dbo:Person schrieb ($x | Song_NP)?", "Wieviel hat ($x | Song_NP) geschrieben?", "wer hat ($x | Song_NP) geschrieben?", "wer schreiben ($x | Song_NP)?", "wer schrieb ($x | Song_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "104",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Lied wird von ($x | Person_NP) geschrieben?", "was wird von ($x | Person_NP) geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#to_komponieren",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat ($x | Film_NP) komponiert?", "Welche dbo:Person komponierte ($x | Film_NP)?", "Wieviel hat ($x | Film_NP) komponiert?", "wer hat ($x | Film_NP) komponiert?", "wer komponieren ($x | Film_NP)?", "wer komponierte ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "107",
    "lexicalEntryUri" : "http://localhost:8080#to_komponieren",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von ($x | Person_NP) komponiert?", "was wird von ($x | Person_NP) komponiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "108",
    "lexicalEntryUri" : "http://localhost:8080#to_komponieren",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_2",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat ($x | TelevisionShow_NP) geschrieben?", "Welche dbo:Person schrieb ($x | TelevisionShow_NP)?", "Wieviel hat ($x | TelevisionShow_NP) geschrieben?", "wer hat ($x | TelevisionShow_NP) geschrieben?", "wer schreiben ($x | TelevisionShow_NP)?", "wer schrieb ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_2",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von ($x | Person_NP) geschrieben?", "was wird von ($x | Person_NP) geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "111",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_2",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "112",
    "lexicalEntryUri" : "http://localhost:8080#to_drehen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person drehte ($x | Film_NP)?", "Welche dbo:Person hat ($x | Film_NP) gedreht?", "Wieviel hat ($x | Film_NP) gedreht?", "wer drehen ($x | Film_NP)?", "wer drehte ($x | Film_NP)?", "wer hat ($x | Film_NP) gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#to_drehen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von ($x | Person_NP) gedreht?", "was wird von ($x | Person_NP) gedreht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#to_drehen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "115",
    "lexicalEntryUri" : "http://localhost:8080#to_moderate",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat ($x | TelevisionShow_NP) hat moderiert?", "Welche dbo:Person moderiert ($x | TelevisionShow_NP)?", "Wieviel hat ($x | TelevisionShow_NP) hat moderiert?", "wer hat ($x | TelevisionShow_NP) hat moderiert?", "wer moderieren ($x | TelevisionShow_NP)?", "wer moderiert ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "116",
    "lexicalEntryUri" : "http://localhost:8080#to_moderate",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von ($x | Person_NP) hat moderiert?", "was wird von ($x | Person_NP) hat moderiert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#to_moderate",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#to_kosten",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche - hat ($x | Film_NP) gekostet?", "Welche - kostete ($x | Film_NP)?", "Wieviel hat ($x | Film_NP) gekostet?", "was hat ($x | Film_NP) gekostet?", "was kosten ($x | Film_NP)?", "was kostete ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "119",
    "lexicalEntryUri" : "http://localhost:8080#to_kosten",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von ($x | Number_NP) gekostet?", "was wird von ($x | Number_NP) gekostet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "120",
    "lexicalEntryUri" : "http://localhost:8080#to_kosten",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "121",
    "lexicalEntryUri" : "http://localhost:8080#to_entwerfen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person entwarf ($x | Bridge_NP)?", "Welche dbo:Person hat ($x | Bridge_NP) entworfen?", "Wieviel hat ($x | Bridge_NP) entworfen?", "wer entwarf ($x | Bridge_NP)?", "wer entwerfen ($x | Bridge_NP)?", "wer hat ($x | Bridge_NP) entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#to_entwerfen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird von ($x | Person_NP) entworfen?", "was wird von ($x | Person_NP) entworfen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#to_entwerfen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "124",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat ($x | Book_NP) geschrieben?", "Welche dbo:Person schrieb ($x | Book_NP)?", "Wieviel hat ($x | Book_NP) geschrieben?", "wer hat ($x | Book_NP) geschrieben?", "wer schreiben ($x | Book_NP)?", "wer schrieb ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "125",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Person wird von ($x | Person_NP) geschrieben?", "was wird von ($x | Person_NP) geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_5",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#to_gr�nden_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Agent gr�ndete ($x | Organisation_NP)?", "Welcher Agent hat ($x | Organisation_NP) gegr�ndet?", "Wieviel hat ($x | Organisation_NP) gegr�ndet?", "wer gr�nden ($x | Organisation_NP)?", "wer gr�ndete ($x | Organisation_NP)?", "wer hat ($x | Organisation_NP) gegr�ndet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "128",
    "lexicalEntryUri" : "http://localhost:8080#to_gr�nden_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Firma wird von ($x | Agent_NP) gegr�ndet?", "wer wird von ($x | Agent_NP) gegr�ndet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "129",
    "lexicalEntryUri" : "http://localhost:8080#to_gr�nden_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "130",
    "lexicalEntryUri" : "http://localhost:8080#to_malen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat ($x | Work_NP) gemalt?", "Welche dbo:Person malte ($x | Work_NP)?", "Wieviel hat ($x | Work_NP) gemalt?", "wer hat ($x | Work_NP) gemalt?", "wer malen ($x | Work_NP)?", "wer malte ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#to_malen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von ($x | Person_NP) gemalt?", "was wird von ($x | Person_NP) gemalt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#to_malen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "133",
    "lexicalEntryUri" : "http://localhost:8080#to_spielen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat ($x | FictionalCharacter_NP) gespielt?", "Welche dbo:Person spielte ($x | FictionalCharacter_NP)?", "Wieviel hat ($x | FictionalCharacter_NP) gespielt?", "wer hat ($x | FictionalCharacter_NP) gespielt?", "wer spielen ($x | FictionalCharacter_NP)?", "wer spielte ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "134",
    "lexicalEntryUri" : "http://localhost:8080#to_spielen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Charakter wird von ($x | Person_NP) gespielt?", "wer wird von ($x | Person_NP) gespielt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#to_spielen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat ($x | Film_NP) geschrieben?", "Welche dbo:Person schrieb ($x | Film_NP)?", "Wieviel hat ($x | Film_NP) geschrieben?", "wer hat ($x | Film_NP) geschrieben?", "wer schreiben ($x | Film_NP)?", "wer schrieb ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "137",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Film wird von ($x | Person_NP) geschrieben?", "was wird von ($x | Person_NP) geschrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "138",
    "lexicalEntryUri" : "http://localhost:8080#to_Schreiben_3",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "139",
    "lexicalEntryUri" : "http://localhost:8080#to_besteigen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person bestieg ($x | Mountain_NP)?", "Welche dbo:Person hat ($x | Mountain_NP) bestiegen?", "Wieviel hat ($x | Mountain_NP) bestiegen?", "wer besteigen ($x | Mountain_NP)?", "wer bestieg ($x | Mountain_NP)?", "wer hat ($x | Mountain_NP) bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#to_besteigen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Berg wird von ($x | Person_NP) bestiegen?", "was wird von ($x | Person_NP) bestiegen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#to_besteigen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "142",
    "lexicalEntryUri" : "http://localhost:8080#to_�berspannen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Fluss hat ($x | River_NP) �berspannt?", "Welcher Fluss �berspannte ($x | River_NP)?", "Wieviel hat ($x | River_NP) �berspannt?", "was hat ($x | River_NP) �berspannt?", "was �berspannen ($x | River_NP)?", "was �berspannte ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "143",
    "lexicalEntryUri" : "http://localhost:8080#to_�berspannen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "River",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke wird vom ($x | Bridge_NP) �berspannt?", "was wird vom ($x | Bridge_NP) �berspannt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "144",
    "lexicalEntryUri" : "http://localhost:8080#to_�berspannen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "River",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#to_erfinden",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person erfand ($x | TelevisionShow_NP)?", "Welche dbo:Person hat ($x | TelevisionShow_NP) erfunden?", "Wieviel hat ($x | TelevisionShow_NP) erfunden?", "wer erfand ($x | TelevisionShow_NP)?", "wer erfinden ($x | TelevisionShow_NP)?", "wer hat ($x | TelevisionShow_NP) erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#to_erfinden",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fernsehsendung wird von ($x | Person_NP) erfunden?", "was wird von ($x | Person_NP) erfunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "147",
    "lexicalEntryUri" : "http://localhost:8080#to_erfinden",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "148",
    "lexicalEntryUri" : "http://localhost:8080#to_beeinflussen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person beeinflusste ($x | Person_NP)?", "Welche dbo:Person hat ($x | Person_NP) beeinflusst?", "Wieviel hat ($x | Person_NP) beeinflusst?", "wer beeinflussen ($x | Person_NP)?", "wer beeinflusste ($x | Person_NP)?", "wer hat ($x | Person_NP) beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "149",
    "lexicalEntryUri" : "http://localhost:8080#to_beeinflussen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von ($x | Person_NP) beeinflusst?", "wer wird von ($x | Person_NP) beeinflusst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#to_beeinflussen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirieren",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher K�nstler hat ($x | Artist_NP) insipriert?", "Welcher K�nstler inspirierte ($x | Artist_NP)?", "Wieviel hat ($x | Artist_NP) insipriert?", "wer hat ($x | Artist_NP) insipriert?", "wer inspirieren ($x | Artist_NP)?", "wer inspirierte ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "152",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirieren",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher K�nstler wird von ($x | Artist_NP) insipriert?", "wer wird von ($x | Artist_NP) insipriert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "153",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirieren",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "154",
    "lexicalEntryUri" : "http://localhost:8080#to_betreiben",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Startrampe betrieb ($x | LaunchPad_NP)?", "Welche Startrampe hat ($x | LaunchPad_NP) betrieben?", "Wieviel hat ($x | LaunchPad_NP) betrieben?", "wer betreiben ($x | LaunchPad_NP)?", "wer betrieb ($x | LaunchPad_NP)?", "wer hat ($x | LaunchPad_NP) betrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#to_betreiben",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Firma wird von ($x | Organisation_NP) betrieben?", "was wird von ($x | Organisation_NP) betrieben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#to_betreiben",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "157",
    "lexicalEntryUri" : "http://localhost:8080#to_besuchen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "University",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Universit�t besuchte ($x | Person_NP)?", "Welche Universit�t hat ($x | Person_NP) besucht?", "Wieviel hat ($x | Person_NP) besucht?", "wer besuchen ($x | Person_NP)?", "wer besuchte ($x | Person_NP)?", "wer hat ($x | Person_NP) besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "158",
    "lexicalEntryUri" : "http://localhost:8080#to_besuchen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wird von ($x | University_NP) besucht?", "wer wird von ($x | University_NP) besucht?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "159",
    "lexicalEntryUri" : "http://localhost:8080#to_besuchen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#to_gewinnen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Award",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Preis gewann ($x | Scientist_NP)?", "Welcher Preis hat ($x | Scientist_NP) gewonnen?", "Wieviel hat ($x | Scientist_NP) gewonnen?", "was gewann ($x | Scientist_NP)?", "was gewinnen ($x | Scientist_NP)?", "was hat ($x | Scientist_NP) gewonnen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#to_gewinnen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Wissenschaftlerin wird von ($x | Award_NP) gewonnen?", "wer wird von ($x | Award_NP) gewonnen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "162",
    "lexicalEntryUri" : "http://localhost:8080#to_gewinnen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "163",
    "lexicalEntryUri" : "http://localhost:8080#to_verlegen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person hat ($x | Work_NP) verlegt?", "Welche dbo:Person verlegte ($x | Work_NP)?", "Wieviel hat ($x | Work_NP) verlegt?", "wer hat ($x | Work_NP) verlegt?", "wer verlegen ($x | Work_NP)?", "wer verlegte ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "164",
    "lexicalEntryUri" : "http://localhost:8080#to_verlegen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Werk wird von ($x | Person_NP) verlegt?", "was wird von ($x | Person_NP) verlegt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#to_verlegen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#to_gr�nden_2",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Website",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Agent gr�ndete ($x | Website_NP)?", "Welcher Agent hat ($x | Website_NP) gegr�ndet?", "Wieviel hat ($x | Website_NP) gegr�ndet?", "wer gr�nden ($x | Website_NP)?", "wer gr�ndete ($x | Website_NP)?", "wer hat ($x | Website_NP) gegr�ndet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "167",
    "lexicalEntryUri" : "http://localhost:8080#to_gr�nden_2",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Website",
    "frameType" : "VP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Webseite wird von ($x | Agent_NP) gegr�ndet?", "was wird von ($x | Agent_NP) gegr�ndet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "168",
    "lexicalEntryUri" : "http://localhost:8080#to_gr�nden_2",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Website",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "169",
    "lexicalEntryUri" : "http://localhost:8080#beeinflussened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#beeinflussened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#entwerfened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "172",
    "lexicalEntryUri" : "http://localhost:8080#entwerfened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "173",
    "lexicalEntryUri" : "http://localhost:8080#nennened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "174",
    "lexicalEntryUri" : "http://localhost:8080#nennened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#drehened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#drehened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "177",
    "lexicalEntryUri" : "http://localhost:8080#ausdenkened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "178",
    "lexicalEntryUri" : "http://localhost:8080#ausdenkened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "179",
    "lexicalEntryUri" : "http://localhost:8080#Schreiben_2ed",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#Schreiben_2ed",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "181",
    "lexicalEntryUri" : "http://localhost:8080#spielened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "182",
    "lexicalEntryUri" : "http://localhost:8080#spielened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "183",
    "lexicalEntryUri" : "http://localhost:8080#gr�nden_1ed",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "184",
    "lexicalEntryUri" : "http://localhost:8080#gr�nden_1ed",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#erfindened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "186",
    "lexicalEntryUri" : "http://localhost:8080#erfindened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "187",
    "lexicalEntryUri" : "http://localhost:8080#Schreiben_3ed",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "188",
    "lexicalEntryUri" : "http://localhost:8080#Schreiben_3ed",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "189",
    "lexicalEntryUri" : "http://localhost:8080#Schreiben_5ed",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#Schreiben_5ed",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "191",
    "lexicalEntryUri" : "http://localhost:8080#entdeckened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "192",
    "lexicalEntryUri" : "http://localhost:8080#entdeckened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "193",
    "lexicalEntryUri" : "http://localhost:8080#kostened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "194",
    "lexicalEntryUri" : "http://localhost:8080#kostened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#gewinnened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "196",
    "lexicalEntryUri" : "http://localhost:8080#gewinnened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "197",
    "lexicalEntryUri" : "http://localhost:8080#verlegened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "198",
    "lexicalEntryUri" : "http://localhost:8080#verlegened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "199",
    "lexicalEntryUri" : "http://localhost:8080#betreibened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#betreibened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "LaunchPad",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "201",
    "lexicalEntryUri" : "http://localhost:8080#komponierened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "202",
    "lexicalEntryUri" : "http://localhost:8080#komponierened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "203",
    "lexicalEntryUri" : "http://localhost:8080#entwickelned",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#entwickelned",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Software",
    "returnType" : "Organisation",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#heiratened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "206",
    "lexicalEntryUri" : "http://localhost:8080#heiratened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "207",
    "lexicalEntryUri" : "http://localhost:8080#�berspannened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "208",
    "lexicalEntryUri" : "http://localhost:8080#�berspannened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#besteigened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#besteigened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Mountain",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "211",
    "lexicalEntryUri" : "http://localhost:8080#gr�nden_2ed",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Website",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "212",
    "lexicalEntryUri" : "http://localhost:8080#gr�nden_2ed",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Website",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "213",
    "lexicalEntryUri" : "http://localhost:8080#Schreiben_1ed",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "214",
    "lexicalEntryUri" : "http://localhost:8080#Schreiben_1ed",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#moderateed",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "216",
    "lexicalEntryUri" : "http://localhost:8080#moderateed",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "217",
    "lexicalEntryUri" : "http://localhost:8080#inspirierened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#inspirierened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "219",
    "lexicalEntryUri" : "http://localhost:8080#malened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "220",
    "lexicalEntryUri" : "http://localhost:8080#malened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "221",
    "lexicalEntryUri" : "http://localhost:8080#besuchened",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "222",
    "lexicalEntryUri" : "http://localhost:8080#besuchened",
    "language" : "DE",
    "type" : "NP",
    "bindingType" : "University",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#befinden",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "in Welche Stadt befindet ($x | Food_NP)?", "in Welche Stadt ist ($x | Food_NP) befunden?", "in was befindet ($x | Food_NP)?", "in was ist ($x | Food_NP) befunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locationCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "224",
    "lexicalEntryUri" : "http://localhost:8080#befinden",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Food",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Essen befinden in ($x | City_NP)?", "Welches Essen befinden in ($x | City_NP)?", "was befinden in ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locationCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "225",
    "lexicalEntryUri" : "http://localhost:8080#ausstellen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Artwork",
    "returnType" : "Museum",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "in Welches Museum ist ($x | Artwork_NP) ausgestellt?", "in Welches Museum stellt ($x | Artwork_NP) aus?", "in Welches Museum stellte ($x | Artwork_NP) aus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "226",
    "lexicalEntryUri" : "http://localhost:8080#ausstellen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "was stellte in ($x | Museum_NP) aus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#Storben_in",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde ($x | Person_NP) gestorben?", "in Welche Stadt ist ($x | Person_NP) gestorben?", "in Welche Stadt stirbt ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "228",
    "lexicalEntryUri" : "http://localhost:8080#Storben_in",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wurde in ($x | City_NP) gestorben?", "wer ist in ($x | City_NP) gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "229",
    "lexicalEntryUri" : "http://localhost:8080#storben_an",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "an  - ist ($x | Person_NP) gestorben?", "an  - stirbt ($x | Person_NP)?", "an was ist ($x | Person_NP) gestorben?", "an was stirbt ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "230",
    "lexicalEntryUri" : "http://localhost:8080#storben_an",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Personen sterben an ($x | THING_NP)?", "Welche dbo:Person sterben an ($x | THING_NP)?", "wer sterben an ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#geborn_on_2",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist ($x | Person_NP) geboren?", "Wann wurde ($x | Person_NP) geboren?", "in Welchem Datum wurde ($x | Person_NP) geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#geborn_on_2",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wurde ($x | date_NP) geboren?", "wer ist in ($x | date_NP) geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "233",
    "lexicalEntryUri" : "http://localhost:8080#entspringen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Country",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "in Welches Land entspringt ($x | River_NP)?", "in Welches Land ist ($x | River_NP) entsprungen?", "in was entspringt ($x | River_NP)?", "in was ist ($x | River_NP) entsprungen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "234",
    "lexicalEntryUri" : "http://localhost:8080#entspringen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fl�sse entspringen in ($x | Country_NP)?", "Welcher Fluss entspringen in ($x | Country_NP)?", "was entspringen in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/sourceCountry> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "235",
    "lexicalEntryUri" : "http://localhost:8080#sprechen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wieviele Sprachen werden in ($x | Country_NP) gesprochen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#sprechen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Country",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#�berspannen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "BodyOfWater",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "in Welcher Fluss ist ($x | Bridge_NP) �berspannt?", "in Welcher Fluss �berspannt ($x | Bridge_NP)?", "in was ist ($x | Bridge_NP) �berspannt?", "in was �berspannt ($x | Bridge_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "238",
    "lexicalEntryUri" : "http://localhost:8080#�berspannen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "BodyOfWater",
    "returnType" : "Bridge",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Br�cke �berspannen in ($x | BodyOfWater_NP)?", "Welche Br�cken �berspannen in ($x | BodyOfWater_NP)?", "was �berspannen in ($x | BodyOfWater_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "239",
    "lexicalEntryUri" : "http://localhost:8080#durchf�hren",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann f�hrte ($x | MilitaryConflict_NP) durch?", "Wann wurde ($x | MilitaryConflict_NP) durchgef�hrt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "240",
    "lexicalEntryUri" : "http://localhost:8080#durchf�hren",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welcher Milit�rKonflikt wurde am ($x | date_NP) durchgef�hrt?", "was wurde am ($x | date_NP) durchgef�hrt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#aufh�ren",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Road",
    "returnType" : "Location",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "in Welche Lage h�rt ($x | Road_NP) auf?", "in Welche Lage h�rte ($x | Road_NP) auf?", "in Welche Lage ist ($x | Road_NP) aufgeh�rt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#aufh�ren",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Road",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "was h�rte in ($x | Location_NP) auf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "243",
    "lexicalEntryUri" : "http://localhost:8080#fertigstellen_in",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann stellte ($x | Ship_NP) fertig?", "Wann wurde ($x | Ship_NP) fertiggestellt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "244",
    "lexicalEntryUri" : "http://localhost:8080#fertigstellen_in",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Ship",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welches Schiff wurde in ($x | date_NP) fertiggestellt?", "was wurde in ($x | date_NP) fertiggestellt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/buildingEndDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#geborn_on_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde ($x | Person_NP) geboren?", "in Welche Lage geb�rt ($x | Person_NP)?", "in Welche Lage ist ($x | Person_NP) geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#geborn_on_1",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wurde in ($x | Place_NP) geboren?", "wer ist in ($x | Place_NP) geboren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "247",
    "lexicalEntryUri" : "http://localhost:8080#wohnen_in",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo wurde ($x | Person_NP) gewohnt?", "in Welche Stadt ist ($x | Person_NP) gewohnt?", "in Welche Stadt wohnt ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "248",
    "lexicalEntryUri" : "http://localhost:8080#wohnen_in",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wurde in ($x | City_NP) gewohnt?", "wer ist in ($x | City_NP) gewohnt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "249",
    "lexicalEntryUri" : "http://localhost:8080#Storben_am",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann ist ($x | Person_NP) gestorben?", "Wann wurde ($x | Person_NP) gestorben?", "am Welchem Datum wurde ($x | Person_NP) gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#Storben_am",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche dbo:Person wurde ($x | date_NP) gestorben?", "wer ist am ($x | date_NP) gestorben?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "251",
    "lexicalEntryUri" : "http://localhost:8080#fliessen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "durch Welche Stadt flie�t ($x | River_NP)?", "durch Welche Stadt ist ($x | River_NP) geflossen?", "durch was flie�t ($x | River_NP)?", "durch was ist ($x | River_NP) geflossen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "252",
    "lexicalEntryUri" : "http://localhost:8080#fliessen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "River",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Fl�sse flie�en durch ($x | City_NP)?", "Welcher Fluss flie�en durch ($x | City_NP)?", "was flie�en durch ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "253",
    "lexicalEntryUri" : "http://localhost:8080#schreiben_in",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Language",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "in Welche Sprache ist ($x | Software_NP) geschrieben?", "in Welche Sprache schreibt ($x | Software_NP)?", "in was ist ($x | Software_NP) geschrieben?", "in was schreibt ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "254",
    "lexicalEntryUri" : "http://localhost:8080#schreiben_in",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Software",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Software schreiben in ($x | Language_NP)?", "was schreiben in ($x | Language_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "255",
    "lexicalEntryUri" : "http://localhost:8080#Stattfinden",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Event",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wann fand ($x | Event_NP) statt?", "Wann wurde ($x | Event_NP) stattgefunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "256",
    "lexicalEntryUri" : "http://localhost:8080#Stattfinden",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Event",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Welche Veranstaltung wurde am ($x | date_NP) stattgefunden?", "was wurde am ($x | date_NP) stattgefunden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "257",
    "lexicalEntryUri" : "http://localhost:8080#anfangen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Road",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "was fing  ($x | City_NP) an?", "was f�ngt  ($x | City_NP) an?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "258",
    "lexicalEntryUri" : "http://localhost:8080#anfangen",
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Road",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Wo fing ($x | City_NP) an?", "Wo f�ngt ($x | City_NP) an?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "259",
    "lexicalEntryUri" : null,
    "language" : "DE",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Location",
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  } ]
}