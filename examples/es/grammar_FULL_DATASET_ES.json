{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos lugar de fallecimiento de ($x | Person_NP) ", "Dame todos lugares de fallecimiento de ($x | Person_NP) ", "Dame una lista lugar de fallecimiento de ($x | Person_NP) ", "Dame una lista lugares de fallecimiento de ($x | Person_NP) ", "¿Cual era lugar de fallecimiento de ($x | Person_NP)? ", "¿Cual eran lugares de fallecimiento de ($x | Person_NP)? ", "¿Cual es lugar de fallecimiento de ($x | Person_NP)? ", "¿Cual son lugares de fallecimiento de ($x | Person_NP)? ", "¿Qué lugar de fallecimiento tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "2",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Person_NP)? ", "son ($x | THING_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Person_NP)? ", "son ($x | THING_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#spitzname",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos apodo de ($x | City_NP) ", "Dame todos apodos de ($x | City_NP) ", "Dame una lista apodo de ($x | City_NP) ", "Dame una lista apodos de ($x | City_NP) ", "¿Cual era apodo de ($x | City_NP)? ", "¿Cual eran apodos de ($x | City_NP)? ", "¿Cual es apodo de ($x | City_NP)? ", "¿Cual son apodos de ($x | City_NP)? ", "¿Qué apodo tiene ($x | City_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#spitzname",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | City_NP)? ", "son ($x | THING_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#spitzname",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | City_NP)? ", "son ($x | THING_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#Partei",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos partido de ($x | Politician_NP) ", "Dame todos partidos de ($x | Politician_NP) ", "Dame una lista partido de ($x | Politician_NP) ", "Dame una lista partidos de ($x | Politician_NP) ", "¿Cual era partido de ($x | Politician_NP)? ", "¿Cual eran partidos de ($x | Politician_NP)? ", "¿Cual es partido de ($x | Politician_NP)? ", "¿Cual son partidos de ($x | Politician_NP)? ", "¿Qué partido tiene ($x | Politician_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#Partei",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Politician_NP)? ", "son ($x | THING_NP)   de ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#Partei",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Politician_NP)? ", "son ($x | THING_NP)   de ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#richtiger",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos verdadero nombre de ($x | FictionalCharacter_NP) ", "Dame todos verdaderos nombres de ($x | FictionalCharacter_NP) ", "Dame una lista verdadero nombre de ($x | FictionalCharacter_NP) ", "Dame una lista verdaderos nombres de ($x | FictionalCharacter_NP) ", "¿Cual era verdadero nombre de ($x | FictionalCharacter_NP)? ", "¿Cual eran verdaderos nombres de ($x | FictionalCharacter_NP)? ", "¿Cual es verdadero nombre de ($x | FictionalCharacter_NP)? ", "¿Cual son verdaderos nombres de ($x | FictionalCharacter_NP)? ", "¿Qué verdadero nombre tiene ($x | FictionalCharacter_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#richtiger",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | FictionalCharacter_NP)? ", "son ($x | THING_NP)   de ($x | FictionalCharacter_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#richtiger",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | FictionalCharacter_NP)? ", "son ($x | THING_NP)   de ($x | FictionalCharacter_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#ciudad_m�s_grande",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos ciudad m�s grande de ($x | Country_NP) ", "Dame todos ciudades m�s grandes de ($x | Country_NP) ", "Dame una lista ciudad m�s grande de ($x | Country_NP) ", "Dame una lista ciudades m�s grandes de ($x | Country_NP) ", "¿Cual era ciudad m�s grande de ($x | Country_NP)? ", "¿Cual eran ciudades m�s grandes de ($x | Country_NP)? ", "¿Cual es ciudad m�s grande de ($x | Country_NP)? ", "¿Cual son ciudades m�s grandes de ($x | Country_NP)? ", "¿Qué ciudad m�s grande tiene ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#ciudad_m�s_grande",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | City_NP)   de ($x | Country_NP)? ", "son ($x | City_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#ciudad_m�s_grande",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | City_NP)   de ($x | Country_NP)? ", "son ($x | City_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#sohn",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos hijo de ($x | Person_NP) ", "Dame todos hijos de ($x | Person_NP) ", "Dame una lista hijo de ($x | Person_NP) ", "Dame una lista hijos de ($x | Person_NP) ", "¿Quién era hijo de ($x | Person_NP)? ", "¿Quién eran hijos de ($x | Person_NP)? ", "¿Quién es hijo de ($x | Person_NP)? ", "¿Quién son hijos de ($x | Person_NP)? ", "¿Qué hijo tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#sohn",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#sohn",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#hijo_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos hijo de ($x | Person_NP) ", "Dame todos hijos de ($x | Person_NP) ", "Dame una lista hijo de ($x | Person_NP) ", "Dame una lista hijos de ($x | Person_NP) ", "¿Quién era hijo de ($x | Person_NP)? ", "¿Quién eran hijos de ($x | Person_NP)? ", "¿Quién es hijo de ($x | Person_NP)? ", "¿Quién son hijos de ($x | Person_NP)? ", "¿Qué hijo tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#hijo_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#hijo_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#c�digo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos c�digo de �rea de ($x | Place_NP) ", "Dame todos c�digos de �rea de ($x | Place_NP) ", "Dame una lista c�digo de �rea de ($x | Place_NP) ", "Dame una lista c�digos de �rea de ($x | Place_NP) ", "¿Cual era c�digo de �rea de ($x | Place_NP)? ", "¿Cual eran c�digos de �rea de ($x | Place_NP)? ", "¿Cual es c�digo de �rea de ($x | Place_NP)? ", "¿Cual son c�digos de �rea de ($x | Place_NP)? ", "¿Qué c�digo de �rea tiene ($x | Place_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#c�digo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Place_NP)? ", "son ($x | THING_NP)   de ($x | Place_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#c�digo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Place_NP)? ", "son ($x | THING_NP)   de ($x | Place_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos vicepresidente de ($x | Person_NP) ", "Dame todos vicepresidentes de ($x | Person_NP) ", "Dame una lista vicepresidente de ($x | Person_NP) ", "Dame una lista vicepresidentes de ($x | Person_NP) ", "¿Cual era vicepresidente de ($x | Person_NP)? ", "¿Cual eran vicepresidentes de ($x | Person_NP)? ", "¿Cual es vicepresidente de ($x | Person_NP)? ", "¿Cual son vicepresidentes de ($x | Person_NP)? ", "¿Qué vicepresidente tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "26",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Country_NP)   de ($x | Person_NP)? ", "son ($x | Country_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Country_NP)   de ($x | Person_NP)? ", "son ($x | Country_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#capital",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos capital de ($x | Country_NP) ", "Dame todos capitales de ($x | Country_NP) ", "Dame una lista capital de ($x | Country_NP) ", "Dame una lista capitales de ($x | Country_NP) ", "¿Cual era capital de ($x | Country_NP)? ", "¿Cual eran capitales de ($x | Country_NP)? ", "¿Cual es capital de ($x | Country_NP)? ", "¿Cual son capitales de ($x | Country_NP)? ", "¿Qué capital tiene ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "29",
    "lexicalEntryUri" : "http://localhost:8080#capital",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | City_NP)   de ($x | Country_NP)? ", "son ($x | City_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "30",
    "lexicalEntryUri" : "http://localhost:8080#capital",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | City_NP)   de ($x | Country_NP)? ", "son ($x | City_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#m�sica",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos musicales de ($x | Person_NP) ", "Dame todos m�sica de ($x | Person_NP) ", "Dame una lista musicales de ($x | Person_NP) ", "Dame una lista m�sica de ($x | Person_NP) ", "¿Cual era m�sica de ($x | Person_NP)? ", "¿Cual eran musicales de ($x | Person_NP)? ", "¿Cual es m�sica de ($x | Person_NP)? ", "¿Cual son musicales de ($x | Person_NP)? ", "¿Qué m�sica tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#m�sica",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Musical_NP)   de ($x | Person_NP)? ", "son ($x | Musical_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#m�sica",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Musical_NP)   de ($x | Person_NP)? ", "son ($x | Musical_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "34",
    "lexicalEntryUri" : "http://localhost:8080#doctorado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos supervisor de doctorado de ($x | Person_NP) ", "Dame todos supervisores de doctorado de ($x | Person_NP) ", "Dame una lista supervisor de doctorado de ($x | Person_NP) ", "Dame una lista supervisores de doctorado de ($x | Person_NP) ", "¿Quién era supervisor de doctorado de ($x | Person_NP)? ", "¿Quién eran supervisores de doctorado de ($x | Person_NP)? ", "¿Quién es supervisor de doctorado de ($x | Person_NP)? ", "¿Quién son supervisores de doctorado de ($x | Person_NP)? ", "¿Qué supervisor de doctorado tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "35",
    "lexicalEntryUri" : "http://localhost:8080#doctorado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#doctorado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#gobierno",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos forma de gobierno de ($x | Country_NP) ", "Dame todos forma de gobiernos de ($x | Country_NP) ", "Dame una lista forma de gobierno de ($x | Country_NP) ", "Dame una lista forma de gobiernos de ($x | Country_NP) ", "¿Cual era forma de gobierno de ($x | Country_NP)? ", "¿Cual eran forma de gobiernos de ($x | Country_NP)? ", "¿Cual es forma de gobierno de ($x | Country_NP)? ", "¿Cual son forma de gobiernos de ($x | Country_NP)? ", "¿Qué forma de gobierno tiene ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#gobierno",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | GovernmentType_NP)   de ($x | Country_NP)? ", "son ($x | GovernmentType_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "39",
    "lexicalEntryUri" : "http://localhost:8080#gobierno",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | GovernmentType_NP)   de ($x | Country_NP)? ", "son ($x | GovernmentType_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "40",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos zona horaria de ($x | City_NP) ", "Dame todos zonas horarias de ($x | City_NP) ", "Dame una lista zona horaria de ($x | City_NP) ", "Dame una lista zonas horarias de ($x | City_NP) ", "¿Cual era zona horaria de ($x | City_NP)? ", "¿Cual eran zonas horarias de ($x | City_NP)? ", "¿Cual es zona horaria de ($x | City_NP)? ", "¿Cual son zonas horarias de ($x | City_NP)? ", "¿Qué zona horaria tiene ($x | City_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/timezone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | City_NP)? ", "son ($x | THING_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/timezone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | City_NP)? ", "son ($x | THING_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/timezone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#Enkel",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos nieto de ($x | Person_NP) ", "Dame todos nietos de ($x | Person_NP) ", "Dame una lista nieto de ($x | Person_NP) ", "Dame una lista nietos de ($x | Person_NP) ", "¿Quién era nieto de ($x | Person_NP)? ", "¿Quién eran nietos de ($x | Person_NP)? ", "¿Quién es nieto de ($x | Person_NP)? ", "¿Quién son nietos de ($x | Person_NP)? ", "¿Qué nieto tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "44",
    "lexicalEntryUri" : "http://localhost:8080#Enkel",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "45",
    "lexicalEntryUri" : "http://localhost:8080#Enkel",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#idioma_oficial_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos idioma oficial de ($x | Country_NP) ", "Dame todos idiomas oficiales de ($x | Country_NP) ", "Dame una lista idioma oficial de ($x | Country_NP) ", "Dame una lista idiomas oficiales de ($x | Country_NP) ", "¿Cual era idioma oficial de ($x | Country_NP)? ", "¿Cual eran idiomas oficiales de ($x | Country_NP)? ", "¿Cual es idioma oficial de ($x | Country_NP)? ", "¿Cual son idiomas oficiales de ($x | Country_NP)? ", "¿Qué idioma oficial tiene ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#idioma_oficial_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Language_NP)   de ($x | Country_NP)? ", "son ($x | Language_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#idioma_oficial_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Language_NP)   de ($x | Country_NP)? ", "son ($x | Language_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "49",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos vicepresidente bajo ($x | Politician_NP) ", "Dame todos vicepresidentes bajo ($x | Politician_NP) ", "Dame una lista vicepresidente bajo ($x | Politician_NP) ", "Dame una lista vicepresidentes bajo ($x | Politician_NP) ", "¿Quién era vicepresidente bajo ($x | Politician_NP)? ", "¿Quién eran vicepresidentes bajo ($x | Politician_NP)? ", "¿Quién es vicepresidente bajo ($x | Politician_NP)? ", "¿Quién son vicepresidentes bajo ($x | Politician_NP)? ", "¿Qué vicepresidente tiene ($x | Politician_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "50",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   bajo ($x | Politician_NP)? ", "son ($x | Person_NP)   bajo ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   bajo ($x | Politician_NP)? ", "son ($x | Person_NP)   bajo ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos alcalde de ($x | City_NP) ", "Dame todos alcaldes de ($x | City_NP) ", "Dame una lista alcalde de ($x | City_NP) ", "Dame una lista alcaldes de ($x | City_NP) ", "¿Quién era alcalde de ($x | City_NP)? ", "¿Quién eran alcaldes de ($x | City_NP)? ", "¿Quién es alcalde de ($x | City_NP)? ", "¿Quién son alcaldes de ($x | City_NP)? ", "¿Qué alcalde tiene ($x | City_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | City_NP)? ", "son ($x | Person_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "54",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | City_NP)? ", "son ($x | Person_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "55",
    "lexicalEntryUri" : "http://localhost:8080#padre_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos padre de ($x | Person_NP) ", "Dame todos padres de ($x | Person_NP) ", "Dame una lista padre de ($x | Person_NP) ", "Dame una lista padres de ($x | Person_NP) ", "¿Quién era padre de ($x | Person_NP)? ", "¿Quién eran padres de ($x | Person_NP)? ", "¿Quién es padre de ($x | Person_NP)? ", "¿Quién son padres de ($x | Person_NP)? ", "¿Qué padre tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#padre_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#padre_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#sucesor",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos sucesor de ($x | Politician_NP) ", "Dame todos sucesores de ($x | Politician_NP) ", "Dame una lista sucesor de ($x | Politician_NP) ", "Dame una lista sucesores de ($x | Politician_NP) ", "¿Quién era sucesor de ($x | Politician_NP)? ", "¿Quién eran sucesores de ($x | Politician_NP)? ", "¿Quién es sucesor de ($x | Politician_NP)? ", "¿Quién son sucesores de ($x | Politician_NP)? ", "¿Qué sucesor tiene ($x | Politician_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "59",
    "lexicalEntryUri" : "http://localhost:8080#sucesor",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Politician_NP)? ", "son ($x | Person_NP)   de ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "60",
    "lexicalEntryUri" : "http://localhost:8080#sucesor",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Politician_NP)? ", "son ($x | Person_NP)   de ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#mujer",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos mujer de ($x | Person_NP) ", "Dame todos mujeres de ($x | Person_NP) ", "Dame una lista mujer de ($x | Person_NP) ", "Dame una lista mujeres de ($x | Person_NP) ", "¿Quién era mujer de ($x | Person_NP)? ", "¿Quién eran mujeres de ($x | Person_NP)? ", "¿Quién es mujer de ($x | Person_NP)? ", "¿Quién son mujeres de ($x | Person_NP)? ", "¿Qué mujer tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#mujer",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#mujer",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "64",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos alcalde de ($x | City_NP) ", "Dame todos alcaldes de ($x | City_NP) ", "Dame una lista alcalde de ($x | City_NP) ", "Dame una lista alcaldes de ($x | City_NP) ", "¿Quién era alcalde de ($x | City_NP)? ", "¿Quién eran alcaldes de ($x | City_NP)? ", "¿Quién es alcalde de ($x | City_NP)? ", "¿Quién son alcaldes de ($x | City_NP)? ", "¿Qué alcalde tiene ($x | City_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | City_NP)? ", "son ($x | Person_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | City_NP)? ", "son ($x | Person_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#padre_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos padre de ($x | Person_NP) ", "Dame todos padres de ($x | Person_NP) ", "Dame una lista padre de ($x | Person_NP) ", "Dame una lista padres de ($x | Person_NP) ", "¿Quién era padre de ($x | Person_NP)? ", "¿Quién eran padres de ($x | Person_NP)? ", "¿Quién es padre de ($x | Person_NP)? ", "¿Quién son padres de ($x | Person_NP)? ", "¿Qué padre tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "68",
    "lexicalEntryUri" : "http://localhost:8080#padre_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "69",
    "lexicalEntryUri" : "http://localhost:8080#padre_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#miembro",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos miembro de ($x | Band_NP) ", "Dame todos miembros de ($x | Band_NP) ", "Dame una lista miembro de ($x | Band_NP) ", "Dame una lista miembros de ($x | Band_NP) ", "¿Quién era miembro de ($x | Band_NP)? ", "¿Quién eran miembros de ($x | Band_NP)? ", "¿Quién es miembro de ($x | Band_NP)? ", "¿Quién son miembros de ($x | Band_NP)? ", "¿Qué miembro tiene ($x | Band_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#miembro",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Band_NP)? ", "son ($x | Person_NP)   de ($x | Band_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#miembro",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Band_NP)? ", "son ($x | Person_NP)   de ($x | Band_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#fundador_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos fundador de ($x | Publisher_NP) ", "Dame una lista fundador de ($x | Publisher_NP) ", "¿Quién era fundador de ($x | Publisher_NP)? ", "¿Quién eran fundador de ($x | Publisher_NP)? ", "¿Quién es fundador de ($x | Publisher_NP)? ", "¿Quién son fundador de ($x | Publisher_NP)? ", "¿Qué fundador tiene ($x | Publisher_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "74",
    "lexicalEntryUri" : "http://localhost:8080#fundador_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Publisher_NP)? ", "son ($x | Person_NP)   de ($x | Publisher_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#fundador_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Publisher_NP)? ", "son ($x | Person_NP)   de ($x | Publisher_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#tocher",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos hija de ($x | Person_NP) ", "Dame todos hijas de ($x | Person_NP) ", "Dame una lista hija de ($x | Person_NP) ", "Dame una lista hijas de ($x | Person_NP) ", "¿Quién era hija de ($x | Person_NP)? ", "¿Quién eran hijas de ($x | Person_NP)? ", "¿Quién es hija de ($x | Person_NP)? ", "¿Quién son hijas de ($x | Person_NP)? ", "¿Qué hija tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#tocher",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#tocher",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "79",
    "lexicalEntryUri" : "http://localhost:8080#moneda",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos moneda de ($x | Country_NP) ", "Dame todos monedas de ($x | Country_NP) ", "Dame una lista moneda de ($x | Country_NP) ", "Dame una lista monedas de ($x | Country_NP) ", "¿Cual era moneda de ($x | Country_NP)? ", "¿Cual eran monedas de ($x | Country_NP)? ", "¿Cual es moneda de ($x | Country_NP)? ", "¿Cual son monedas de ($x | Country_NP)? ", "¿Qué moneda tiene ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#moneda",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Currency_NP)   de ($x | Country_NP)? ", "son ($x | Currency_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#moneda",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Currency_NP)   de ($x | Country_NP)? ", "son ($x | Currency_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#juegos",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos juego de ($x | Publisher_NP) ", "Dame todos juegos de ($x | Publisher_NP) ", "Dame una lista juego de ($x | Publisher_NP) ", "Dame una lista juegos de ($x | Publisher_NP) ", "¿Cual era juego de ($x | Publisher_NP)? ", "¿Cual eran juegos de ($x | Publisher_NP)? ", "¿Cual es juego de ($x | Publisher_NP)? ", "¿Cual son juegos de ($x | Publisher_NP)? ", "¿Qué juego tiene ($x | Publisher_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "83",
    "lexicalEntryUri" : "http://localhost:8080#juegos",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | VideoGame_NP)   de ($x | Publisher_NP)? ", "son ($x | VideoGame_NP)   de ($x | Publisher_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "84",
    "lexicalEntryUri" : "http://localhost:8080#juegos",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | VideoGame_NP)   de ($x | Publisher_NP)? ", "son ($x | VideoGame_NP)   de ($x | Publisher_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#lugar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos lugar de nacimiento de ($x | Person_NP) ", "Dame todos lugares de nacimiento de ($x | Person_NP) ", "Dame una lista lugar de nacimiento de ($x | Person_NP) ", "Dame una lista lugares de nacimiento de ($x | Person_NP) ", "¿Cual era lugar de nacimiento de ($x | Person_NP)? ", "¿Cual eran lugares de nacimiento de ($x | Person_NP)? ", "¿Cual es lugar de nacimiento de ($x | Person_NP)? ", "¿Cual son lugares de nacimiento de ($x | Person_NP)? ", "¿Qué lugar de nacimiento tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#lugar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Place_NP)   de ($x | Person_NP)? ", "son ($x | Place_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#lugar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Place_NP)   de ($x | Person_NP)? ", "son ($x | Place_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "88",
    "lexicalEntryUri" : "http://localhost:8080#anfitri�n_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos anfitri�n de ($x | TelevisionShow_NP) ", "Dame una lista anfitri�n de ($x | TelevisionShow_NP) ", "¿Quién era anfitri�n de ($x | TelevisionShow_NP)? ", "¿Quién eran anfitri�n de ($x | TelevisionShow_NP)? ", "¿Quién es anfitri�n de ($x | TelevisionShow_NP)? ", "¿Quién son anfitri�n de ($x | TelevisionShow_NP)? ", "¿Qué anfitri�n tiene ($x | TelevisionShow_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "89",
    "lexicalEntryUri" : "http://localhost:8080#anfitri�n_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | TelevisionShow_NP)? ", "son ($x | Person_NP)   de ($x | TelevisionShow_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#anfitri�n_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | TelevisionShow_NP)? ", "son ($x | Person_NP)   de ($x | TelevisionShow_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#desarrollo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos desarrolladores de ($x | Software_NP) ", "Dame todos desarrollo de ($x | Software_NP) ", "Dame una lista desarrolladores de ($x | Software_NP) ", "Dame una lista desarrollo de ($x | Software_NP) ", "¿Quién era desarrollo de ($x | Software_NP)? ", "¿Quién eran desarrolladores de ($x | Software_NP)? ", "¿Quién es desarrollo de ($x | Software_NP)? ", "¿Quién son desarrolladores de ($x | Software_NP)? ", "¿Qué desarrollo tiene ($x | Software_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "92",
    "lexicalEntryUri" : "http://localhost:8080#desarrollo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | University_NP)   de ($x | Software_NP)? ", "son ($x | University_NP)   de ($x | Software_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "93",
    "lexicalEntryUri" : "http://localhost:8080#desarrollo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | University_NP)   de ($x | Software_NP)? ", "son ($x | University_NP)   de ($x | Software_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "94",
    "lexicalEntryUri" : "http://localhost:8080#primero_en_ascender",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos primero_en_ascender de ($x | Mountain_NP) ", "Dame una lista primero_en_ascender de ($x | Mountain_NP) ", "¿Quién era primero_en_ascender de ($x | Mountain_NP)? ", "¿Quién eran primero_en_ascender de ($x | Mountain_NP)? ", "¿Quién es primero_en_ascender de ($x | Mountain_NP)? ", "¿Quién son primero_en_ascender de ($x | Mountain_NP)? ", "¿Qué primero_en_ascender tiene ($x | Mountain_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "95",
    "lexicalEntryUri" : "http://localhost:8080#primero_en_ascender",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Mountain_NP)? ", "son ($x | Person_NP)   de ($x | Mountain_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#primero_en_ascender",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Mountain_NP)? ", "son ($x | Person_NP)   de ($x | Mountain_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#videojuego",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos videojuego de ($x | Company_NP) ", "Dame todos videojuegos de ($x | Company_NP) ", "Dame una lista videojuego de ($x | Company_NP) ", "Dame una lista videojuegos de ($x | Company_NP) ", "¿Cual era videojuego de ($x | Company_NP)? ", "¿Cual eran videojuegos de ($x | Company_NP)? ", "¿Cual es videojuego de ($x | Company_NP)? ", "¿Cual son videojuegos de ($x | Company_NP)? ", "¿Qué videojuego tiene ($x | Company_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "98",
    "lexicalEntryUri" : "http://localhost:8080#videojuego",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | VideoGame_NP)   de ($x | Company_NP)? ", "son ($x | VideoGame_NP)   de ($x | Company_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "99",
    "lexicalEntryUri" : "http://localhost:8080#videojuego",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | VideoGame_NP)   de ($x | Company_NP)? ", "son ($x | VideoGame_NP)   de ($x | Company_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#to_ganar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Award",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos ganar qué hayan ganar ($x | Scientist_NP)", "¿Cual ganar ($x | Scientist_NP)?", "¿Cual gan� ($x | Scientist_NP)?", "¿En qué premio gan� ($x | Scientist_NP)?", "¿En qué premios ganar ($x | Scientist_NP)?", "¿Por qué premio gan� ($x | Scientist_NP)?", "¿Por qué premios ganar ($x | Scientist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#to_ganar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos cient�fico ganado por ($x | Award_NP)", "¿Qué cient�fico gan� ($x | Award_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#to_ganar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "103",
    "lexicalEntryUri" : "http://localhost:8080#to_publicar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos publicar qué hayan publicar ($x | Book_NP)", "¿En qué compa�ia public� ($x | Book_NP)?", "¿En qué compa�ias publicar ($x | Book_NP)?", "¿Por qué compa�ia public� ($x | Book_NP)?", "¿Por qué compa�ias publicar ($x | Book_NP)?", "¿Quién publicar ($x | Book_NP)?", "¿Quién public� ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "104",
    "lexicalEntryUri" : "http://localhost:8080#to_publicar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos persona publicado por ($x | Agent_NP)", "¿Qué persona public� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#to_publicar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Website",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos dise�ar qué hayan dise�ar ($x | Website_NP)", "¿En qué feminine dise�ar ($x | Website_NP)?", "¿En qué series televisivas dise�� ($x | Website_NP)?", "¿Por qué feminine dise�ar ($x | Website_NP)?", "¿Por qué series televisivas dise�� ($x | Website_NP)?", "¿Quién dise�ar ($x | Website_NP)?", "¿Quién dise�� ($x | Website_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "107",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos sitio web dise�ado por ($x | Person_NP)", "¿Qué sitio web dise�� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "108",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos dise�ar qué hayan dise�ar ($x | Bridge_NP)", "¿En qué feminine dise�ar ($x | Bridge_NP)?", "¿En qué series televisivas dise�� ($x | Bridge_NP)?", "¿Por qué feminine dise�ar ($x | Bridge_NP)?", "¿Por qué series televisivas dise�� ($x | Bridge_NP)?", "¿Quién dise�ar ($x | Bridge_NP)?", "¿Quién dise�� ($x | Bridge_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos puente dise�ado por ($x | Person_NP)", "¿Qué puente dise�� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "111",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "112",
    "lexicalEntryUri" : "http://localhost:8080#to_moderar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos moderar qué hayan moderar ($x | TelevisionShow_NP)", "¿En qué feminine moderar ($x | TelevisionShow_NP)?", "¿En qué series televisivas moder� ($x | TelevisionShow_NP)?", "¿Por qué feminine moderar ($x | TelevisionShow_NP)?", "¿Por qué series televisivas moder� ($x | TelevisionShow_NP)?", "¿Quién moderar ($x | TelevisionShow_NP)?", "¿Quién moder� ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#to_moderar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos feminine moderado por ($x | Person_NP)", "¿Qué feminine moder� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#to_moderar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "115",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos inspirar qué hayan inspirar ($x | Artist_NP)", "¿En qué artista inspir� ($x | Artist_NP)?", "¿En qué artistas inspirar ($x | Artist_NP)?", "¿Por qué artista inspir� ($x | Artist_NP)?", "¿Por qué artistas inspirar ($x | Artist_NP)?", "¿Quién eran artista que inspir� ($x | Artist_NP)?", "¿Quién inspirar ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "116",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos crear qué hayan crear ($x | TelevisionShow_NP)", "¿En qué compa�ia cre� ($x | TelevisionShow_NP)?", "¿En qué compa�ias crear ($x | TelevisionShow_NP)?", "¿Por qué compa�ia cre� ($x | TelevisionShow_NP)?", "¿Por qué compa�ias crear ($x | TelevisionShow_NP)?", "¿Quién crear ($x | TelevisionShow_NP)?", "¿Quién cre� ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "119",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos feminine creado por ($x | Agent_NP)", "¿Qué feminine cre� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "120",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "121",
    "lexicalEntryUri" : "http://localhost:8080#to_cruzar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "River",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos cruzar qué hayan cruzar ($x | Bridge_NP)", "¿Cual cruzar ($x | Bridge_NP)?", "¿Cual cruz� ($x | Bridge_NP)?", "¿En qué r�o cruz� ($x | Bridge_NP)?", "¿En qué r�os cruzar ($x | Bridge_NP)?", "¿Por qué r�o cruz� ($x | Bridge_NP)?", "¿Por qué r�os cruzar ($x | Bridge_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#to_cruzar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos puente cruzado por ($x | River_NP)", "¿Qué puente cruz� ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#to_cruzar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "124",
    "lexicalEntryUri" : "http://localhost:8080#to_compuso",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos compuso la banda sonora qué hayan compuso la banda sonora ($x | Film_NP)", "¿En qué feminine compuso la banda sonora ($x | Film_NP)?", "¿En qué series televisivas compuso la banda sonora ($x | Film_NP)?", "¿Por qué feminine compuso la banda sonora ($x | Film_NP)?", "¿Por qué series televisivas compuso la banda sonora ($x | Film_NP)?", "¿Quién compuso la banda sonora ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "125",
    "lexicalEntryUri" : "http://localhost:8080#to_compuso",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos pel�cula compuso la banda sonora von ($x | Person_NP)", "¿Qué pel�cula compuso la banda sonora ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#to_compuso",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos actuar qué hayan actuar ($x | FictionalCharacter_NP)", "¿En qué feminine actuar ($x | FictionalCharacter_NP)?", "¿En qué series televisivas act�o ($x | FictionalCharacter_NP)?", "¿Por qué feminine actuar ($x | FictionalCharacter_NP)?", "¿Por qué series televisivas act�o ($x | FictionalCharacter_NP)?", "¿Quién actuar ($x | FictionalCharacter_NP)?", "¿Quién eran series televisivas que act�o ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "128",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "129",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "130",
    "lexicalEntryUri" : "http://localhost:8080#to_actuado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos actuado qué hayan actuado ($x | Film_NP)", "¿En qué feminine actuado ($x | Film_NP)?", "¿En qué series televisivas actuado ($x | Film_NP)?", "¿Por qué feminine actuado ($x | Film_NP)?", "¿Por qué series televisivas actuado ($x | Film_NP)?", "¿Quién actuado ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#to_actuado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos pel�cula actuado por ($x | Person_NP)", "¿Qué pel�cula actuado ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#to_actuado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "133",
    "lexicalEntryUri" : "http://localhost:8080#to_operar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos operar qué hayan operar ($x | LaunchPad_NP)", "¿En qué organizaciones operar ($x | LaunchPad_NP)?", "¿En qué organizaci�n oper� ($x | LaunchPad_NP)?", "¿Por qué organizaciones operar ($x | LaunchPad_NP)?", "¿Por qué organizaci�n oper� ($x | LaunchPad_NP)?", "¿Quién operar ($x | LaunchPad_NP)?", "¿Quién oper� ($x | LaunchPad_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "134",
    "lexicalEntryUri" : "http://localhost:8080#to_operar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos plataforma de lanzamiento operado por ($x | Organisation_NP)", "¿Qué plataforma de lanzamiento oper� ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#to_operar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos interpreto qué hayan interpreto ($x | FictionalCharacter_NP)", "¿En qué feminine interpreto ($x | FictionalCharacter_NP)?", "¿En qué series televisivas interpreto ($x | FictionalCharacter_NP)?", "¿Por qué feminine interpreto ($x | FictionalCharacter_NP)?", "¿Por qué series televisivas interpreto ($x | FictionalCharacter_NP)?", "¿Quién eran series televisivas que interpreto ($x | FictionalCharacter_NP)?", "¿Quién interpreto ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "137",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "138",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "139",
    "lexicalEntryUri" : "http://localhost:8080#to_dirigir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos dirigir qué hayan dirigir ($x | Film_NP)", "¿En qué feminine dirigir ($x | Film_NP)?", "¿En qué series televisivas dirigi� ($x | Film_NP)?", "¿Por qué feminine dirigir ($x | Film_NP)?", "¿Por qué series televisivas dirigi� ($x | Film_NP)?", "¿Quién dirigir ($x | Film_NP)?", "¿Quién dirigi� ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#to_dirigir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos pel�cula dirigido por ($x | Person_NP)", "¿Qué pel�cula dirigi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#to_dirigir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "142",
    "lexicalEntryUri" : "http://localhost:8080#to_influenciar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos influenciar qué hayan influenciar ($x | Person_NP)", "¿En qué feminine influenciar ($x | Person_NP)?", "¿En qué series televisivas influenci� ($x | Person_NP)?", "¿Por qué feminine influenciar ($x | Person_NP)?", "¿Por qué series televisivas influenci� ($x | Person_NP)?", "¿Quién eran series televisivas que influenci� ($x | Person_NP)?", "¿Quién influenciar ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "143",
    "lexicalEntryUri" : "http://localhost:8080#to_influenciar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "144",
    "lexicalEntryUri" : "http://localhost:8080#to_influenciar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos ide� qué hayan ide� ($x | TelevisionShow_NP)", "¿En qué feminine ide� ($x | TelevisionShow_NP)?", "¿En qué series televisivas ide� ($x | TelevisionShow_NP)?", "¿Por qué feminine ide� ($x | TelevisionShow_NP)?", "¿Por qué series televisivas ide� ($x | TelevisionShow_NP)?", "¿Quién ide� ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos feminine ide� por ($x | Person_NP)", "¿Qué feminine ide� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "147",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "148",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos escribir qué hayan escribir ($x | TelevisionShow_NP)", "¿En qué feminine escribir ($x | TelevisionShow_NP)?", "¿En qué series televisivas escribi� ($x | TelevisionShow_NP)?", "¿Por qué feminine escribir ($x | TelevisionShow_NP)?", "¿Por qué series televisivas escribi� ($x | TelevisionShow_NP)?", "¿Quién escribir ($x | TelevisionShow_NP)?", "¿Quién escribi� ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "149",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos feminine escrito por ($x | Person_NP)", "¿Qué feminine escribi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#to_fundar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Pope",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos fundar qué hayan fundar ($x | Agent_NP)", "¿En qué Papa fund� ($x | Agent_NP)?", "¿En qué Papas fundar ($x | Agent_NP)?", "¿Por qué Papa fund� ($x | Agent_NP)?", "¿Por qué Papas fundar ($x | Agent_NP)?", "¿Quién eran Papa que fund� ($x | Agent_NP)?", "¿Quién fundar ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "152",
    "lexicalEntryUri" : "http://localhost:8080#to_fundar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "153",
    "lexicalEntryUri" : "http://localhost:8080#to_fundar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "154",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Colour",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos expresar qué hayan expresar ($x | Colour_NP)", "¿Cual expresar ($x | Colour_NP)?", "¿Cual expres� ($x | Colour_NP)?", "¿En qué - expresar ($x | Colour_NP)?", "¿En qué - expres� ($x | Colour_NP)?", "¿Por qué - expresar ($x | Colour_NP)?", "¿Por qué - expres� ($x | Colour_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos color expresado por ($x | THING_NP)", "¿Qué color expres� ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "157",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Colour",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos expresar qué hayan expresar ($x | Colour_NP)", "¿Cual expresar ($x | Colour_NP)?", "¿Cual expres� ($x | Colour_NP)?", "¿En qué - expresar ($x | Colour_NP)?", "¿En qué - expres� ($x | Colour_NP)?", "¿Por qué - expresar ($x | Colour_NP)?", "¿Por qué - expres� ($x | Colour_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "158",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos color expresado por ($x | THING_NP)", "¿Qué color expres� ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "159",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Planet",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos descubrir qué hayan descubrir ($x | Planet_NP)", "¿En qué feminine descubrir ($x | Planet_NP)?", "¿En qué series televisivas descubri� ($x | Planet_NP)?", "¿Por qué feminine descubrir ($x | Planet_NP)?", "¿Por qué series televisivas descubri� ($x | Planet_NP)?", "¿Quién descubrir ($x | Planet_NP)?", "¿Quién descubri� ($x | Planet_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Planet",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos planeta descubierto por ($x | Person_NP)", "¿Qué planeta descubri� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "162",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Planet",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "163",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "CelestialBody",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos descubrir qué hayan descubrir ($x | CelestialBody_NP)", "¿En qué feminine descubrir ($x | CelestialBody_NP)?", "¿En qué series televisivas descubri� ($x | CelestialBody_NP)?", "¿Por qué feminine descubrir ($x | CelestialBody_NP)?", "¿Por qué series televisivas descubri� ($x | CelestialBody_NP)?", "¿Quién descubrir ($x | CelestialBody_NP)?", "¿Quién descubri� ($x | CelestialBody_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "164",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos cuerpo celeste descubierto por ($x | Person_NP)", "¿Qué cuerpo celeste descubri� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Architect",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos dise�ar qué hayan dise�ar ($x | ArchitecturalStructure_NP)", "¿En qué arquitecto dise�� ($x | ArchitecturalStructure_NP)?", "¿En qué arquitectos dise�ar ($x | ArchitecturalStructure_NP)?", "¿Por qué arquitecto dise�� ($x | ArchitecturalStructure_NP)?", "¿Por qué arquitectos dise�ar ($x | ArchitecturalStructure_NP)?", "¿Quién dise�ar ($x | ArchitecturalStructure_NP)?", "¿Quién dise�� ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "167",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos estructura arquitect�nica dise�ado por ($x | Architect_NP)", "¿Qué estructura arquitect�nica dise�� ($x | Architect_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "168",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "169",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos desarrollar qué hayan desarrollar ($x | Agent_NP)", "¿Cual desarrollar ($x | Agent_NP)?", "¿Cual desarroll� ($x | Agent_NP)?", "¿En qué compa�ia desarroll� ($x | Agent_NP)?", "¿En qué compa�ias desarrollar ($x | Agent_NP)?", "¿Por qué compa�ia desarroll� ($x | Agent_NP)?", "¿Por qué compa�ias desarrollar ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "VideoGame",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos masculine desarrollado por ($x | VideoGame_NP)", "¿Qué masculine desarroll� ($x | VideoGame_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "VideoGame",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "172",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos desarrollar qué hayan desarrollar ($x | Software_NP)", "¿En qué masculine desarroll� ($x | Software_NP)?", "¿En qué software desarrollar ($x | Software_NP)?", "¿Por qué masculine desarroll� ($x | Software_NP)?", "¿Por qué software desarrollar ($x | Software_NP)?", "¿Quién desarrollar ($x | Software_NP)?", "¿Quién desarroll� ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "173",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Software",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos videojuegos desarrollado por ($x | Company_NP)", "¿Qué videojuegos desarroll� ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "174",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Software",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#to_Marry_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos casarse qué hayan casarse ($x | Person_NP)", "¿En qué feminine casarse ($x | Person_NP)?", "¿En qué series televisivas se casa ($x | Person_NP)?", "¿Por qué feminine casarse ($x | Person_NP)?", "¿Por qué series televisivas se casa ($x | Person_NP)?", "¿Quién casarse ($x | Person_NP)?", "¿Quién eran series televisivas que se casa ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#to_Marry_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "177",
    "lexicalEntryUri" : "http://localhost:8080#to_Marry_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "178",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos escribir qué hayan escribir ($x | Book_NP)", "¿En qué feminine escribir ($x | Book_NP)?", "¿En qué series televisivas escribi� ($x | Book_NP)?", "¿Por qué feminine escribir ($x | Book_NP)?", "¿Por qué series televisivas escribi� ($x | Book_NP)?", "¿Quién escribir ($x | Book_NP)?", "¿Quién escribi� ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "179",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos persona escrito por ($x | Person_NP)", "¿Qué persona escribi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "181",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos inspirar qué hayan inspirar ($x | Person_NP)", "¿En qué feminine inspirar ($x | Person_NP)?", "¿En qué series televisivas inspir� ($x | Person_NP)?", "¿Por qué feminine inspirar ($x | Person_NP)?", "¿Por qué series televisivas inspir� ($x | Person_NP)?", "¿Quién eran series televisivas que inspir� ($x | Person_NP)?", "¿Quién inspirar ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "182",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "183",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "184",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos escribir qué hayan escribir ($x | Song_NP)", "¿En qué feminine escribir ($x | Song_NP)?", "¿En qué series televisivas escribi� ($x | Song_NP)?", "¿Por qué feminine escribir ($x | Song_NP)?", "¿Por qué series televisivas escribi� ($x | Song_NP)?", "¿Quién escribir ($x | Song_NP)?", "¿Quién escribi� ($x | Song_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos canci�n escrito por ($x | Person_NP)", "¿Qué canci�n escribi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "186",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "187",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Artwork",
    "returnType" : "Museum",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos exhibit qué hayan exhibit ($x | Artwork_NP)", "¿Cual exhibit ($x | Artwork_NP)?", "¿Cual exhibi� ($x | Artwork_NP)?", "¿En qué museo exhibi� ($x | Artwork_NP)?", "¿En qué museos exhibit ($x | Artwork_NP)?", "¿Por qué museo exhibi� ($x | Artwork_NP)?", "¿Por qué museos exhibit ($x | Artwork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "188",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos obra de arte exhibido por ($x | Museum_NP)", "¿Qué obra de arte exhibi� ($x | Museum_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "189",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#to_hablar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Country",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos hablar qué hayan hablar ($x | Language_NP)", "¿Cual hablar ($x | Language_NP)?", "¿Cual habl� ($x | Language_NP)?", "¿En qué masculine habl� ($x | Language_NP)?", "¿En qué pa�s hablar ($x | Language_NP)?", "¿Por qué masculine habl� ($x | Language_NP)?", "¿Por qué pa�s hablar ($x | Language_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "191",
    "lexicalEntryUri" : "http://localhost:8080#to_hablar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos pa�ses hablado in ($x | Country_NP)", "¿Qué pa�ses habl� ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "192",
    "lexicalEntryUri" : "http://localhost:8080#to_hablar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "193",
    "lexicalEntryUri" : "http://localhost:8080#to_atender",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Airline",
    "returnType" : "Airport",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos atender qué hayan atender ($x | Airline_NP)", "¿Cual atender ($x | Airline_NP)?", "¿Cual atendi� ($x | Airline_NP)?", "¿En qué aeropuerto atendi� ($x | Airline_NP)?", "¿En qué aeropuertos atender ($x | Airline_NP)?", "¿Por qué aeropuerto atendi� ($x | Airline_NP)?", "¿Por qué aeropuertos atender ($x | Airline_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "194",
    "lexicalEntryUri" : "http://localhost:8080#to_atender",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos aerol�nea atendido por ($x | Airport_NP)", "¿Qué aerol�nea atendi� ($x | Airport_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#to_atender",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "196",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos dise�ar qué hayan dise�ar ($x | TelevisionShow_NP)", "¿En qué compa�ia dise�� ($x | TelevisionShow_NP)?", "¿En qué compa�ias dise�ar ($x | TelevisionShow_NP)?", "¿Por qué compa�ia dise�� ($x | TelevisionShow_NP)?", "¿Por qué compa�ias dise�ar ($x | TelevisionShow_NP)?", "¿Quién dise�ar ($x | TelevisionShow_NP)?", "¿Quién dise�� ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "197",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos feminine dise�ado por ($x | Agent_NP)", "¿Qué feminine dise�� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "198",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "199",
    "lexicalEntryUri" : "http://localhost:8080#influenciared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#influenciared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "201",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_3ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "202",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_3ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "203",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#Marry_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "206",
    "lexicalEntryUri" : "http://localhost:8080#Marry_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "207",
    "lexicalEntryUri" : "http://localhost:8080#inspirar_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "208",
    "lexicalEntryUri" : "http://localhost:8080#inspirar_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#cruzared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#cruzared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "211",
    "lexicalEntryUri" : "http://localhost:8080#crear_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "212",
    "lexicalEntryUri" : "http://localhost:8080#crear_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "213",
    "lexicalEntryUri" : "http://localhost:8080#escribir_3ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "214",
    "lexicalEntryUri" : "http://localhost:8080#escribir_3ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#compusoed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "216",
    "lexicalEntryUri" : "http://localhost:8080#compusoed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "217",
    "lexicalEntryUri" : "http://localhost:8080#descubrired",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#descubrired",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "219",
    "lexicalEntryUri" : "http://localhost:8080#escribir_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "220",
    "lexicalEntryUri" : "http://localhost:8080#escribir_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "221",
    "lexicalEntryUri" : "http://localhost:8080#actuadoed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "222",
    "lexicalEntryUri" : "http://localhost:8080#actuadoed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#operared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "224",
    "lexicalEntryUri" : "http://localhost:8080#operared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "225",
    "lexicalEntryUri" : "http://localhost:8080#ganared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "226",
    "lexicalEntryUri" : "http://localhost:8080#ganared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#publicared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "228",
    "lexicalEntryUri" : "http://localhost:8080#publicared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "229",
    "lexicalEntryUri" : "http://localhost:8080#exhibited",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "230",
    "lexicalEntryUri" : "http://localhost:8080#exhibited",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "233",
    "lexicalEntryUri" : "http://localhost:8080#hablared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "234",
    "lexicalEntryUri" : "http://localhost:8080#hablared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "235",
    "lexicalEntryUri" : "http://localhost:8080#dirigired",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#dirigired",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#crear_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "238",
    "lexicalEntryUri" : "http://localhost:8080#crear_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "239",
    "lexicalEntryUri" : "http://localhost:8080#fundar_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "240",
    "lexicalEntryUri" : "http://localhost:8080#fundar_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#Play_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#Play_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "243",
    "lexicalEntryUri" : "http://localhost:8080#inspirar_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "244",
    "lexicalEntryUri" : "http://localhost:8080#inspirar_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#dise�ared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#dise�ared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "247",
    "lexicalEntryUri" : "http://localhost:8080#moderared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "248",
    "lexicalEntryUri" : "http://localhost:8080#moderared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "249",
    "lexicalEntryUri" : "http://localhost:8080#atendered",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#atendered",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "251",
    "lexicalEntryUri" : "http://localhost:8080#play_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "252",
    "lexicalEntryUri" : "http://localhost:8080#play_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "253",
    "lexicalEntryUri" : "http://localhost:8080#desarrollared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "254",
    "lexicalEntryUri" : "http://localhost:8080#desarrollared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "255",
    "lexicalEntryUri" : "http://localhost:8080#escribir_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "256",
    "lexicalEntryUri" : "http://localhost:8080#escribir_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "257",
    "lexicalEntryUri" : "http://localhost:8080#expresared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "258",
    "lexicalEntryUri" : "http://localhost:8080#expresared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "259",
    "lexicalEntryUri" : null,
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Location",
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>)\n    (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>)\n  ))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  } ]
}